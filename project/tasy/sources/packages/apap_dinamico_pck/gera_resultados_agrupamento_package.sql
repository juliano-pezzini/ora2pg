-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE apap_dinamico_pck.gera_resultados_agrupamento () AS $body$
DECLARE

  qt_acumulado_dia_w		   double precision;
  dt_entrada_setor_w         timestamp;
  ie_cursor_w			         varchar(1);
  nr_hora_ant_w			      smallint;
  ie_alteracao_w			      double precision;
  ie_alteracao_ww            double precision;
  ie_tipo_dosagem_ww		   varchar(5);
  qt_dosagem_w			      double precision;
  qt_dosagem_ww              double precision;
  nr_hora_w			         smallint;
  nr_hora_ww			         smallint;
  dt_alteracao_w             timestamp;
  dt_alteracao_ww            timestamp;
  nr_seq_soluc_evento_w      bigint;
  nr_prescricao_ww		      bigint;
  nr_seq_solucao_ww		      integer;
  qt_dose_terap_w			   double precision := 0;
  qt_peso_prescr_w		      real;
  cd_material_w			      bigint;
  qt_dose_w			         double precision;
  cd_unidade_medida_dose_w   varchar(30);
  qt_solucao_w			      double precision;
  qt_dose_total_w			   double precision;
  qt_dose_interv_w		      double precision;
  qt_dose_medic_w			   double precision;
  ds_unid_med_w			      varchar(40);
  ds_dosagem_w			      varchar(100);
  qt_dosagem_www			      double precision;
  ind				            bigint;
  qt_hora_w			         smallint;
  dt_customizada_w           timestamp;
  ind_dia_w			         bigint;
  dias_w				         smallint;
  ds_dosagem_ant_w		      varchar(100);
  qt_dosagem_ant_w		      double precision;
  nr_hora_dif_w			      bigint;
  qt_dias_w			         bigint;
  dt_customizada2_w          timestamp;
  indice_w                   bigint;
  qt_daily_dose_w            bigint;
  qt_gasoterapia_ant_w       prescr_gasoterapia_evento.qt_gasoterapia%type;
  qt_gasoterapia_w           prescr_gasoterapia_evento.qt_gasoterapia%type;
  ie_evento_w                prescr_gasoterapia_evento.ie_evento%type;
  nr_prescricao_w            prescr_medica.nr_prescricao%type;
  nr_seq_gasoterapia_w       prescr_gasoterapia.nr_sequencia%type;
  dt_atualizacao_w           timestamp := null;
  dt_next_w                  timestamp := null;
  ie_previsto_w				 varchar(1) := 'N';
  vl_param_regra_iconeCP_w              varchar(1) := 'N';	
  dt_anterior_apap_w         timestamp;															

  c_consultas CURSOR FOR
	SELECT  distinct c.ie_informacao,
			c.nr_ficha_tecnica,
			coalesce(c.ie_controla_adep,'N') ie_controla_adep,
			c.ds_unid_med ie_tipo_dosagem,
			c.nr_seq_gas,
			c.cd_material,
			c.nr_prescricao,
			c.nr_seq_solucao,
			c.ie_tipo_dieta,
			c.nr_seq_cpoe,
			c.ie_controle_tempo,
			c.nr_seq_gqa_prot_pac,
			c.nr_seq_disp_pac,
			c.nr_seq_diagnostico,
			c.ie_tipo_elemento,
			c.nr_seq_intervention,
			c.ie_tipo_informacao
	from    table(get_grupo_apap) b,
			table(get_linha_apap) c
	where   b.nr_sequencia = c.nr_seq_apap_grupo;

  c_balanco_hidrico CURSOR FOR
	SELECT  pkg_date_utils.get_time(dt_medida,to_char(trunc(dt_medida, 'hh24'), 'hh24:mi:ss')) dt_apap,
			sum(CASE WHEN ie_perda_ganho='P' THEN  qt_volume  ELSE 0 END ) qt_perda,
			sum(CASE WHEN ie_perda_ganho='G' THEN  qt_volume  ELSE 0 END ) qt_ganho
	from    table(get_balanco_hidrico)
	where   ((current_setting('apap_dinamico_pck.cd_setor_atendimento_w')::setor_atendimento.cd_setor_atendimento%coalesce(type::text, '') = '') or (coalesce(cd_setor_atendimento, current_setting('apap_dinamico_pck.cd_setor_atendimento_w')::setor_atendimento.cd_setor_atendimento%type) = current_setting('apap_dinamico_pck.cd_setor_atendimento_w')::setor_atendimento.cd_setor_atendimento%type))
	and     dt_medida between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp
	group by
			pkg_date_utils.get_time(dt_medida,to_char(trunc(dt_medida, 'hh24'), 'hh24:mi:ss')),
			trunc(dt_medida, 'hh24')
	order by
			dt_apap;

  c_referencia CURSOR FOR
	SELECT  a.dt_referencia
	from    (WITH RECURSIVE cte AS (
SELECT trunc((pkg_date_utils.start_of(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp, 'MONTH')) + (level - 1)) dt_referencia
			
			connect	by ((pkg_date_utils.start_of(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp, 'MONTH')) + (level - 1)) < pkg_date_utils.end_of(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp, 'MONTH')  UNION ALL
SELECT trunc((pkg_date_utils.start_of(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp, 'MONTH')) + (level - 1)) dt_referencia
			
			connect	by ((pkg_date_utils.start_of(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp, 'MONTH')) + (level - 1)) < pkg_date_utils.end_of(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp, 'MONTH') JOIN cte c ON ()

) SELECT * FROM cte;
) a
	where   dt_referencia between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp;

	c_drogas_especiais CURSOR(nr_ficha_tecnica_p  bigint, ie_controla_adep_p  text) FOR
	SELECT  somente_numero(to_char(dt_alteracao, 'hh24')) nr_hora,
			dt_alteracao,
			qt_dosagem,
			ie_tipo_dosagem,
			ie_alteracao,
			nr_prescricao,
			nr_seq_solucao,
			nr_sequencia,
			qt_peso
	from    table(get_drogas_especiais)
	where   ((ie_controla_adep_p = 'N') or (coalesce(ie_apap, 'SV') = 'SV'))
	and     obter_se_solucao_apap(nr_prescricao, nr_seq_solucao, nr_ficha_tecnica_p) = 'S'
	order by
			dt_alteracao,
			nr_prescricao;

  c_gasoterapia CURSOR(nr_seq_gas_p  bigint) FOR
	SELECT  somente_numero(to_char(dt_evento, 'hh24')) nr_hora,
			dt_evento,
			qt_gasoterapia,
			ie_evento,
			nr_prescricao,
			nr_sequencia,
			ie_unidade_medida
	from    table(get_gasoterapia)
	where   nr_seq_gas = nr_seq_gas_p
	order by
			dt_evento,
			nr_prescricao;
	
  c_itens_administrados CURSOR(cd_material_p  bigint) FOR
	SELECT  nr_sequencia,
			dt_fim_horario,
			pkg_date_utils.get_time(dt_fim_horario, to_char(round(dt_fim_horario, 'hh24'), 'hh24:mi:ss')) dt_apap,
			qt_dose,
			cd_material,
			ds_material
	from    table(get_itens_administrados)
	where   cd_material = cd_material_p;

  c_itens_pendentes CURSOR(cd_material_p  bigint) FOR
	SELECT  nr_sequencia,
			dt_inicio_horario,
			pkg_date_utils.get_time(dt_inicio_horario,to_char(round(dt_inicio_horario, 'hh24'), 'hh24:mi:ss')) dt_apap,
			qt_dose,
			cd_material,
			ds_material
	from    table(get_itens_pendentes)
	where   cd_material = cd_material_p;

  c_solucao_valores CURSOR(nr_prescricao_p  bigint, nr_seq_solucao_p  bigint) FOR
	SELECT  max(a.qt_volume) qt_volume,
			a.dt_apap
	from	  atendimento_perda_ganho a
	where	  a.nr_seq_evento_adep in (SELECT b.nr_sequencia
									from    prescr_solucao_evento b,
											prescr_solucao a
									where   b.nr_prescricao = a.nr_prescricao
									and     b.nr_seq_solucao = a.nr_seq_solucao
									and     b.nr_seq_solucao = nr_seq_solucao_p
									and     b.nr_prescricao = nr_prescricao_p)
	and     dt_apap between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp
	and     a.ie_situacao = 'A'
	and     (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	group by
			a.dt_apap;

  c_medic_adep CURSOR(nr_seq_mat_cpoe_p		bigint) FOR
	SELECT  a.dt_horario,
			a.dt_inicio_horario,
			a.dt_fim_horario,
			obter_status_hor_material(a.dt_fim_horario,a.dt_suspensao) ie_status,
			( SELECT  max(obter_qt_dose_comp(c.nr_sequencia, c.qt_dose_adm))
			  from    prescr_mat_alteracao c
			  where   c.nr_seq_horario = a.nr_sequencia
			  and     c.ie_alteracao = 3
			  and     coalesce(c.ie_evento_valido, 'S')= 'S') qt_dose_adm,
			( select  max(c.cd_um_dose_adm)
			  from    prescr_mat_alteracao c
			  where   c.nr_seq_horario = a.nr_sequencia
			  and     c.ie_alteracao = 3
			  and     coalesce(c.ie_evento_valido, 'S') = 'S') cd_um_dose_adm,
			a.cd_unidade_medida_dose cd_unidade_medida_prescr,
			b.cd_material,
			( select  max(c.cd_pessoa_fisica)
			  from    prescr_mat_alteracao c
			  where   c.nr_seq_horario = a.nr_sequencia
			  and     c.ie_alteracao = 3
			  and     coalesce(c.ie_evento_valido, 'S')= 'S') cd_pessoa_fisica_adm,
			pm.cd_medico cd_pessoa_fisica_prescr,
			coalesce(b.qt_dose, a.qt_dose) qt_dose_prescr
	from    prescr_mat_hor a,
			prescr_material b,
			prescr_medica pm
	where   a.nr_seq_material = b.nr_sequencia
	and     a.nr_prescricao = b.nr_prescricao
	and     pm.nr_prescricao = a.nr_prescricao
	and     b.ie_agrupador = 1
	and     coalesce(a.ie_situacao,'A') = 'A'
	and     b.nr_seq_mat_cpoe = nr_seq_mat_cpoe_p;

	c_solucoes_adep CURSOR(nr_seq_mat_cpoe_p		bigint) FOR
	SELECT	distinct
			c.dt_horario,
			c.dt_inicio_horario,
			c.dt_fim_horario,
			( SELECT  max(y.qt_vol_infundido)
			  from    prescr_solucao_evento y
			  where   y.nr_prescricao = c.nr_prescricao
			  and     y.nr_seq_solucao = c.nr_seq_solucao
			  and     y.nr_etapa_evento = c.nr_etapa_sol
			  and     coalesce(y.ie_evento_valido, 'S') = 'S'
			  and     y.ie_alteracao in (2,4)) qt_dose_adm,
			c.ie_status,
			x.nr_seq_solucao,
			x.nr_prescricao,
			c.cd_unidade_medida_prescr,
			c.cd_material,
			c.cd_um_dose_adm,
			( select  max(y.cd_pessoa_fisica)
			  from    prescr_solucao_evento y
			  where   y.nr_prescricao = c.nr_prescricao
			  and     y.nr_seq_solucao = c.nr_seq_solucao
			  and     y.nr_etapa_evento = c.nr_etapa_sol
			  and     coalesce(y.ie_evento_valido, 'S') = 'S'
			  and     y.ie_alteracao in (2,4)) cd_pessoa_fisica_adm,
			c.cd_medico cd_pessoa_fisica_prescr,
			( select  max(y.qt_volume_fase)
			  from    prescr_solucao_evento y
			  where   y.nr_prescricao = c.nr_prescricao
			  and     y.nr_seq_solucao = c.nr_seq_solucao
			  and     y.nr_etapa_evento = c.nr_etapa_sol
			  and     coalesce(y.ie_evento_valido, 'S') = 'S') qt_dose_prescr
	from    prescr_solucao x,
			prescr_medica a,
			(select c.dt_inicio_horario,
					c.dt_fim_horario,
					c.dt_suspensao,
					c.dt_interrupcao,
					c.ie_dose_especial,
					c.nr_seq_processo,
					c.nr_seq_area_prep,
					c.nr_etapa_sol,
					c.dt_prev_fim_horario,
					c.nr_prescricao,
					c.nr_seq_solucao,
					c.dt_horario,
					c.nr_sequencia,
					c.dt_primeira_checagem,
					c.dt_recusa,
					obter_status_hor_sol_adep(c.dt_inicio_horario, c.dt_fim_horario, c.dt_suspensao, c.dt_interrupcao, c.ie_dose_especial, null, null, c.nr_prescricao, null, c.dt_primeira_checagem) ie_status,
					c.cd_unidade_medida_dose cd_unidade_medida_prescr,
					v.cd_material,
					( select  max(pma.cd_um_dose_adm)
					  from    prescr_mat_alteracao pma
					  where   pma.nr_seq_horario = c.nr_sequencia
					  and     pma.ie_alteracao = 3
					  and     coalesce(pma.ie_evento_valido, 'S') = 'S') cd_um_dose_adm,
					a.cd_medico
			from    prescr_medica a,
					prescr_solucao x,
					prescr_material v,
					prescr_mat_hor c
			where   a.nr_prescricao = v.nr_prescricao
			and     v.nr_prescricao = c.nr_prescricao
			and     x.nr_prescricao = v.nr_prescricao
			and     x.nr_seq_solucao = v.nr_sequencia_solucao
			and     v.nr_sequencia = c.nr_seq_material
			and     v.nr_seq_mat_cpoe = nr_seq_mat_cpoe_p
			and     coalesce(c.ie_situacao,'A') = 'A'
			and     c.ie_agrupador = 4
			and     coalesce(v.nr_seq_substituto::text, '') = '') c
	where   x.nr_prescricao = c.nr_prescricao
	and     x.nr_seq_solucao = c.nr_seq_solucao
	and     x.nr_prescricao = a.nr_prescricao
	and     c.nr_prescricao = a.nr_prescricao
	and     obter_nr_seq_cpoe_sol(x.nr_prescricao, x.nr_seq_solucao) = nr_seq_mat_cpoe_p;

  c_solucao_prevista CURSOR(nr_seq_solucao_p	 bigint, nr_prescricao_p	 bigint) FOR
		SELECT  max(a.qt_volume) qt_volume,
			a.dt_apap
		from    atendimento_perda_ganho a
		where   a.nr_seq_evento_adep in (SELECT	b.nr_sequencia
									from    prescr_solucao_evento b,
											prescr_solucao a
									where   b.nr_prescricao = a.nr_prescricao
									and     b.nr_seq_solucao = a.nr_seq_solucao
									and     b.nr_seq_solucao = nr_seq_solucao_p
									and     b.nr_prescricao = nr_prescricao_p)
		and     dt_apap between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp
		and     coalesce(a.ie_situacao,'A') = 'A'
		group by
			a.dt_apap;	

  c_nutricao_enteral CURSOR(nr_seq_cpoe_p  bigint) FOR
	SELECT
			distinct
			pmh.dt_horario,
			(SELECT max(pse.qt_vol_infundido)
			from    prescr_solucao_evento pse
			where   pse.nr_prescricao = pmh.nr_prescricao
			and     pse.nr_seq_solucao = pmh.nr_seq_solucao
			and     pse.nr_etapa_evento = pmh.nr_etapa_sol
			and     coalesce(pse.ie_evento_valido, 'S') = 'S'
			and     pse.ie_alteracao in (2,4)) qt_dose_adm,
			cd.nr_sequencia nr_seq_cpoe,
			cpoe_obter_dt_fim_etapa_ent(pmh.dt_horario, cd.hr_prim_horario, cd.qt_tempo_pausa, coalesce(cd.qt_hora_fase, cd.qt_tempo_aplic), cd.nr_ocorrencia, cd.ie_continuo) as dt_fim,
			obter_status_hor_sol_adep(pmh.dt_inicio_horario, pmh.dt_fim_horario, pmh.dt_suspensao, pmh.dt_interrupcao, pmh.ie_dose_especial, null, null, pmh.nr_prescricao, null, pmh.dt_primeira_checagem) ie_status,
			apap_dinamico_pck.get_ds_tooltip_cpoe(cd.nr_sequencia) ds_tooltip,
			(select max(pse.cd_pessoa_fisica)
			from    prescr_solucao_evento pse
			where   pse.nr_prescricao = pmh.nr_prescricao
			and     pse.nr_seq_solucao = pmh.nr_seq_solucao
			and     pse.nr_etapa_evento = pmh.nr_etapa_sol
			and     coalesce(pse.ie_evento_valido, 'S') = 'S'
			and     pse.ie_alteracao in (2,4)) cd_pessoa_fisica_adm,
			pm.cd_medico cd_pessoa_fisica_prescr,
			cd.qt_volume_total qt_dose_prescr
	from    prescr_medica pm,
			prescr_mat_hor pmh,
			prescr_material pmat,
			cpoe_dieta cd
	where   pm.nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
	and     pm.nr_prescricao = pmat.nr_prescricao
	and     pmat.nr_prescricao = pmh.nr_prescricao
	and     pmat.nr_sequencia = pmh.nr_seq_material
	and     cd.nr_sequencia = pmat.nr_seq_dieta_cpoe
	and     pmat.ie_agrupador = 8
	and     coalesce(pmh.ie_horario_especial, 'N') = 'N'
	and     pmat.nr_seq_dieta_cpoe = nr_seq_cpoe_p
	and (pmh.dt_horario between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp
			or cd.dt_fim between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp
			or pmh.dt_horario < current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and cd.dt_fim > current_setting('apap_dinamico_pck.dt_final_w')::timestamp);

  c_nut_dieta_oral CURSOR(nr_seq_cpoe_p  bigint) FOR
	SELECT  pdh.dt_horario,
			pdh.nr_prescricao,
			pd.nr_seq_dieta_cpoe nr_seq_cpoe,
			pdh.dt_fim_horario,
			pdh.dt_suspensao,
			max(( SELECT  max(obter_valor_dominio(10461, d.nr_seq_qualidade))
				  from    prescr_mat_alteracao d
				  where   d.nr_seq_horario_dieta = pdh.nr_sequencia
				  and     d.ie_alteracao = 3
				  and     coalesce(d.ie_evento_valido, 'S') = 'S')) qt_dose_adm,
			max(( select  max(e.ds_satisfacao)
				  from    prescr_mat_alteracao d,
						  adep_satisfacao_refeicao e
				  where   d.nr_seq_horario_dieta = pdh.nr_sequencia
				  and     d.nr_seq_satisfacao = e.nr_sequencia
				  and     d.ie_alteracao = 3
				  and     e.ie_situacao = 'A'
				  and     coalesce(d.ie_evento_valido, 'S') = 'S')) ds_satisfacao,
			obter_status_hor_material(pdh.dt_fim_horario, pdh.dt_suspensao) ie_status,
			max(( select  max(obter_qt_dose_comp(pma.nr_sequencia, pma.qt_dose_adm))
				  from    prescr_mat_alteracao pma
				  where   pma.nr_seq_horario_dieta = pdh.nr_sequencia
				  and     pma.ie_alteracao = 3
				  and     coalesce(pma.ie_evento_valido, 'S') = 'S'))  qt_dose_grid,
			apap_dinamico_pck.get_ds_tooltip_cpoe(pd.nr_seq_dieta_cpoe) ds_tooltip,
			max(( select  max(d.cd_pessoa_fisica)
				  from    prescr_mat_alteracao d,
						  adep_satisfacao_refeicao e
				  where   d.nr_seq_horario_dieta = pdh.nr_sequencia
				  and     d.nr_seq_satisfacao = e.nr_sequencia
				  and     d.ie_alteracao = 3
				  and     e.ie_situacao = 'A'
				  and     coalesce(d.ie_evento_valido, 'S') = 'S')) cd_pessoa_fisica_adm,
			pm.cd_medico cd_pessoa_fisica_prescr,
			sum(0) qt_dose_prescr
	from    prescr_medica pm,
			prescr_dieta pd,
			prescr_dieta_hor pdh
	where   pm.nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
	and     pd.nr_prescricao = pm.nr_prescricao
	and     pd.nr_seq_dieta_cpoe = nr_seq_cpoe_p
	and     pdh.nr_prescricao = pd.nr_prescricao
	and     pdh.nr_seq_dieta = pd.nr_sequencia
	and     coalesce(pdh.ie_situacao, 'A') = 'A'
	and     pdh.dt_horario between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp
	and     obter_se_horario_liberado(pdh.dt_lib_horario, pdh.dt_horario) = 'S'
	group by
			pdh.dt_horario,
			pdh.nr_prescricao,
			pd.nr_seq_dieta_cpoe,
			pdh.dt_fim_horario,
			pdh.dt_suspensao,
			pm.cd_medico
	order by
			pdh.dt_horario,
			pdh.nr_prescricao;

  c_nut_suplemento_oral CURSOR(nr_seq_cpoe_p  bigint) FOR
	SELECT  distinct
			pmh.dt_horario,
			pmh.nr_prescricao,
			pm.nr_seq_dieta_cpoe nr_seq_cpoe,
			pmh.dt_fim_horario,
			pmh.dt_suspensao,
			( SELECT  max(pma.qt_dose_adm)
			  from    prescr_mat_alteracao pma
			  where   pma.nr_seq_horario = pmh.nr_sequencia
			  and     pma.ie_alteracao = 3
			  and     coalesce(pma.ie_evento_valido, 'S') = 'S') qt_dose_adm,
			( select  max(pma.cd_um_dose_adm)
			  from    prescr_mat_alteracao pma
			  where   pma.nr_seq_horario = pmh.nr_sequencia
			  and     pma.ie_alteracao = 3
			  and     coalesce(pma.ie_evento_valido, 'S') = 'S') cd_um_dose_adm,
			obter_status_hor_sol_adep(pmh.dt_inicio_horario, pmh.dt_fim_horario, pmh.dt_suspensao, pmh.dt_interrupcao, pmh.ie_dose_especial, null, null, pmh.nr_prescricao, null, pmh.dt_primeira_checagem) ie_status,
			apap_dinamico_pck.get_ds_tooltip_cpoe(pm.nr_seq_dieta_cpoe) ds_tooltip,
			pmh.cd_unidade_medida_dose cd_unidade_medida_prescr,
			pm.cd_material,
			( select  max(pma.cd_pessoa_fisica)
			  from    prescr_mat_alteracao pma
			  where   pma.nr_seq_horario = pmh.nr_sequencia
			  and     pma.ie_alteracao = 3
			  and     coalesce(pma.ie_evento_valido, 'S') = 'S') cd_pessoa_fisica_adm,
			pmed.cd_medico cd_pessoa_fisica_prescr,
			cd.qt_dose qt_dose_prescr
	from    prescr_medica pmed,
			prescr_material pm,
			prescr_mat_hor pmh,
			cpoe_dieta cd
	where   pmed.nr_atendimento	= current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
	and     pm.nr_prescricao = pmed.nr_prescricao
	and     pm.nr_seq_dieta_cpoe = nr_seq_cpoe_p
	and     pmh.nr_prescricao = pm.nr_prescricao
	and     pmh.nr_seq_material = pm.nr_sequencia
	and     pmh.ie_agrupador = pm.ie_agrupador
	and     pmh.ie_agrupador = 12
	and     coalesce(pmh.ie_situacao, 'A') = 'A'
	and     cd.nr_sequencia = pm.nr_seq_dieta_cpoe
	and     pmh.dt_horario between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp
	and     obter_se_horario_liberado(pmh.dt_lib_horario, pmh.dt_horario) = 'S'
	order by
			pmh.dt_horario,
			pmh.nr_prescricao;

  c_nut_leite_form_inf CURSOR(nr_seq_cpoe_p  bigint) FOR
	SELECT  distinct
			pmh.dt_horario,
			pmh.nr_prescricao,
			pm.nr_seq_dieta_cpoe nr_seq_cpoe,
			pmh.dt_fim_horario,
			pmh.dt_suspensao,
			( SELECT  coalesce(max(pma.qt_dose_adm), 0)
			  from    prescr_mat_alteracao pma
			  where   pma.nr_seq_horario = pmh.nr_sequencia
			  and     pma.ie_alteracao = 3
			  and     coalesce(pma.ie_evento_valido, 'S') = 'S') qt_dose_adm,
			( select  max(pma.cd_um_dose_adm)
			  from    prescr_mat_alteracao pma
			  where   pma.nr_seq_horario = pmh.nr_sequencia
			  and     pma.ie_alteracao = 3
			  and     coalesce(pma.ie_evento_valido, 'S') = 'S') cd_um_dose_adm,
			obter_status_hor_sol_adep(pmh.dt_inicio_horario, pmh.dt_fim_horario, pmh.dt_suspensao, pmh.dt_interrupcao, pmh.ie_dose_especial, null, null, pmh.nr_prescricao, null, pmh.dt_primeira_checagem) ie_status,
			apap_dinamico_pck.get_ds_tooltip_cpoe(pm.nr_seq_dieta_cpoe) ds_tooltip,
			pmh.cd_unidade_medida_dose cd_unidade_medida_prescr,
			pm.cd_material,
			( select  max(pma.cd_pessoa_fisica)
			  from    prescr_mat_alteracao pma
			  where   pma.nr_seq_horario = pmh.nr_sequencia
			  and     pma.ie_alteracao = 3
			  and     coalesce(pma.ie_evento_valido, 'S') = 'S') cd_pessoa_fisica_adm,
			pmed.cd_medico cd_pessoa_fisica_prescr,
			cd.qt_dose_prod1 qt_dose_prescr
	from    prescr_medica pmed,
			prescr_material pm,
			prescr_mat_hor pmh,
			cpoe_dieta cd
	where   pmed.nr_atendimento	= current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
	and     pm.nr_prescricao = pmed.nr_prescricao
	and     pm.nr_seq_dieta_cpoe = nr_seq_cpoe_p
	and     pmh.nr_prescricao = pm.nr_prescricao
	and     pmh.nr_seq_material = pm.nr_sequencia
	and     pmh.ie_agrupador = pm.ie_agrupador
	and     pmh.ie_agrupador = 16
	and     coalesce(pmh.ie_situacao, 'A') = 'A'
	and     cd.nr_sequencia = pm.nr_seq_dieta_cpoe
	and     pmh.dt_horario between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp
	and     obter_se_horario_liberado(pmh.dt_lib_horario, pmh.dt_horario) = 'S'
	order by
			pmh.dt_horario,
			pmh.nr_prescricao;

  c_nut_npt_adulta CURSOR(nr_seq_cpoe_p  bigint) FOR
	SELECT    nph.dt_horario,
			  pm.nr_prescricao,
			  nph.dt_suspensao,
			  nph.dt_fim_horario,
			  np.nr_seq_npt_cpoe nr_seq_cpoe,
			  (SELECT sum(pse.qt_vol_infundido)
			  from    prescr_solucao_evento pse
			  where   pse.nr_prescricao = pm.nr_prescricao
			  and     pse.nr_seq_nut_neo = nph.nr_seq_nut_protocolo
			  and     pse.ie_alteracao in (2, 4)
			  and     coalesce(pse.ie_evento_valido, 'S') = 'S') qt_dose_adm,
			  (select max(obter_status_hor_sol_adep(cd.dt_inicio, nph.dt_fim_horario, nph.dt_suspensao, null, cd.ie_dieta_especial, null, null, pm.nr_prescricao, null))
			  from    cpoe_dieta cd
			  where   cd.nr_sequencia = np.nr_seq_npt_cpoe) ie_status,
			  apap_dinamico_pck.get_ds_tooltip_cpoe(np.nr_seq_npt_cpoe) ds_tooltip,
			  (select max(pse.cd_pessoa_fisica)
			  from    prescr_solucao_evento pse
			  where   pse.nr_prescricao = pm.nr_prescricao
			  and     pse.nr_seq_nut_neo = nph.nr_seq_nut_protocolo
			  and     pse.ie_alteracao in (2, 4)
			  and     coalesce(pse.ie_evento_valido, 'S') = 'S') cd_pessoa_fisica_adm,
			  pm.cd_medico cd_pessoa_fisica_prescr,
			  null qt_dose_prescr
	from      prescr_medica pm,
			  nut_pac np,
			  nut_paciente_hor nph
	where     pm.nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
	and       np.nr_prescricao = pm.nr_prescricao
	and       np.nr_seq_npt_cpoe = nr_seq_cpoe_p
	and       coalesce(np.ie_npt_adulta, 'S') = 'S'
	and       nph.nr_seq_nut_protocolo = np.nr_sequencia
	and       nph.dt_horario between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp
	order by
			  nph.dt_horario,
			  pm.nr_prescricao;

  c_nut_npt_infantil CURSOR(nr_seq_cpoe_p  bigint) FOR
	SELECT    nph.dt_horario,
			  pm.nr_prescricao,
			  nph.dt_suspensao,
			  nph.dt_fim_horario,
			  np.nr_seq_npt_cpoe nr_seq_cpoe,
			  (SELECT sum(pse.qt_vol_infundido)
			  from    prescr_solucao_evento pse
			  where   pse.nr_prescricao = pm.nr_prescricao
			  and     pse.nr_seq_nut_neo = nph.nr_seq_nut_protocolo
			  and     pse.ie_alteracao in (2, 4)
			  and     coalesce(pse.ie_evento_valido, 'S') = 'S') qt_dose_adm,
			  (select max(obter_status_hor_sol_adep(cd.dt_inicio, nph.dt_fim_horario, nph.dt_suspensao, null, cd.ie_dieta_especial, null, null, pm.nr_prescricao, null))
			  from    cpoe_dieta cd
			  where   cd.nr_sequencia = np.nr_seq_npt_cpoe) ie_status,
			  apap_dinamico_pck.get_ds_tooltip_cpoe(np.nr_seq_npt_cpoe) ds_tooltip,
			  (select max(pse.cd_pessoa_fisica)
			  from    prescr_solucao_evento pse
			  where   pse.nr_prescricao = pm.nr_prescricao
			  and     pse.nr_seq_nut_neo = nph.nr_seq_nut_protocolo
			  and     pse.ie_alteracao in (2, 4)
			  and     coalesce(pse.ie_evento_valido, 'S') = 'S') cd_pessoa_fisica_adm,
			  pm.cd_medico cd_pessoa_fisica_prescr,
			  null qt_dose_prescr
	from      prescr_medica pm,
			  nut_pac np,
			  nut_paciente_hor nph
	where     pm.nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
	and       np.nr_prescricao = pm.nr_prescricao
	and       np.nr_seq_npt_cpoe = nr_seq_cpoe_p
	and       coalesce(np.ie_npt_adulta, 'S') in ('N', 'P')
	and       nph.nr_seq_nut_protocolo = np.nr_sequencia
	and       nph.dt_horario between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp
	order by
			  nph.dt_horario,
			  pm.nr_prescricao;

  c_jejum CURSOR(nr_seq_cpoe_p  bigint) FOR
	SELECT
			distinct
			pm.nr_prescricao,
			rj.dt_inicio,
			rj.dt_fim,
			rj.nr_seq_dieta_cpoe nr_seq_cpoe,
			apap_dinamico_pck.get_ds_tooltip_cpoe(rj.nr_seq_dieta_cpoe) ds_tooltip,
			pm.cd_medico cd_pessoa_fisica_prescr
	from    prescr_medica pm,
			rep_jejum rj
	where   rj.nr_prescricao = pm.nr_prescricao
	and     pm.nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
	and     rj.nr_seq_dieta_cpoe = nr_seq_cpoe_p
	and (rj.dt_inicio between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp
			or rj.dt_fim between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp);

  c_eventos_atendimento CURSOR FOR
	SELECT  dt_entrada_unidade dt_apap,
			substr(obter_nome_curto_setor_atend(cd_setor_atendimento) || '-' || cd_unidade_basica || '-' || cd_unidade_compl, 1, 255) ds_resultado,
			'MV' ie_evento_tipo,
			dt_saida_unidade dt_fim
	from    atend_paciente_unidade
	where   nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
	and     dt_entrada_unidade between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp
	
union

	SELECT  dt_saida_temporaria dt_apap,
			obter_desc_expressao(1048701) ds_resultado,
			'MV' ie_evento_tipo,
			null dt_fim
	from    atend_paciente_unidade
	where   nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
	and     (dt_saida_temporaria IS NOT NULL AND dt_saida_temporaria::text <> '')
	and     dt_saida_temporaria between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp
	
union

	select  dt_retorno_saida_temporaria dt_apap,
			obter_desc_expressao(328871) ds_resultado,
			'MV' ie_evento_tipo,
			null dt_fim
	from    atend_paciente_unidade
	where   nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
	and     (dt_retorno_saida_temporaria IS NOT NULL AND dt_retorno_saida_temporaria::text <> '')
	and     dt_retorno_saida_temporaria between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp
	
union

	select  a.dt_calc dt_apap,
			obter_desc_expressao(1048701) ds_resultado,
			'MV' ie_evento_tipo,
			null dt_fim
	from    table(apap_dinamico_pck.get_dates_from_interval(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp, current_setting('apap_dinamico_pck.dt_final_w')::timestamp)) a,
			atend_paciente_unidade b,
			atendimento_paciente c
	where   b.nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
	and     c.nr_atendimento = b.nr_atendimento
	and     (b.dt_saida_temporaria IS NOT NULL AND b.dt_saida_temporaria::text <> '')
	and     a.dt_calc > b.dt_saida_temporaria
	and     a.dt_calc <= coalesce(b.dt_retorno_saida_temporaria, current_setting('apap_dinamico_pck.dt_final_w')::timestamp)
	and (coalesce(c.dt_alta::text, '') = '' or ((c.dt_alta IS NOT NULL AND c.dt_alta::text <> '') and a.dt_calc <= c.dt_alta))
	
union

	select  dt_apap,
			ds_resultado, 
			'EV' IE_EVENTO_TIPO, 
			dt_fim
	from (  select  dt_inicio_real dt_apap,
					substr(obter_desc_estrut_proc(null, null, null, c.cd_procedimento_princ, ie_origem_proced),1,150) ds_resultado,
					coalesce(dt_termino, dt_interrupcao) dt_fim,
					nr_atendimento
			from    cirurgia c
			where   nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
			and     dt_inicio_real between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp
			
union

			select  dt_agendamento dt_apap,
					substr(obter_exame_agenda(cd_procedimento, ie_origem_proced, nr_seq_proc_interno), 1, 240) ds_resultado,
					coalesce(dt_executada, dt_cancelamento) dt_fim,
					nr_atendimento
			from    agenda_paciente
			where   nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
			and     dt_agendamento between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp
			) alias40
	
union

	select  d.dt_atual dt_apap,
			to_char(trunc((d.dt_atual + 1) - dt_entrada) + 1) ds_resultado,
			'DA' ie_evento_tipo,
			current_setting('apap_dinamico_pck.dt_final_w')::timestamp dt_fim
	from    atendimento_paciente a,
			table(apap_dinamico_pck.obter_tabela_data(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp, current_setting('apap_dinamico_pck.dt_final_w')::timestamp)) d
	where   a.nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
	and     d.dt_atual between a.dt_entrada and coalesce(a.dt_alta, current_setting('apap_dinamico_pck.dt_final_w')::timestamp)
	
union

	select  coalesce(a.dt_entrada, clock_timestamp()) dt_apap, 
			CASE WHEN coalesce(a.dt_entrada::text, '') = '' THEN  ''  ELSE obter_desc_expressao(283216) END   ds_resultado,
			'DA' ie_evento_tipo,
			current_setting('apap_dinamico_pck.dt_final_w')::timestamp dt_fim
	from    atendimento_paciente a,
			table(apap_dinamico_pck.obter_tabela_data(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp, current_setting('apap_dinamico_pck.dt_final_w')::timestamp)) d
	where   a.nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
	and     d.dt_atual between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp
	
union

	select  coalesce(a.dt_alta, clock_timestamp()) dt_apap,
			CASE WHEN coalesce(a.dt_alta::text, '') = '' THEN  ''  ELSE obter_desc_expressao(283375) END  ds_resultado,
			'DA' ie_evento_tipo,
			current_setting('apap_dinamico_pck.dt_final_w')::timestamp dt_fim
	from    atendimento_paciente a,
			table(apap_dinamico_pck.obter_tabela_data(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp, current_setting('apap_dinamico_pck.dt_final_w')::timestamp)) d
	where   a.nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
	and     d.dt_atual between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp
	
union

	select  d.dt_atual dt_apap,
			case when(to_char(obter_dias_entre_datas(c.dt_termino,d.dt_atual))) < 0
			then '' else to_char(obter_dias_entre_datas(c.dt_termino,d.dt_atual)) end ds_resultado,
			'DC' ie_evento_tipo,
			current_setting('apap_dinamico_pck.dt_final_w')::timestamp dt_fim
	from    atendimento_paciente a,
			cirurgia c,
			table(apap_dinamico_pck.obter_tabela_data(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp, current_setting('apap_dinamico_pck.dt_final_w')::timestamp)) d
	where   a.nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
	and c.nr_cirurgia = (select max(w.nr_cirurgia) from cirurgia w where w.nr_atendimento = c.nr_atendimento and w.nr_atendimento = a.nr_atendimento)
	
union

		select  
				a.DT_DIALISE dt_apap,
				case 
						when((a.DT_INICIO_DIALISE IS NOT NULL AND a.DT_INICIO_DIALISE::text <> '') and coalesce(a.DT_CANCELAMENTO::text, '') = '') then a.nr_seq_paciente||' - '||obter_desc_expressao(297267)
						when (a.DT_CANCELAMENTO IS NOT NULL AND a.DT_CANCELAMENTO::text <> '') then a.nr_seq_paciente||' - '||obter_desc_expressao(1059248)
						when((a.DT_DIALISE IS NOT NULL AND a.DT_DIALISE::text <> '') and coalesce(a.DT_CANCELAMENTO::text, '') = '' and coalesce(a.DT_INICIO_DIALISE::text, '') = '') then a.nr_seq_paciente||' - '||obter_desc_expressao(311450) 
				end ds_resultado,
				'SD' ie_evento_tipo,
				a.DT_DIALISE dt_fim
		from    
				HD_DIALISE a

		where
				a.nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
				and a.DT_DIALISE between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp   
	
union

	select  coalesce(b.dt_real, b.dt_prevista) dt_apap,
			b.ds_dia_ciclo ds_resultado,
			'DQ' ie_tipo_evento,
			coalesce(b.dt_real, b.dt_prevista) dt_fim
	from    paciente_atendimento b
	where   coalesce(b.dt_real, b.dt_prevista) between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp
	and     nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
	
union

	select  e.dt_atual dt_apap,
			to_char(trunc(obter_dias_entre_datas(d.dt_ultima_menstruacao,e.dt_atual)/7)) ds_resultado,
			'SG' ie_tipo_evento,
			current_setting('apap_dinamico_pck.dt_final_w')::timestamp dt_fim
	from    atendimento_gravidez d,
				table(apap_dinamico_pck.obter_tabela_data(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp,current_setting('apap_dinamico_pck.dt_final_w')::timestamp)) e
	where (obter_dias_entre_datas(d.dt_ultima_menstruacao,current_setting('apap_dinamico_pck.dt_final_w')::timestamp)/7) between 0 and 41
	and     d.nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
	
union

	select  d.dt_atual dt_apap,
			case when(to_char(obter_dias_entre_datas(a.dt_fim_parto,d.dt_atual))) < 0
			then '' else to_char(obter_dias_entre_datas(a.dt_fim_parto,d.dt_atual)) end ds_resultado,
			'PP' ie_tipo_evento,
			current_setting('apap_dinamico_pck.dt_final_w')::timestamp dt_fim
	from    parto a,
			table(apap_dinamico_pck.obter_tabela_data(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp, current_setting('apap_dinamico_pck.dt_final_w')::timestamp)) d
	where   nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
	
union

	select  d.dt_atual dt_apap,
			to_char(Obter_Dias_Entre_Datas(a.dt_nascimento, d.dt_atual)) ds_resultado,
			'DN' ie_tipo_evento,
			current_setting('apap_dinamico_pck.dt_final_w')::timestamp dt_fim
	from    nascimento a,
			table(apap_dinamico_pck.obter_tabela_data(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp, current_setting('apap_dinamico_pck.dt_final_w')::timestamp)) d
	where   a.nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
	and     Obter_Dias_Entre_Datas(a.dt_nascimento, d.dt_atual) >= 0
	
union

	select  b.dt_atual dt_apap,
			to_char(trunc(obter_dias_entre_datas(a.dt_estimated_delivery, b.dt_atual) / 7)) ds_resultado,
			'IGC' ie_tipo_evento,
			current_setting('apap_dinamico_pck.dt_final_w')::timestamp dt_fim
	from    nascimento a,
			table(apap_dinamico_pck.obter_tabela_data(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp, current_setting('apap_dinamico_pck.dt_final_w')::timestamp)) b
	where   a.nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
	and     (a.dt_estimated_delivery IS NOT NULL AND a.dt_estimated_delivery::text <> '')
	and     obter_dias_entre_datas(a.dt_estimated_delivery, b.dt_atual) > 0;

  c_templates CURSOR FOR
	SELECT  eh.dt_registro dt_apap,
			obter_icone_apap('TP',null,'C') ds_resultado,
			obter_icone_apap('TP',null,'S') nr_seq_icone,
			'TE' ie_evento_tipo,
			eh.dt_registro dt_fim
	from    ehr_registro eh
	where   eh.nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
	and     coalesce(eh.dt_inativacao::text, '') = ''
	and     (eh.dt_liberacao IS NOT NULL AND eh.dt_liberacao::text <> '');

  w_c_cp_indicadores CURSOR FOR
		SELECT
				w.nr_sequencia,
				w.nr_seq_proc nr_seq_intervention,
				CASE WHEN obter_status_hor_interv(w.dt_fim_horario,w.dt_suspensao)='A' THEN obter_icone_apap('CPA',null,'C') WHEN obter_status_hor_interv(w.dt_fim_horario,w.dt_suspensao)='S' THEN obter_icone_apap('CPS',null,'C') WHEN obter_status_hor_interv(w.dt_fim_horario,w.dt_suspensao)='N' THEN obter_icone_apap('CPN',null,'C') END  ds_resultado,
				CASE WHEN obter_status_hor_interv(w.dt_fim_horario,w.dt_suspensao)='A' THEN obter_icone_apap('CPA',null,'S') WHEN obter_status_hor_interv(w.dt_fim_horario,w.dt_suspensao)='S' THEN obter_icone_apap('CPS',null,'S') WHEN obter_status_hor_interv(w.dt_fim_horario,w.dt_suspensao)='S' THEN obter_icone_apap('CPN',null,'S') END  nr_seq_icone,
				'I' IE_TIPO_INFORMACAO,
				'CP' ie_evento_tipo,
				w.dt_horario dt_apap,
				w.dt_horario dt_fim
				
		from    pe_prescricao pe,
				pe_prescr_proc_hor w
		where 
				w.nr_seq_pe_prescr = pe.nr_sequencia
				and   pe.nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
				and   w.dt_horario between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp  
				and   pe.ie_situacao = 'A'
				and (obter_status_hor_interv(w.dt_fim_horario,w.dt_suspensao) <>  'A' OR vl_param_regra_iconeCP_w = 'N')																										
				and   coalesce(pe.dt_suspensao::text, '') = '';

  c_elementos CURSOR(ie_tipo_elemento_p	 text) FOR
	SELECT  dt_fim_adm dt_apap,
			qt_administrada qt_total,
			dt_fim_adm dt_fim
	from    table(apap_dinamico_pck.get_nutrient_totals(current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type, current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp, current_setting('apap_dinamico_pck.dt_final_w')::timestamp))
	where   ie_tipo_nutriente = ie_tipo_elemento_p;

  c_etapa_bundles CURSOR(nr_seq_gqa_prot_pac_p  bigint) FOR
	SELECT  a.dt_inicio,
			a.dt_fim,
			a.nr_sequencia
	from    gqa_protocolo_etapa_pac a
	where   a.nr_seq_prot_pac = nr_seq_gqa_prot_pac_p
	and     (a.dt_inicio IS NOT NULL AND a.dt_inicio::text <> '');

  c_acoes_dispositivo CURSOR(nr_seq_disp_pac_p  bigint) FOR
	SELECT  DT_INSTALACAO,
			DT_RETIRADA_PREV, 
			DT_RETIRADA, 
			DT_RETIR_PREV_CURAT,
			null dt_evento,
			null DS_QUA_EVENTO
	from    atend_pac_dispositivo
	where   nr_sequencia = nr_seq_disp_pac_p
	
union

	SELECT  null DT_INSTALACAO, 
			null DT_RETIRADA_PREV, 
			null DT_RETIRADA, 
			null DT_RETIR_PREV_CURAT,
			a.dt_evento,
			substr(b.ds_evento,1,100) DS_QUA_EVENTO
	from    qua_evento_paciente a,
			qua_evento b
	where   a.nr_seq_disp_pac = nr_seq_disp_pac_p
	and     a.NR_SEQ_EVENTO = b.nr_sequencia
	and     coalesce(b.IE_TROCA_CURATIVO, 'S') = 'S'
	and ((a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') or a.nm_usuario = current_setting('apap_dinamico_pck.nm_usuario_w')::usuario.nm_usuario%type)
	and     coalesce(a.dt_inativacao::text, '') = '';

  w_c_cp_indicadores_2 is CURSOR
	with x as (SELECT i.ds_display_name as ds_titulo_linha,
		obter_dados_mensuracao_atual(i.nr_sequencia, pe.nr_sequencia, 'CDM') nr_seq_measure,
		obter_dados_mensuracao_atual(i.nr_sequencia, pe.nr_sequencia, 'IPM') ie_planned_measure,
		pe.dt_prescricao,
		max(pci.nr_sequencia) nr_sequencia
	  from pe_diagnostico pd,
		pe_prescr_diag ppd,
		cp_goal c,
		patient_cp_goal a,
		cp_indicator i,
		patient_cp_indicator pci,
		pe_prescricao pe
	  where pd.nr_sequencia       = ppd.nr_seq_diag
	  and ppd.nr_seq_prescr       = pe.nr_sequencia
	  and pe.nr_atendimento       = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
	  and a.nr_seq_cp_goal        = c.nr_sequencia
	  and ppd.nr_sequencia        = a.nr_seq_prescr_diag
	  and pci.nr_seq_pat_cp_goal  = a.nr_sequencia
	  and pci.nr_seq_cp_indicator = i.nr_sequencia
	  and pe.ie_situacao          = 'A'
	  and coalesce(pe.dt_suspensao::text, '') = ''
	  group by i.ds_display_name,
		i.nr_sequencia,
		pe.nr_sequencia,
		pe.dt_prescricao
	  )
	SELECT x.ds_titulo_linha,
	  x.nr_seq_measure,
	  x.ie_planned_measure,
	  x.dt_prescricao as dt_apap,
	  x.dt_prescricao as dt_fim,
	  x.nr_sequencia,
	  'CP' as ie_evento_tipo,
	  case
		when coalesce(nr_seq_measure::text, '') = ''
		then obter_icone_apap('N',null,'C')
		when (nr_seq_measure IS NOT NULL AND nr_seq_measure::text <> '')
		and ie_planned_measure = 'S'
		then obter_icone_apap('P',null,'C')
		when (nr_seq_measure IS NOT NULL AND nr_seq_measure::text <> '')
		and ie_planned_measure = 'N'
		then nr_seq_measure
	  end as ds_resultado,
	  case
		when coalesce(nr_seq_measure::text, '') = ''
		then obter_icone_apap('N',null,'S')
		when (nr_seq_measure IS NOT NULL AND nr_seq_measure::text <> '')
		and ie_planned_measure = 'S'
		then obter_icone_apap('P',null,'S')
		when (nr_seq_measure IS NOT NULL AND nr_seq_measure::text <> '')
		and ie_planned_measure = 'N'
		then nr_seq_measure
	  end as nr_seq_icone
	from x
	where x.dt_prescricao between current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp and current_setting('apap_dinamico_pck.dt_final_w')::timestamp;
BEGIN
  begin
  obter_param_usuario(1355, 18, wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, vl_param_regra_iconeCP_w);
    <<read_consulta>>
    for r_consultas in c_consultas
    loop
      if (r_consultas.ie_informacao = 'CB') then
        <<etapa_bundles>>
        for r_etapa_bundles in c_etapa_bundles(r_consultas.nr_seq_gqa_prot_pac)
        loop
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t.extend(1);
          indice_w := current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t.count;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].cd_pessoa_fisica := current_setting('apap_dinamico_pck.cd_pessoa_fisica_w')::pessoa_fisica.cd_pessoa_fisica%type;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ds_resultado := obter_icone_apap('BU',null,'C');
		  current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_seq_icone := obter_icone_apap('BU',null,'S');
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ie_informacao := r_consultas.ie_informacao;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].dt_apap := r_etapa_bundles.dt_inicio;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].dt_inicio_continuo := r_etapa_bundles.dt_inicio;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].dt_fim_continuo := r_etapa_bundles.dt_fim;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_seq_gqa_prot_eta := r_etapa_bundles.nr_sequencia;
        end loop etapa_bundles;

      elsif (r_consultas.ie_informacao = 'DISP') then
        <<acoes_dispositivo>>
        for r_acoes_dispositivo in c_acoes_dispositivo(r_consultas.nr_seq_disp_pac)
        loop
          if (r_acoes_dispositivo.dt_instalacao IS NOT NULL AND r_acoes_dispositivo.dt_instalacao::text <> '') then
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t.extend(1);
            indice_w := current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t.count;
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ds_resultado := obter_icone_apap('EA',null,'C');
			current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_seq_icone := obter_icone_apap('EA',null,'S');
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ie_informacao := r_consultas.ie_informacao;
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].dt_apap := r_acoes_dispositivo.dt_instalacao;
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_seq_disp_pac := r_consultas.nr_seq_disp_pac;
          end if;

          if (r_acoes_dispositivo.dt_retirada_prev IS NOT NULL AND r_acoes_dispositivo.dt_retirada_prev::text <> '') then
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t.extend(1);
            indice_w := current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t.count;
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ds_resultado := obter_icone_apap('AE',null,'C');
			current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_seq_icone := obter_icone_apap('AE',null,'S');
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ie_informacao := r_consultas.ie_informacao;
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].dt_apap := r_acoes_dispositivo.dt_retirada_prev;
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_seq_disp_pac := r_consultas.nr_seq_disp_pac;
          end if;

          if (r_acoes_dispositivo.dt_retirada IS NOT NULL AND r_acoes_dispositivo.dt_retirada::text <> '') then
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t.extend(1);
            indice_w := current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t.count;
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ds_resultado := obter_icone_apap('RE',null,'C');
			current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_seq_icone := obter_icone_apap('RE',null,'S');
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ie_informacao := r_consultas.ie_informacao;
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].dt_apap := r_acoes_dispositivo.dt_retirada;
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_seq_disp_pac := r_consultas.nr_seq_disp_pac;
          end if;

          if (r_acoes_dispositivo.dt_retir_prev_curat IS NOT NULL AND r_acoes_dispositivo.dt_retir_prev_curat::text <> '') then
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t.extend(1);
            indice_w := current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t.count;
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ds_resultado := obter_icone_apap('RC',null,'C');
			current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_seq_icone := obter_icone_apap('RC',null,'S');
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ie_informacao := r_consultas.ie_informacao;
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].dt_apap := r_acoes_dispositivo.dt_retir_prev_curat;
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_seq_disp_pac := r_consultas.nr_seq_disp_pac;
          end if;

          if (r_acoes_dispositivo.dt_evento IS NOT NULL AND r_acoes_dispositivo.dt_evento::text <> '') then
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t.extend(1);
            indice_w := current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t.count;
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ds_resultado := r_acoes_dispositivo.ds_qua_evento;
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ie_informacao := r_consultas.ie_informacao;
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].dt_apap := r_acoes_dispositivo.dt_evento;
            current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_seq_disp_pac := r_consultas.nr_seq_disp_pac;
          end if;	
        end loop acoes_dispositivo;

      elsif (r_consultas.ie_informacao = 'ENUT') then
        <<read_eventos>>
        for r_elementos in c_elementos(r_consultas.ie_tipo_elemento)
        loop
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t.extend(1);
          indice_w := current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t.count;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].qt_total := r_elementos.qt_total;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ie_informacao := r_consultas.ie_informacao;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].dt_apap := r_elementos.dt_apap;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].dt_inicio_continuo := r_elementos.dt_apap;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].dt_fim_continuo := r_elementos.dt_fim;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ie_tipo_elemento := r_consultas.ie_tipo_elemento;
        end loop read_eventos;

      elsif (r_consultas.ie_informacao = 'EA') then
        <<read_eventos>>
        for r_eventos_atendimento in c_eventos_atendimento
        loop
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t.extend(1);
          indice_w := current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t.count;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ds_resultado := r_eventos_atendimento.ds_resultado;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ie_informacao := 'EA';
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].dt_apap := r_eventos_atendimento.dt_apap;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].dt_inicio_continuo := r_eventos_atendimento.dt_apap;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].dt_fim_continuo := r_eventos_atendimento.dt_fim;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ie_evento_tipo := r_eventos_atendimento.ie_evento_tipo;
        end loop read_eventos;

      elsif (r_consultas.ie_informacao = 'TE') then
        <<read_templates>>
        for r_templates in c_templates
        loop
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t.extend(1);
          indice_w := current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t.count;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ds_resultado := r_templates.ds_resultado;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ie_informacao := 'TE';
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].dt_apap := r_templates.dt_apap;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].dt_inicio_continuo := r_templates.dt_apap;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].dt_fim_continuo := r_templates.dt_fim;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ie_evento_tipo := r_templates.ie_evento_tipo;
        end loop read_templates;

      elsif (r_consultas.ie_informacao = 'CP') then
        <<w_indicadores>>
        for w_r_cp_indicadores in w_c_cp_indicadores
        loop
                        current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t.extend(1);
                        indice_w := current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t.count;
                        current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_atendimento     := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
                        current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ds_resultado       := w_r_cp_indicadores.ds_resultado;
						current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_seq_icone       := w_r_cp_indicadores.nr_seq_icone;
                        current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ie_tipo_informacao   := r_consultas.ie_tipo_informacao;
                        current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ie_informacao      := r_consultas.ie_informacao;
                        current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].dt_apap            := w_r_cp_indicadores.dt_apap;
                        current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].dt_inicio_continuo := w_r_cp_indicadores.dt_apap;
                        current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].dt_fim_continuo    := w_r_cp_indicadores.dt_fim;
                        current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ie_evento_tipo     := w_r_cp_indicadores.ie_evento_tipo;
                        current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_sequencia       := w_r_cp_indicadores.nr_sequencia;
                        current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_seq_intervention := w_r_cp_indicadores.nr_seq_intervention;

        end loop w_indicadores;

        <<w_indicadores_2>>
        for w_r_cp_indicadores_2 in w_c_cp_indicadores_2
        loop
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t.extend(1);
          indice_w                                   := current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t.count;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_atendimento      := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ds_resultado        := w_r_cp_indicadores_2.ds_resultado;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ie_tipo_informacao  := r_consultas.ie_tipo_informacao;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ie_informacao       := r_consultas.ie_informacao;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].dt_apap             := w_r_cp_indicadores_2.dt_apap;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].dt_inicio_continuo  := w_r_cp_indicadores_2.dt_apap;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].dt_fim_continuo     := w_r_cp_indicadores_2.dt_fim;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].ie_evento_tipo      := w_r_cp_indicadores_2.ie_evento_tipo;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_sequencia        := w_r_cp_indicadores_2.nr_sequencia;
          current_setting('apap_dinamico_pck.apap_total_w')::apap_total_t[indice_w].nr_seq_cp_indicator := w_r_cp_indicadores_2.nr_sequencia;
        end loop w_indicadores_2;

      elsif (r_consultas.ie_informacao = 'NUT') then
        case r_consultas.ie_tipo_dieta
          when	'E'	then --Dietas enterais
            <<read_nutricao>>
            for r_nutricao_enteral in c_nutricao_enteral(r_consultas.nr_seq_cpoe)
            loop
              apap_total_w.extend(1);
              indice_w := apap_total_w.count;

              apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
              apap_total_w[indice_w].ie_informacao := 'NUT';
              apap_total_w[indice_w].dt_apap := r_nutricao_enteral.dt_horario;
              apap_total_w[indice_w].dt_inicio_continuo := r_nutricao_enteral.dt_horario;
              apap_total_w[indice_w].dt_fim_continuo := r_nutricao_enteral.dt_fim;
              apap_total_w[indice_w].nr_seq_cpoe := r_nutricao_enteral.nr_seq_cpoe;
              apap_total_w[indice_w].ie_status := r_nutricao_enteral.ie_status;
              apap_total_w[indice_w].cd_pessoa_responsavel := r_nutricao_enteral.cd_pessoa_fisica_prescr;
              apap_total_w[indice_w].cd_pessoa_fisica := r_nutricao_enteral.cd_pessoa_fisica_prescr;

              case r_nutricao_enteral.ie_status
                when 'I' then
                    apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMI',null,'C');
					apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMI',null,'S');
                when 'N' then
                    apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMP',null,'C');
					apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMP',null,'S');
                when 'A' then
                    apap_total_w[indice_w].qt_dose := r_nutricao_enteral.qt_dose_adm;
                    apap_total_w[indice_w].cd_pessoa_responsavel := r_nutricao_enteral.cd_pessoa_fisica_adm;
                    apap_total_w[indice_w].cd_pessoa_fisica := r_nutricao_enteral.cd_pessoa_fisica_adm;

                  if (r_nutricao_enteral.qt_dose_adm IS NOT NULL AND r_nutricao_enteral.qt_dose_adm::text <> '') then
                    apap_total_w[indice_w].ds_resultado := r_nutricao_enteral.qt_dose_adm;
                  else
                    apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMA',null,'C');
					apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMA',null,'S');
                  end if;
                when 'S' then
                    apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMS',null,'C');
					apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMS',null,'S');
              end case;
            end loop read_nutricao;

          when  'O' then --Dieta oral
            <<read_nut_dieta_oral>>
            for r_nut_dieta_oral in c_nut_dieta_oral(r_consultas.nr_seq_cpoe)
            loop
              apap_total_w.extend(1);
              indice_w := apap_total_w.count;

              apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
              apap_total_w[indice_w].ie_informacao := 'NUT';
              apap_total_w[indice_w].dt_apap := r_nut_dieta_oral.dt_horario;
              apap_total_w[indice_w].dt_inicio_continuo := r_nut_dieta_oral.dt_horario;
              apap_total_w[indice_w].dt_fim_continuo := r_nut_dieta_oral.dt_fim_horario;
              apap_total_w[indice_w].nr_seq_cpoe := r_nut_dieta_oral.nr_seq_cpoe;
              apap_total_w[indice_w].ie_status := r_nut_dieta_oral.ie_status;
              apap_total_w[indice_w].cd_pessoa_responsavel := r_nut_dieta_oral.cd_pessoa_fisica_prescr;
              apap_total_w[indice_w].cd_pessoa_fisica := r_nut_dieta_oral.cd_pessoa_fisica_prescr;

              case r_nut_dieta_oral.ie_status
                when 'I' then
                  apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMI',null,'C');
				  apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMI',null,'S');
                when 'A' then
                  apap_total_w[indice_w].qt_dose := r_nut_dieta_oral.qt_dose_grid;
                  apap_total_w[indice_w].cd_pessoa_responsavel := r_nut_dieta_oral.cd_pessoa_fisica_adm;
                  apap_total_w[indice_w].cd_pessoa_fisica := r_nut_dieta_oral.cd_pessoa_fisica_adm;

                  if (r_nut_dieta_oral.qt_dose_adm IS NOT NULL AND r_nut_dieta_oral.qt_dose_adm::text <> '') then
                    apap_total_w[indice_w].ds_resultado := r_nut_dieta_oral.qt_dose_adm;
                  else
                    apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMA',null,'C');
					apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMA',null,'S');
                  end if;

                when 'S' then
                  apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMS',null,'C');
				  apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMS',null,'S');
                else
                  apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMP',null,'C');
				  apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMP',null,'S');
              end case;
            end loop read_nut_dieta_oral;

          when	'L'	then --Leites e formulas infantis
            <<read_nut_leite_form_inf>>
            for r_nut_leite_form_inf in c_nut_leite_form_inf(r_consultas.nr_seq_cpoe)
            loop
              apap_total_w.extend(1);
              indice_w := apap_total_w.count;

              apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
              apap_total_w[indice_w].ie_informacao := 'NUT';
              apap_total_w[indice_w].dt_apap := r_nut_leite_form_inf.dt_horario;
              apap_total_w[indice_w].dt_inicio_continuo := r_nut_leite_form_inf.dt_horario;
              apap_total_w[indice_w].dt_fim_continuo := r_nut_leite_form_inf.dt_fim_horario;
              apap_total_w[indice_w].nr_seq_cpoe := r_nut_leite_form_inf.nr_seq_cpoe;
              apap_total_w[indice_w].ie_status := r_nut_leite_form_inf.ie_status;
              apap_total_w[indice_w].cd_pessoa_responsavel := r_nut_leite_form_inf.cd_pessoa_fisica_prescr;
              apap_total_w[indice_w].cd_pessoa_fisica := r_nut_leite_form_inf.cd_pessoa_fisica_prescr;

              case r_nut_leite_form_inf.ie_status
                when 'I' then
                  apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMI',null,'C');
				  apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMI',null,'S');

                when 'A' then
                  apap_total_w[indice_w].cd_pessoa_responsavel := r_nut_leite_form_inf.cd_pessoa_fisica_adm;
                  apap_total_w[indice_w].cd_pessoa_fisica := r_nut_leite_form_inf.cd_pessoa_fisica_adm;

                  if (r_nut_leite_form_inf.qt_dose_adm IS NOT NULL AND r_nut_leite_form_inf.qt_dose_adm::text <> '') then
                    if (r_nut_leite_form_inf.cd_um_dose_adm <> r_nut_leite_form_inf.cd_unidade_medida_prescr) then
                      apap_total_w[indice_w].ds_resultado := obter_dose_convertida(r_nut_leite_form_inf.cd_material, r_nut_leite_form_inf.qt_dose_adm, r_nut_leite_form_inf.cd_um_dose_adm, r_nut_leite_form_inf.cd_unidade_medida_prescr);
                      apap_total_w[indice_w].qt_dose := obter_dose_convertida(r_nut_leite_form_inf.cd_material, r_nut_leite_form_inf.qt_dose_adm, r_nut_leite_form_inf.cd_um_dose_adm, r_nut_leite_form_inf.cd_unidade_medida_prescr);
                    else
                      apap_total_w[indice_w].ds_resultado := r_nut_leite_form_inf.qt_dose_adm;
                      apap_total_w[indice_w].qt_dose := r_nut_leite_form_inf.qt_dose_adm;
                    end if;
                  else
                    apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMA',null,'C');
					apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMA',null,'S');
                  end if;

                when 'S' then
                  apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMS',null,'C');
				  apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMS',null,'S');

                else
                  apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMP',null,'C');
				  apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMP',null,'S');
              end case;
            end loop read_nut_leite_form_inf;

          when	'S'	then --Suplementos
            <<read_nut_suplemento_oral>>
            for r_nut_suplemento_oral in c_nut_suplemento_oral(r_consultas.nr_seq_cpoe)
            loop
              apap_total_w.extend(1);
              indice_w := apap_total_w.count;

              apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
              apap_total_w[indice_w].ie_informacao := 'NUT';
              apap_total_w[indice_w].dt_apap := r_nut_suplemento_oral.dt_horario;
              apap_total_w[indice_w].dt_inicio_continuo := r_nut_suplemento_oral.dt_horario;
              apap_total_w[indice_w].dt_fim_continuo := r_nut_suplemento_oral.dt_fim_horario;
              apap_total_w[indice_w].nr_seq_cpoe := r_nut_suplemento_oral.nr_seq_cpoe;
              apap_total_w[indice_w].ie_status := r_nut_suplemento_oral.ie_status;
              apap_total_w[indice_w].cd_pessoa_responsavel := r_nut_suplemento_oral.cd_pessoa_fisica_prescr;
              apap_total_w[indice_w].cd_pessoa_fisica := r_nut_suplemento_oral.cd_pessoa_fisica_prescr;

              case r_nut_suplemento_oral.ie_status
                when 'I' then
                  apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMI',null,'C');
				  apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMI',null,'S');

                when 'A' then
                  apap_total_w[indice_w].cd_pessoa_responsavel := r_nut_suplemento_oral.cd_pessoa_fisica_adm;
                  apap_total_w[indice_w].cd_pessoa_fisica := r_nut_suplemento_oral.cd_pessoa_fisica_adm;

                  if (r_nut_suplemento_oral.qt_dose_adm IS NOT NULL AND r_nut_suplemento_oral.qt_dose_adm::text <> '') then
                    if (r_nut_suplemento_oral.cd_um_dose_adm <> r_nut_suplemento_oral.cd_unidade_medida_prescr) then
                      apap_total_w[indice_w].ds_resultado := obter_dose_convertida(r_nut_suplemento_oral.cd_material, r_nut_suplemento_oral.qt_dose_adm, r_nut_suplemento_oral.cd_um_dose_adm, r_nut_suplemento_oral.cd_unidade_medida_prescr);
                      apap_total_w[indice_w].qt_dose := obter_dose_convertida(r_nut_suplemento_oral.cd_material, r_nut_suplemento_oral.qt_dose_adm, r_nut_suplemento_oral.cd_um_dose_adm, r_nut_suplemento_oral.cd_unidade_medida_prescr);
                    else
                      apap_total_w[indice_w].ds_resultado := r_nut_suplemento_oral.qt_dose_adm;
                      apap_total_w[indice_w].qt_dose := r_nut_suplemento_oral.qt_dose_adm;
                    end if;
                  else
                    apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMA',null,'C');
					apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMA',null,'S');
                  end if;

                when 'S' then
                  apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMS',null,'C');
				  apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMS',null,'S');

                else
                  apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMP',null,'C');
				  apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMP',null,'S');
              end case;
            end loop read_nut_suplemento_oral;

          when	'I'	then --NPT Infantil
            <<read_nut_npt_infantil>>
            for r_nut_npt_infantil in c_nut_npt_infantil(r_consultas.nr_seq_cpoe)
            loop
              apap_total_w.extend(1);
              indice_w := apap_total_w.count;

              apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
              apap_total_w[indice_w].ie_informacao := 'NUT';
              apap_total_w[indice_w].dt_apap := r_nut_npt_infantil.dt_horario;
              apap_total_w[indice_w].dt_inicio_continuo := r_nut_npt_infantil.dt_horario;
              apap_total_w[indice_w].dt_fim_continuo := r_nut_npt_infantil.dt_fim_horario;
              apap_total_w[indice_w].nr_seq_cpoe := r_nut_npt_infantil.nr_seq_cpoe;
              apap_total_w[indice_w].ie_status := r_nut_npt_infantil.ie_status;
              apap_total_w[indice_w].cd_pessoa_responsavel := r_nut_npt_infantil.cd_pessoa_fisica_prescr;
              apap_total_w[indice_w].cd_pessoa_fisica := r_nut_npt_infantil.cd_pessoa_fisica_prescr;

              case r_nut_npt_infantil.ie_status
                when 'I' then
                  apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMP',null,'C');
				  apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMP',null,'S');
                when 'A' then
                  apap_total_w[indice_w].qt_dose := r_nut_npt_infantil.qt_dose_adm;
                  apap_total_w[indice_w].cd_pessoa_responsavel := r_nut_npt_infantil.cd_pessoa_fisica_adm;
                  apap_total_w[indice_w].cd_pessoa_fisica := r_nut_npt_infantil.cd_pessoa_fisica_adm;
                  if (r_nut_npt_infantil.qt_dose_adm IS NOT NULL AND r_nut_npt_infantil.qt_dose_adm::text <> '') then
                    apap_total_w[indice_w].ds_resultado := r_nut_npt_infantil.qt_dose_adm;
                  else
                    apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMA',null,'C');
					apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMA',null,'S');
                  end if;
                when 'S' then
                  apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMS',null,'C');
				  apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMS',null,'S');
                else
                  apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMP',null,'C');
				  apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMP',null,'S');
              end case;
            end loop read_nut_npt_infantil;

          when	'P'	then --NPT Adulta
            <<read_nut_npt_adulta>>
            for r_nut_npt_adulta in c_nut_npt_adulta(r_consultas.nr_seq_cpoe)
            loop
              apap_total_w.extend(1);
              indice_w := apap_total_w.count;

              apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
              apap_total_w[indice_w].ie_informacao := 'NUT';
              apap_total_w[indice_w].dt_apap := r_nut_npt_adulta.dt_horario;
              apap_total_w[indice_w].dt_inicio_continuo := r_nut_npt_adulta.dt_horario;
              apap_total_w[indice_w].dt_fim_continuo := r_nut_npt_adulta.dt_fim_horario;
              apap_total_w[indice_w].nr_seq_cpoe := r_nut_npt_adulta.nr_seq_cpoe;
              apap_total_w[indice_w].ie_status := r_nut_npt_adulta.ie_status;
              apap_total_w[indice_w].cd_pessoa_responsavel := r_nut_npt_adulta.cd_pessoa_fisica_prescr;
              apap_total_w[indice_w].cd_pessoa_fisica := r_nut_npt_adulta.cd_pessoa_fisica_prescr;


              case r_nut_npt_adulta.ie_status
                when 'I' then
                  apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMI',null,'C');
				  apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMI',null,'S');
                when 'A' then
                  apap_total_w[indice_w].qt_dose := r_nut_npt_adulta.qt_dose_adm;
                  apap_total_w[indice_w].cd_pessoa_responsavel := r_nut_npt_adulta.cd_pessoa_fisica_adm;
                  apap_total_w[indice_w].cd_pessoa_fisica := r_nut_npt_adulta.cd_pessoa_fisica_adm;
                  if (r_nut_npt_adulta.qt_dose_adm IS NOT NULL AND r_nut_npt_adulta.qt_dose_adm::text <> '') then
                    apap_total_w[indice_w].ds_resultado := r_nut_npt_adulta.qt_dose_adm;
                  else
                    apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMA',null,'C');
					apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMA',null,'S');
                  end if;
                when 'S' then
                  apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMS',null,'C');
				  apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMS',null,'S');
                else
                  apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMP',null,'C');
				  apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMP',null,'S');
              end case;
            end loop read_nut_npt_adulta;

          when	'J'	then --Jejum
            <<read_jejum>>
            for r_jejum in c_jejum(r_consultas.nr_seq_cpoe)
            loop
              dt_next_w := r_jejum.dt_inicio;

              while dt_next_w <= r_jejum.dt_fim
              loop
                apap_total_w.extend(1);
                indice_w := apap_total_w.count;

                apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
                apap_total_w[indice_w].ie_informacao := 'NUT';
                apap_total_w[indice_w].dt_apap := dt_next_w;
                apap_total_w[indice_w].dt_inicio_continuo := dt_next_w;
                apap_total_w[indice_w].dt_fim_continuo := r_jejum.dt_fim;
                apap_total_w[indice_w].nr_seq_cpoe := r_jejum.nr_seq_cpoe;
                apap_total_w[indice_w].ie_status := 'A';
                apap_total_w[indice_w].ds_tooltip := r_jejum.ds_tooltip;
                apap_total_w[indice_w].cd_pessoa_responsavel := r_jejum.cd_pessoa_fisica_prescr;
                apap_total_w[indice_w].cd_pessoa_fisica := r_jejum.cd_pessoa_fisica_prescr;
                apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMJ',null,'C');
				apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMJ',null,'S');

                select  dt_next_w + (current_setting('apap_dinamico_pck.gap_w')::bigint * 60)/1440
                into STRICT    dt_next_w
;

              end loop;
            end loop read_jejum;
          else
            null;
        end case;

      elsif (r_consultas.ie_informacao = 'SM') then
        case r_consultas.ie_controle_tempo
          when 'N' then --Medicamentos
            <<read_medic_adep>>
            for r_medic_adep in c_medic_adep(r_consultas.nr_seq_cpoe)
            loop
              apap_total_w.extend(1);
              indice_w := apap_total_w.count;
              apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
              apap_total_w[indice_w].ie_status := r_medic_adep.ie_status;
              apap_total_w[indice_w].ie_informacao := 'SM';
              apap_total_w[indice_w].dt_apap := r_medic_adep.dt_horario;
              apap_total_w[indice_w].dt_inicio_continuo := r_medic_adep.dt_inicio_horario;
              apap_total_w[indice_w].dt_fim_continuo := r_medic_adep.dt_fim_horario;
              apap_total_w[indice_w].nr_seq_cpoe := r_consultas.nr_seq_cpoe;
              apap_total_w[indice_w].cd_pessoa_responsavel := r_medic_adep.cd_pessoa_fisica_prescr;
              apap_total_w[indice_w].cd_pessoa_fisica := r_medic_adep.cd_pessoa_fisica_prescr;

              case r_medic_adep.ie_status
                when 'I' then
                  apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMI',null,'C');
				  apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMI',null,'S');

                when 'A' then
                  apap_total_w[indice_w].cd_pessoa_responsavel := r_medic_adep.cd_pessoa_fisica_adm;
                  apap_total_w[indice_w].cd_pessoa_fisica := r_medic_adep.cd_pessoa_fisica_adm;

                  if (r_medic_adep.qt_dose_adm IS NOT NULL AND r_medic_adep.qt_dose_adm::text <> '') then
                    if (r_medic_adep.cd_um_dose_adm <> r_medic_adep.cd_unidade_medida_prescr) then
                      apap_total_w[indice_w].ds_resultado := obter_dose_convertida(r_medic_adep.cd_material, r_medic_adep.qt_dose_adm, r_medic_adep.cd_um_dose_adm, r_medic_adep.cd_unidade_medida_prescr);
                      apap_total_w[indice_w].qt_dose := obter_dose_convertida(r_medic_adep.cd_material, r_medic_adep.qt_dose_adm, r_medic_adep.cd_um_dose_adm, r_medic_adep.cd_unidade_medida_prescr);
                    else
                      apap_total_w[indice_w].ds_resultado := r_medic_adep.qt_dose_adm;
                      apap_total_w[indice_w].qt_dose := r_medic_adep.qt_dose_adm;
                    end if;
                  else
                    apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMA',null,'C');
					apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMA',null,'S');
                  end if;
                when 'S' then
                  apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMS',null,'C');
				  apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMS',null,'S');
                else
                  apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMP',null,'C');
				  apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMP',null,'S');
              end case;
            end loop read_medic_adep;

          when 'S' then --Solucao
            <<read_solucao_adep>>
            for r_solucoes_adep in c_solucoes_adep(r_consultas.nr_seq_cpoe)
            loop
              ie_previsto_w := 'N';
              if (r_solucoes_adep.ie_status = 'I') then
                <<read_solucao_pendente>>
                for r_solucao_prevista in c_solucao_prevista(r_solucoes_adep.nr_seq_solucao, r_solucoes_adep.nr_prescricao)
                loop
                  if (r_solucao_prevista.qt_volume IS NOT NULL AND r_solucao_prevista.qt_volume::text <> '') then
                    ie_previsto_w := 'S';
                    apap_total_w.extend(1);
                    indice_w := apap_total_w.count;

                    apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;					
                    apap_total_w[indice_w].dt_inicio_continuo := r_solucoes_adep.dt_inicio_horario;
                    apap_total_w[indice_w].dt_fim_continuo := r_solucoes_adep.dt_fim_horario;
                    apap_total_w[indice_w].nr_seq_cpoe := r_consultas.nr_seq_cpoe;
                    apap_total_w[indice_w].ie_status := r_solucoes_adep.ie_status;
                    apap_total_w[indice_w].ie_informacao := 'SM';
                    apap_total_w[indice_w].qt_total := r_solucao_prevista.qt_volume;
                    apap_total_w[indice_w].ds_resultado := r_solucao_prevista.qt_volume;
                    apap_total_w[indice_w].dt_apap := r_solucao_prevista.dt_apap;
                  end if;
                end loop read_solucao_pendente;
              end if;

              if (ie_previsto_w = 'N') then
                apap_total_w.extend(1);
                indice_w := apap_total_w.count;
                apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
                apap_total_w[indice_w].ie_status := r_solucoes_adep.ie_status;
                apap_total_w[indice_w].ie_informacao := 'SM';
                apap_total_w[indice_w].dt_apap := r_solucoes_adep.dt_horario;
                apap_total_w[indice_w].dt_inicio_continuo := r_solucoes_adep.dt_inicio_horario;
                apap_total_w[indice_w].dt_fim_continuo := r_solucoes_adep.dt_fim_horario;
                apap_total_w[indice_w].nr_seq_cpoe := r_consultas.nr_seq_cpoe;
                apap_total_w[indice_w].cd_pessoa_responsavel := r_solucoes_adep.cd_pessoa_fisica_prescr;
                apap_total_w[indice_w].cd_pessoa_fisica := r_solucoes_adep.cd_pessoa_fisica_prescr;

                case r_solucoes_adep.ie_status
                  when 'I' then
                    apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMI',null,'C');
					apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMI',null,'S');
                  when 'A' then
                    apap_total_w[indice_w].cd_pessoa_responsavel := r_solucoes_adep.cd_pessoa_fisica_adm;
                    apap_total_w[indice_w].cd_pessoa_fisica := r_solucoes_adep.cd_pessoa_fisica_adm;

                    if (r_solucoes_adep.qt_dose_adm IS NOT NULL AND r_solucoes_adep.qt_dose_adm::text <> '') then
                      apap_total_w[indice_w].ds_resultado := r_solucoes_adep.qt_dose_adm;
                      apap_total_w[indice_w].qt_dose := r_solucoes_adep.qt_dose_adm;
                    else
                      apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMA',null,'C');
					  apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMA',null,'S');
                    end if;

                  when 'S' then
                    apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMS',null,'C');
					apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMS',null,'S');
                  else
                    apap_total_w[indice_w].ds_resultado := obter_icone_apap('SMP',null,'C');
					apap_total_w[indice_w].nr_seq_icone := obter_icone_apap('SMP',null,'S');
                end case;
              end if;
            end loop read_solucao_adep;
          else
            null;
        end case;

      elsif (r_consultas.ie_informacao = 'SVP') and (r_consultas.nr_prescricao IS NOT NULL AND r_consultas.nr_prescricao::text <> '') and (r_consultas.nr_seq_solucao IS NOT NULL AND r_consultas.nr_seq_solucao::text <> '') then
        <<read_solucao_valores>>
        for r_solucao_valores in c_solucao_valores(r_consultas.nr_prescricao,r_consultas.nr_seq_solucao)
        loop
          apap_total_w.extend(1);
          indice_w := apap_total_w.count;
          apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
          apap_total_w[indice_w].qt_total := r_solucao_valores.qt_volume;
          apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
          apap_total_w[indice_w].dt_apap := r_solucao_valores.dt_apap;
          apap_total_w[indice_w].nr_prescricao := r_consultas.nr_prescricao;
          apap_total_w[indice_w].nr_seq_solucao := r_consultas.nr_seq_solucao;
        end loop read_solucao_valores;

      elsif (r_consultas.ie_informacao = 'H') then
        <<read_balanco_hidrico>>
        for r_balanco_hidrico in c_balanco_hidrico
        loop
          apap_total_w.extend(1);
          indice_w := apap_total_w.count;
          apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
          apap_total_w[indice_w].qt_total := r_balanco_hidrico.qt_ganho - r_balanco_hidrico.qt_perda;
          apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
          apap_total_w[indice_w].dt_apap := r_balanco_hidrico.dt_apap;
        end loop read_balanco_hidrico;

      elsif (r_consultas.ie_informacao = 'D') then
        qt_acumulado_dia_w := 0;
        dt_anterior_apap_w := null;
        <<read_balanco_hidrico>>
        for r_balanco_hidrico in c_balanco_hidrico
        loop
          if (trunc(r_balanco_hidrico.dt_apap, 'DD') = dt_anterior_apap_w) then
            qt_acumulado_dia_w := (qt_acumulado_dia_w + (r_balanco_hidrico.qt_ganho - r_balanco_hidrico.qt_perda));
          else
            qt_acumulado_dia_w := (r_balanco_hidrico.qt_ganho - r_balanco_hidrico.qt_perda);
            dt_anterior_apap_w := trunc(r_balanco_hidrico.dt_apap, 'DD');
          end if;
          apap_total_w.extend(1);
          indice_w := apap_total_w.count;
          apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
          apap_total_w[indice_w].qt_total := qt_acumulado_dia_w;
          apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
          apap_total_w[indice_w].dt_apap := r_balanco_hidrico.dt_apap;
        end loop read_balanco_hidrico;

      elsif (r_consultas.ie_informacao = 'I') then
        select  coalesce(sum(CASE WHEN ie_perda_ganho='G' THEN  qt_volume  ELSE 0 END ) - sum(CASE WHEN ie_perda_ganho='P' THEN  qt_volume  ELSE 0 END ), 0) qt_saldo
        into STRICT    qt_acumulado_dia_w
        from    table(get_balanco_hidrico)
        where   ((current_setting('apap_dinamico_pck.cd_setor_atendimento_w')::setor_atendimento.cd_setor_atendimento%coalesce(type::text, '') = '') or (coalesce(cd_setor_atendimento,current_setting('apap_dinamico_pck.cd_setor_atendimento_w')::setor_atendimento.cd_setor_atendimento%type) = current_setting('apap_dinamico_pck.cd_setor_atendimento_w')::setor_atendimento.cd_setor_atendimento%type))
        and     dt_apap < current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp;

        <<referencia>>
        for r_referencia in c_referencia
        loop
          apap_total_w.extend(1);
          indice_w := apap_total_w.count;
          apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
          apap_total_w[indice_w].qt_total := qt_acumulado_dia_w;
          apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
          apap_total_w[indice_w].dt_apap := r_referencia.dt_referencia;
        end loop referencia;

        <<read_balanco_hidrico>>
        for r_balanco_hidrico in c_balanco_hidrico
        loop
          qt_acumulado_dia_w := (qt_acumulado_dia_w + (r_balanco_hidrico.qt_ganho - r_balanco_hidrico.qt_perda));
          apap_total_w.extend(1);
          indice_w := apap_total_w.count;
          apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
          apap_total_w[indice_w].qt_total := qt_acumulado_dia_w;
          apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
          apap_total_w[indice_w].dt_apap := r_balanco_hidrico.dt_apap;
        end loop read_balanco_hidrico;

      elsif (r_consultas.ie_informacao = 'S') then
        select  max(dt_entrada_unidade)
        into STRICT    dt_entrada_setor_w
        from    resumo_atendimento_paciente_v
        where   nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;

        select  coalesce(sum(CASE WHEN ie_perda_ganho='G' THEN qt_volume  ELSE 0 END ) - sum(CASE WHEN ie_perda_ganho='P' THEN qt_volume  ELSE 0 END ),0) qt_saldo
        into STRICT    qt_acumulado_dia_w
        from    table(get_balanco_hidrico)
        where	  ((current_setting('apap_dinamico_pck.cd_setor_atendimento_w')::setor_atendimento.cd_setor_atendimento%coalesce(type::text, '') = '') or (coalesce(cd_setor_atendimento,current_setting('apap_dinamico_pck.cd_setor_atendimento_w')::setor_atendimento.cd_setor_atendimento%type) = current_setting('apap_dinamico_pck.cd_setor_atendimento_w')::setor_atendimento.cd_setor_atendimento%type))
        and     dt_apap < current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp
        and     coalesce(dt_referencia,dt_apap) between dt_entrada_setor_w and clock_timestamp();

        <<referencia>>
        for r_referencia in c_referencia
        loop
          apap_total_w.extend(1);
          indice_w := apap_total_w.count;
          apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
          apap_total_w[indice_w].qt_total := qt_acumulado_dia_w;
          apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
          apap_total_w[indice_w].dt_apap := r_referencia.dt_referencia;
        end loop referencia;

        <<read_balanco_hidrico>>
        for r_balanco_hidrico in c_balanco_hidrico
        loop
          qt_acumulado_dia_w := (qt_acumulado_dia_w + (r_balanco_hidrico.qt_ganho - r_balanco_hidrico.qt_perda));
          apap_total_w.extend(1);
          indice_w := apap_total_w.count;
          apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
          apap_total_w[indice_w].qt_total := qt_acumulado_dia_w;
          apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
          apap_total_w[indice_w].dt_apap := r_balanco_hidrico.dt_apap;
        end loop read_balanco_hidrico;

      elsif (r_consultas.ie_informacao = 'DE') and (r_consultas.nr_ficha_tecnica IS NOT NULL AND r_consultas.nr_ficha_tecnica::text <> '') then
        ie_cursor_w := 'N';
        nr_hora_ant_w := null;
        ds_unid_med_w := r_consultas.ie_tipo_dosagem;
        qt_hora_w := somente_numero(to_char(current_setting('apap_dinamico_pck.hr_inicio_apap_w')::timestamp,'hh24'));

        <<read_drogas_especiais>>
        for r_drogas_especiais in c_drogas_especiais(r_consultas.nr_ficha_tecnica, r_consultas.ie_controla_adep)
        loop
          qt_dosagem_w := r_drogas_especiais.qt_dosagem;
          ie_alteracao_w := r_drogas_especiais.ie_alteracao;
          nr_hora_w := r_drogas_especiais.nr_hora;
          dt_alteracao_w := r_drogas_especiais.dt_alteracao;
          nr_seq_soluc_evento_w := r_drogas_especiais.nr_sequencia;

          if (ie_alteracao_w in (2,4)) then
            select  max(somente_numero(to_char(dt_alteracao,'hh24'))),
                    max(trunc(dt_alteracao,'hh24')),
                    max(qt_dosagem),
                    max(ie_tipo_dosagem),
                    max(ie_alteracao),
                    max(nr_prescricao),
                    max(nr_seq_solucao)
            into STRICT    nr_hora_ww,
                    dt_alteracao_ww,
                    qt_dosagem_ww,
                    ie_tipo_dosagem_ww,
                    ie_alteracao_ww,
                    nr_prescricao_ww,
                    nr_seq_solucao_ww
            from    table(get_drogas_especiais)
            where	  nr_prescricao = r_drogas_especiais.nr_prescricao
            and     ie_alteracao in (1,3,5)
            and     ((r_consultas.ie_controla_adep = 'N') or (coalesce(ie_apap, 'SV') = 'SV'))
            and (dt_alteracao <= dt_alteracao_w)
            and     obter_se_solucao_apap(nr_prescricao, nr_seq_solucao, r_consultas.nr_ficha_tecnica) = 'S'
            order by
                    dt_alteracao,
                    nr_prescricao;

					  ie_cursor_w := 'S';

			if (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/kg/min'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/kg/hora'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mg/kg/hora'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mg/kg/min'))) then

			  qt_dose_terap_w := 0;

			  select  coalesce(max(qt_peso),0)
			  into STRICT	  qt_peso_prescr_w
			  from    table(get_drogas_especiais)
			  where	  nr_prescricao = nr_prescricao_ww;

			  select  max(cd_material),
					  max(qt_dose),
					  max(cd_unidade_medida_dose)
			  into STRICT    cd_material_w,
					  qt_dose_w,
					  cd_unidade_medida_dose_w
			  from    table(get_solucao_prescr_material)
			  where   nr_prescricao = nr_prescricao_ww
			  and     nr_sequencia_solucao = nr_seq_solucao_ww
			  and     cd_material = cd_material
			  and     ie_ancora_solucao = 'S';

			  select  coalesce(sum(qt_solucao),0)
			  into STRICT    qt_solucao_w
			  from    table(get_solucao_prescr_material)
			  where   nr_prescricao = nr_prescricao_ww
			  and     nr_sequencia_solucao = nr_seq_solucao_ww
			  and     coalesce(ie_ancora_solucao,'N') = 'N';

			  if (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/kg/min'))) then
				calcular_dose_medic(cd_material_w,0,qt_peso_prescr_w,0,0,qt_dose_terap_w,13,qt_solucao_w,24,0,'',
				  qt_dose_w,cd_unidade_medida_dose_w,qt_dosagem_ww,ie_tipo_dosagem_ww,0,
				  qt_dose_total_w,qt_dose_interv_w,qt_dose_medic_w,'N',qt_daily_dose_w);

			  elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mg/kg/hora'))) then
				calcular_dose_medic(cd_material_w,0,qt_peso_prescr_w,0,0,qt_dose_terap_w,37,qt_solucao_w,24,0,'',
				  qt_dose_w,cd_unidade_medida_dose_w,qt_dosagem_ww,ie_tipo_dosagem_ww,0,
				  qt_dose_total_w,qt_dose_interv_w,qt_dose_medic_w,'N',qt_daily_dose_w);

			  elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/kg/hora'))) then
				calcular_dose_medic(cd_material_w,0,qt_peso_prescr_w,0,0,qt_dose_terap_w,40,qt_solucao_w,24,0,'',
				  qt_dose_w,cd_unidade_medida_dose_w,qt_dosagem_ww,ie_tipo_dosagem_ww,0,
				  qt_dose_total_w,qt_dose_interv_w,qt_dose_medic_w,'N',qt_daily_dose_w);

			  elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mg/kg/min'))) then
				calcular_dose_medic(cd_material_w,0,qt_peso_prescr_w,0,0,qt_dose_terap_w,12,qt_solucao_w,24,0,'',
				  qt_dose_w,cd_unidade_medida_dose_w,qt_dosagem_ww,ie_tipo_dosagem_ww,0,
				  qt_dose_total_w,qt_dose_interv_w,qt_dose_medic_w,'N',qt_daily_dose_w);

			  elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('ui/hr'))) then
				calcular_dose_medic(cd_material_w,0,qt_peso_prescr_w,0,0,qt_dose_terap_w,173,qt_solucao_w,24,0,null,
				  qt_dose_w,cd_unidade_medida_dose_w,qt_dosagem_ww,ie_tipo_dosagem_ww,0,
				  qt_dose_total_w,qt_dose_interv_w,qt_dose_medic_w,'N', qt_daily_dose_w);
			  elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('ui/min'))) then
				calcular_dose_medic(cd_material_w,0,qt_peso_prescr_w,0,0,qt_dose_terap_w,180,qt_solucao_w,24,0,null,
				  qt_dose_w,cd_unidade_medida_dose_w,qt_dosagem_ww,ie_tipo_dosagem_ww,0,
				  qt_dose_total_w,qt_dose_interv_w,qt_dose_medic_w,'N', qt_daily_dose_w);
			  elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('ui/kg/min'))) then
				calcular_dose_medic(cd_material_w,0,qt_peso_prescr_w,0,0,qt_dose_terap_w,176,qt_solucao_w,24,0,null,
				  qt_dose_w,cd_unidade_medida_dose_w,qt_dosagem_ww,ie_tipo_dosagem_ww,0,
				  qt_dose_total_w,qt_dose_interv_w,qt_dose_medic_w,'N', qt_daily_dose_w);
			  elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('ui/kg/hr'))) then
				calcular_dose_medic(cd_material_w,0,qt_peso_prescr_w,0,0,qt_dose_terap_w,174,qt_solucao_w,24,0,null,
				  qt_dose_w,cd_unidade_medida_dose_w,qt_dosagem_ww,ie_tipo_dosagem_ww,0,
				  qt_dose_total_w,qt_dose_interv_w,qt_dose_medic_w,'N', qt_daily_dose_w);
			  elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mg/min'))) then
				calcular_dose_medic(cd_material_w,0,qt_peso_prescr_w,0,0,qt_dose_terap_w,183,qt_solucao_w,24,0,null,
				  qt_dose_w,cd_unidade_medida_dose_w,qt_dosagem_ww,ie_tipo_dosagem_ww,0,
				  qt_dose_total_w,qt_dose_interv_w,qt_dose_medic_w,'N', qt_daily_dose_w);
			  elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('Mg/hr'))) then
				calcular_dose_medic(cd_material_w,0,qt_peso_prescr_w,0,0,qt_dose_terap_w,184,qt_solucao_w,24,0,null,
				  qt_dose_w,cd_unidade_medida_dose_w,qt_dosagem_ww,ie_tipo_dosagem_ww,0,
				  qt_dose_total_w,qt_dose_interv_w,qt_dose_medic_w,'N', qt_daily_dose_w);
			  elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/hr'))) then
				calcular_dose_medic(cd_material_w,0,qt_peso_prescr_w,0,0,qt_dose_terap_w,182,qt_solucao_w,24,0,null,
				  qt_dose_w,cd_unidade_medida_dose_w,qt_dosagem_ww,ie_tipo_dosagem_ww,0,
				  qt_dose_total_w,qt_dose_interv_w,qt_dose_medic_w,'N', qt_daily_dose_w);
			  elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/min'))) then
				calcular_dose_medic(cd_material_w,0,qt_peso_prescr_w,0,0,qt_dose_terap_w,181,qt_solucao_w,24,0,null,
				  qt_dose_w,cd_unidade_medida_dose_w,qt_dosagem_ww,ie_tipo_dosagem_ww,0,
				  qt_dose_total_w,qt_dose_interv_w,qt_dose_medic_w,'N', qt_daily_dose_w);
			  end if;

			  qt_dosagem_ww := round((qt_dose_terap_w)::numeric,2);
			elsif (ie_tipo_dosagem_ww <> ds_unid_med_w) and (ds_unid_med_w IS NOT NULL AND ds_unid_med_w::text <> '') then
			  qt_dosagem_ww := round((converte_vel_infusao(ie_tipo_dosagem_ww,ds_unid_med_w,qt_dosagem_ww))::numeric,2);
			end if;

			ds_unid_med_w := coalesce(ds_unid_med_w,ie_tipo_dosagem_ww);
			ds_dosagem_w := to_char(qt_dosagem_ww);

			if (qt_dosagem_ww = 0) then
			  ds_dosagem_w := '';
			elsif (substr(to_char(qt_dosagem_ww),1,1) = ',') then
			  ds_dosagem_w := '0'||to_char(qt_dosagem_ww);
			end if;

			Select  CAST(ds_dosagem_w AS double precision)
			into STRICT    qt_dosagem_www
			;
		
			if (current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp > dt_alteracao_ww) then
			  ie_cursor_w := 'N';
			  if (trunc(clock_timestamp(),'dd') = trunc(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp,'dd')) then
				ind := qt_hora_w + 1;
				while(ind <= somente_numero(to_char(clock_timestamp(),'hh24'))) loop
				  dt_customizada_w := to_date(to_char(dt_alteracao_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
				  apap_total_w.extend(1);
				  indice_w := apap_total_w.count;
				  apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
				  apap_total_w[indice_w].qt_total := qt_dosagem_www;
				  apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
				  apap_total_w[indice_w].dt_apap := dt_customizada_w;
				  apap_total_w[indice_w].nr_ficha_tecnica := r_consultas.nr_ficha_tecnica;
				  apap_total_w[indice_w].ie_controla_adep := r_consultas.ie_controla_adep;
				  apap_total_w[indice_w].ie_tipo_dosagem := r_consultas.ie_tipo_dosagem;
				  ind := ind + 1;
				end loop;

			  elsif (trunc(clock_timestamp(),'dd') = trunc(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp + 1,'dd')) and (somente_numero(to_char(clock_timestamp(),'hh24')) <= qt_hora_w + 1) then
				ind := 0;
				while(ind <= somente_numero(to_char(clock_timestamp(),'hh24'))) loop
				  dt_customizada_w := to_date(to_char(dt_alteracao_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
				  apap_total_w.extend(1);
				  indice_w := apap_total_w.count;
				  apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
				  apap_total_w[indice_w].qt_total := qt_dosagem_www;
				  apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
				  apap_total_w[indice_w].dt_apap := dt_customizada_w;
				  apap_total_w[indice_w].nr_ficha_tecnica := r_consultas.nr_ficha_tecnica;
				  apap_total_w[indice_w].ie_controla_adep := r_consultas.ie_controla_adep;
				  apap_total_w[indice_w].ie_tipo_dosagem := r_consultas.ie_tipo_dosagem;
				  ind := ind + 1;
				end loop;

				ind := qt_hora_w + 1;
				while(ind <= 23) loop
				  dt_customizada_w := to_date(to_char(dt_alteracao_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
				  apap_total_w.extend(1);
				  indice_w := apap_total_w.count;
				  apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
				  apap_total_w[indice_w].qt_total := qt_dosagem_www;
				  apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
				  apap_total_w[indice_w].dt_apap := dt_customizada_w;
				  apap_total_w[indice_w].nr_ficha_tecnica := r_consultas.nr_ficha_tecnica;
				  apap_total_w[indice_w].ie_controla_adep := r_consultas.ie_controla_adep;
				  apap_total_w[indice_w].ie_tipo_dosagem := r_consultas.ie_tipo_dosagem;
				  ind := ind + 1;
				end loop;

			  else
				dias_w := trunc(current_setting('apap_dinamico_pck.dt_final_w')::timestamp+1) - trunc(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp);
				ind := 0;
				ind_dia_w := 0;

				while(ind_dia_w <> dias_w) loop
				  while(ind <= 23) loop
					dt_customizada_w := to_date(to_char(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp+ind_dia_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
					apap_total_w.extend(1);
					indice_w := apap_total_w.count;
					apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
					apap_total_w[indice_w].qt_total := qt_dosagem_www;
					apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
					apap_total_w[indice_w].dt_apap := dt_customizada_w;
					apap_total_w[indice_w].nr_ficha_tecnica := r_consultas.nr_ficha_tecnica;
					apap_total_w[indice_w].ie_controla_adep := r_consultas.ie_controla_adep;
					apap_total_w[indice_w].ie_tipo_dosagem := r_consultas.ie_tipo_dosagem;
					ind := ind + 1;
				  end loop;

				  ind:= 0;
				  ind_dia_w := ind_dia_w+1;
				end loop;
			  end if;

			elsif (ie_alteracao_ww in (1,3,5)) then
			  if (dt_alteracao_ww >= current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp ) and (dt_alteracao_ww <= current_setting('apap_dinamico_pck.dt_final_w')::timestamp ) then
				dt_customizada_w := to_date(to_char(dt_alteracao_w,'dd/mm/yyyy') || to_char(nr_hora_ww,'00'),'dd/mm/yyyy hh24');
				apap_total_w.extend(1);
				indice_w := apap_total_w.count;
				apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
				apap_total_w[indice_w].qt_total := qt_dosagem_www;
				apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
				apap_total_w[indice_w].dt_apap := dt_customizada_w;
				apap_total_w[indice_w].nr_ficha_tecnica := r_consultas.nr_ficha_tecnica;
				apap_total_w[indice_w].ie_controla_adep := r_consultas.ie_controla_adep;
				apap_total_w[indice_w].ie_tipo_dosagem := r_consultas.ie_tipo_dosagem;
				nr_hora_ant_w := nr_hora_ww;
			  end if;
			end if;

			ds_dosagem_ant_w := ds_dosagem_w;
			qt_dosagem_ant_w := qt_dosagem_www;
		  end if;

		  ie_cursor_w := 'S';
		  if (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/kg/min'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/kg/hora'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mg/kg/hora'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mg/kg/min'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('ui/hr'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('ui/min'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('ui/kg/min'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('ui/kg/hr'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mg/min'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('Mg/hr'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/hr'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/min'))) then


			qt_dose_terap_w := 0;
			qt_peso_prescr_w:= r_drogas_especiais.qt_peso;

			select  max(cd_material),
					max(qt_dose),
					max(cd_unidade_medida_dose)
			into STRICT    cd_material_w,
					qt_dose_w,
					cd_unidade_medida_dose_w
			from    table(get_solucao_prescr_material)
			where   nr_prescricao = r_drogas_especiais.nr_prescricao
			and     nr_sequencia_solucao = r_drogas_especiais.nr_seq_solucao
			and     ie_ancora_solucao = 'S';

			select  coalesce(sum(qt_solucao),0)
			into STRICT    qt_solucao_w
			from    table(get_solucao_prescr_material)
			where   nr_prescricao = r_drogas_especiais.nr_prescricao
			and     nr_sequencia_solucao = r_drogas_especiais.nr_seq_solucao
			and     ie_ancora_solucao = 'N';

			if (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/kg/min'))) then
			  Calcular_Dose_medic(cd_material_w,0,qt_peso_prescr_w,0,0,qt_dose_terap_w,13,qt_solucao_w,24,0,'',
				qt_dose_w,cd_unidade_medida_dose_w,qt_dosagem_w,r_drogas_especiais.ie_tipo_dosagem,0,
				qt_dose_total_w,qt_dose_interv_w,qt_dose_medic_w,'N',qt_daily_dose_w);

			elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mg/kg/hora'))) then
			  Calcular_Dose_medic(cd_material_w,0,qt_peso_prescr_w,0,0,qt_dose_terap_w,37,qt_solucao_w,24,0,'',
				qt_dose_w,cd_unidade_medida_dose_w,qt_dosagem_w,r_drogas_especiais.ie_tipo_dosagem,0,
				qt_dose_total_w,qt_dose_interv_w,qt_dose_medic_w,'N',qt_daily_dose_w);

			elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/kg/hora'))) then
			  Calcular_Dose_medic(cd_material_w,0,qt_peso_prescr_w,0,0,qt_dose_terap_w,40,qt_solucao_w,24,0,'',
				qt_dose_w,cd_unidade_medida_dose_w,qt_dosagem_w,r_drogas_especiais.ie_tipo_dosagem,0,
				qt_dose_total_w,qt_dose_interv_w,qt_dose_medic_w,'N',qt_daily_dose_w);

			elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mg/kg/min'))) then
			  Calcular_Dose_medic(cd_material_w,0,qt_peso_prescr_w,0,0,qt_dose_terap_w,12,qt_solucao_w,24,0,'',
				qt_dose_w,cd_unidade_medida_dose_w,qt_dosagem_w,r_drogas_especiais.ie_tipo_dosagem,0,
				qt_dose_total_w,qt_dose_interv_w,qt_dose_medic_w,'N',qt_daily_dose_w);
			end if;

			qt_dosagem_w := round((qt_dose_terap_w)::numeric,2);
		  elsif (r_drogas_especiais.ie_tipo_dosagem <> ds_unid_med_w) and (ds_unid_med_w IS NOT NULL AND ds_unid_med_w::text <> '') then
			qt_dosagem_w := round((converte_vel_infusao(r_drogas_especiais.ie_tipo_dosagem,ds_unid_med_w,qt_dosagem_w))::numeric,2);
		  end if;

		  ds_unid_med_w := coalesce(ds_unid_med_w,r_drogas_especiais.ie_tipo_dosagem);
		  ds_dosagem_w := to_char(qt_dosagem_w);
		  if (qt_dosagem_w = 0) then
			ds_dosagem_w := '';
		  elsif (substr(to_char(qt_dosagem_w),1,1) = ',') then
			ds_dosagem_w := '0'|| to_char(qt_dosagem_w);
		  end if;

		  Select  CAST(ds_dosagem_w AS double precision)
		  into STRICT    qt_dosagem_www
		;

		  ds_dosagem_ant_w := ds_dosagem_w;
		  qt_dosagem_ant_w := qt_dosagem_www;
		end loop read_drogas_especiais;

		if (ie_cursor_w = 'S') and (ie_alteracao_w in (1,3,5)) then
		  if (dt_alteracao_w <= current_setting('apap_dinamico_pck.dt_final_w')::timestamp) then
			ind := 0;
			if (trunc(dt_alteracao_w) = trunc(clock_timestamp())) then
			  nr_hora_dif_w := somente_numero(to_char(clock_timestamp(),'hh24'));
			  ind := nr_hora_w;
			  while(ind <= nr_hora_dif_w) loop
				dt_customizada_w := to_date(to_char(dt_alteracao_w, 'dd/mm/yyyy') || to_char(ind, '00'), 'dd/mm/yyyy hh24');
				apap_total_w.extend(1);
				indice_w := apap_total_w.count;
				apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
				apap_total_w[indice_w].qt_total := qt_dosagem_ant_w;
				apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
				apap_total_w[indice_w].dt_apap := dt_customizada_w;
				apap_total_w[indice_w].nr_ficha_tecnica := r_consultas.nr_ficha_tecnica;
				apap_total_w[indice_w].ie_controla_adep := r_consultas.ie_controla_adep;
				apap_total_w[indice_w].ie_tipo_dosagem := r_consultas.ie_tipo_dosagem;
				ind := ind + 1;
			  end loop;
			  ind := 0;
			else
			  qt_dias_w := coalesce( current_setting('apap_dinamico_pck.dt_final_w')::timestamp - dt_alteracao_w,0);
			  ind := nr_hora_w;
			  while(ind <= 23) loop
				dt_customizada_w := to_date(to_char(dt_alteracao_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
				apap_total_w.extend(1);
				indice_w := apap_total_w.count;
				apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
				apap_total_w[indice_w].qt_total := qt_dosagem_ant_w;
				apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
				apap_total_w[indice_w].dt_apap := dt_customizada_w;
				apap_total_w[indice_w].nr_ficha_tecnica := r_consultas.nr_ficha_tecnica;
				apap_total_w[indice_w].ie_controla_adep := r_consultas.ie_controla_adep;
				apap_total_w[indice_w].ie_tipo_dosagem := r_consultas.ie_tipo_dosagem;
				ind := ind + 1;
			  end loop;

			  ind := 0;
			  ind_dia_w := 1;
			  while( ind_dia_w <= qt_dias_w) loop
				dt_customizada2_w := (to_date(to_char(dt_alteracao_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24')) + ind_dia_w;
				nr_hora_dif_w := 23;

				if (trunc(dt_customizada2_w) = trunc(clock_timestamp())) then
				  nr_hora_dif_w := somente_numero(to_char(clock_timestamp(),'hh24'));
				end if;

				while(ind <= nr_hora_dif_w) loop
				  dt_customizada_w := (to_date(to_char(dt_alteracao_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24'))+ ind_dia_w;
				  apap_total_w.extend(1);
				  indice_w := apap_total_w.count;
				  apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
				  apap_total_w[indice_w].qt_total := qt_dosagem_ant_w;
				  apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
				  apap_total_w[indice_w].dt_apap := dt_customizada_w;
				  apap_total_w[indice_w].nr_ficha_tecnica := r_consultas.nr_ficha_tecnica;
				  apap_total_w[indice_w].ie_controla_adep := r_consultas.ie_controla_adep;
				  apap_total_w[indice_w].ie_tipo_dosagem := r_consultas.ie_tipo_dosagem;
				  ind := ind + 1;
				end loop;

				ind	:= 0;
				ind_dia_w := ind_dia_w + 1;
			  end loop;
			end if;
		  end if;
		end if;

		  elsif (r_consultas.ie_informacao = 'GA') then
		ie_cursor_w := 'N';

		<<read_gasoterapia>>
		for r_gasoterapia in c_gasoterapia(r_consultas.nr_seq_gas)
		loop
		  nr_hora_w := r_gasoterapia.nr_hora;
		  dt_alteracao_w := r_gasoterapia.dt_evento;
		  qt_gasoterapia_w := r_gasoterapia.qt_gasoterapia;
		  ie_evento_w := r_gasoterapia.ie_evento;
		  nr_prescricao_w := r_gasoterapia.nr_prescricao;
		  nr_seq_gasoterapia_w := r_gasoterapia.nr_sequencia;
		  ds_unid_med_w := r_gasoterapia.ie_unidade_medida;
		  ie_cursor_w := 'S';

		  if (current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp > dt_alteracao_w) then
			ie_cursor_w := 'N';
			if (trunc(clock_timestamp(),'dd') = trunc(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp,'dd')) then
			  ind := qt_hora_w + 1;

			  while(ind <= somente_numero(to_char(clock_timestamp(),'hh24'))) loop
				dt_customizada_w := to_date(to_char(current_setting('apap_dinamico_pck.hr_inicio_apap_w')::timestamp,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
				apap_total_w.extend(1);
				indice_w := apap_total_w.count;
				apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
				apap_total_w[indice_w].qt_total := qt_gasoterapia_w;
				apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
				apap_total_w[indice_w].dt_apap := dt_customizada_w;
				apap_total_w[indice_w].nr_seq_gas := r_consultas.nr_seq_gas;
				ind := ind + 1;
			  end loop;
			elsif (trunc(clock_timestamp(),'dd') = trunc(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp + 1,'dd')) and (somente_numero(to_char(clock_timestamp(),'hh24')) <= qt_hora_w + 1) then
			  ind := 0;
			  while(ind <= somente_numero(to_char(clock_timestamp(),'hh24'))) loop
				dt_customizada_w := to_date(to_char(current_setting('apap_dinamico_pck.hr_inicio_apap_w')::timestamp,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
				apap_total_w.extend(1);
				indice_w := apap_total_w.count;
				apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
				apap_total_w[indice_w].qt_total := qt_gasoterapia_w;
				apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
				apap_total_w[indice_w].dt_apap := dt_customizada_w;
				apap_total_w[indice_w].nr_seq_gas := r_consultas.nr_seq_gas;
				ind := ind + 1;
			  end loop;

			  ind := qt_hora_w + 1;
			  while(ind <= 23) loop
				dt_customizada_w := to_date(to_char(current_setting('apap_dinamico_pck.hr_inicio_apap_w')::timestamp,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
				apap_total_w.extend(1);
				indice_w := apap_total_w.count;
				apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
				apap_total_w[indice_w].qt_total := qt_gasoterapia_w;
				apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
				apap_total_w[indice_w].dt_apap := dt_customizada_w;
				apap_total_w[indice_w].nr_seq_gas := r_consultas.nr_seq_gas;
				ind := ind + 1;
			  end loop;
			else
			  dias_w := trunc(current_setting('apap_dinamico_pck.dt_final_w')::timestamp+1) - trunc(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp);
			  ind := 0;
			  ind_dia_w := 0;

			  while(ind_dia_w  <> dias_w) loop
				while(ind <= 23) loop
				  dt_customizada_w := to_date(to_char(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp+ind_dia_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
				  apap_total_w.extend(1);
				  indice_w := apap_total_w.count;
				  apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
				  apap_total_w[indice_w].qt_total := qt_gasoterapia_w;
				  apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
				  apap_total_w[indice_w].dt_apap := dt_customizada_w;
				  apap_total_w[indice_w].nr_seq_gas := r_consultas.nr_seq_gas;
				  ind := ind + 1;
				end loop;

				ind:= 0;
				ind_dia_w := ind_dia_w+1;
			  end loop;
			end if;

		  elsif (ie_evento_w in ('I','R','V')  or coalesce(ie_evento_w::text, '') = '') then
			if (dt_alteracao_w >= current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp) and (dt_alteracao_w <= current_setting('apap_dinamico_pck.dt_final_w')::timestamp) then
			  dt_customizada_w := to_date(to_char(current_setting('apap_dinamico_pck.hr_inicio_apap_w')::timestamp,'dd/mm/yyyy') || to_char(nr_hora_w,'00'),'dd/mm/yyyy hh24');
			  apap_total_w.extend(1);
			  indice_w := apap_total_w.count;
			  apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
			  apap_total_w[indice_w].qt_total := qt_gasoterapia_w;
			  apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
			  apap_total_w[indice_w].dt_apap := dt_customizada_w;
			  apap_total_w[indice_w].nr_seq_gas := r_consultas.nr_seq_gas;

			  if (nr_hora_w > qt_hora_w + 1) and ((trunc(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp,'dd') = trunc(current_setting('apap_dinamico_pck.dt_final_w')::timestamp,'dd')) or (clock_timestamp() > current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp)) then
				ind := coalesce(nr_hora_ant_w,qt_hora_w + 1);
				while(ind < nr_hora_w) loop
				  if (qt_gasoterapia_ant_w IS NOT NULL AND qt_gasoterapia_ant_w::text <> '') then
					dt_customizada_w := to_date(to_char(current_setting('apap_dinamico_pck.hr_inicio_apap_w')::timestamp,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
					apap_total_w.extend(1);
					indice_w := apap_total_w.count;
					apap_total_w[indice_w].nr_atendimento     := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
					apap_total_w[indice_w].qt_total           := qt_gasoterapia_w;
					apap_total_w[indice_w].ie_informacao      := r_consultas.ie_informacao;
					apap_total_w[indice_w].dt_apap            := dt_customizada_w;
					apap_total_w[indice_w].nr_seq_gas         := r_consultas.nr_seq_gas;
				  end if;
				  ind := ind + 1;
				end loop;
			  else
				while(ind <= 23) loop
				  if (qt_gasoterapia_ant_w IS NOT NULL AND qt_gasoterapia_ant_w::text <> '') then
					dt_customizada_w := to_date(to_char(current_setting('apap_dinamico_pck.hr_inicio_apap_w')::timestamp,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
					apap_total_w.extend(1);
					indice_w := apap_total_w.count;
					apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
					apap_total_w[indice_w].qt_total := qt_gasoterapia_ant_w;
					apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
					apap_total_w[indice_w].dt_apap := dt_customizada_w;
					apap_total_w[indice_w].nr_seq_gas := r_consultas.nr_seq_gas;
				  end if;
				  ind := ind + 1;
				end loop;

				if (nr_hora_w < nr_hora_ant_w) then
				  ind := 0;
				  while(ind <= nr_hora_w) loop
					if (qt_gasoterapia_ant_w IS NOT NULL AND qt_gasoterapia_ant_w::text <> '') then
					  dt_customizada_w := to_date(to_char(current_setting('apap_dinamico_pck.hr_inicio_apap_w')::timestamp,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
					  apap_total_w.extend(1);
					  indice_w := apap_total_w.count;
					  apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
					  apap_total_w[indice_w].qt_total := qt_gasoterapia_ant_w;
					  apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
					  apap_total_w[indice_w].dt_apap := dt_customizada_w;
					  apap_total_w[indice_w].nr_seq_gas := r_consultas.nr_seq_gas;
					end if;
					ind := ind + 1;
				  end loop;
				end if;
			  end if;
			  nr_hora_ant_w := nr_hora_w;
			end if;
		  elsif (ie_evento_w in ('IN','T')) then
			if (dt_alteracao_w >= current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp) and (dt_alteracao_w <= current_setting('apap_dinamico_pck.dt_final_w')::timestamp) then
			  if (nr_hora_w > qt_hora_w + 1) then
				nr_hora_dif_w := somente_numero(to_char(dt_alteracao_w,'hh24'));

				ind := coalesce(nr_hora_ant_w,qt_hora_w + 1);
				while(ind <= nr_hora_dif_w) loop
				  dt_customizada_w := to_date(to_char(current_setting('apap_dinamico_pck.hr_inicio_apap_w')::timestamp,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
				  apap_total_w.extend(1);
				  indice_w := apap_total_w.count;
				  apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
				  apap_total_w[indice_w].qt_total := qt_gasoterapia_ant_w;
				  apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
				  apap_total_w[indice_w].dt_apap := dt_customizada_w;
				  apap_total_w[indice_w].nr_seq_gas := r_consultas.nr_seq_gas;
				  ind := ind + 1;
				end loop;

				ind := nr_hora_dif_w + 1;
				while(ind <= 23) loop
				  dt_customizada_w := to_date(to_char(current_setting('apap_dinamico_pck.hr_inicio_apap_w')::timestamp,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
				  apap_total_w.extend(1);
				  indice_w := apap_total_w.count;
				  apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
				  apap_total_w[indice_w].qt_total := null;
				  apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
				  apap_total_w[indice_w].dt_apap := dt_customizada_w;
				  apap_total_w[indice_w].nr_seq_gas := r_consultas.nr_seq_gas;
				  ind := ind + 1;
				end loop;

				ind := 0;
				while(ind < qt_hora_w + 1) loop
				  dt_customizada_w := to_date(to_char(current_setting('apap_dinamico_pck.hr_inicio_apap_w')::timestamp,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
				  apap_total_w.extend(1);
				  indice_w := apap_total_w.count;
				  apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
				  apap_total_w[indice_w].qt_total := null;
				  apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
				  apap_total_w[indice_w].dt_apap := dt_customizada_w;
				  apap_total_w[indice_w].nr_seq_gas := r_consultas.nr_seq_gas;
				  ind := ind + 1;
				end loop;

			  elsif (coalesce(nr_hora_ant_w,0) > qt_hora_w + 1) then
				ind := coalesce(nr_hora_ant_w,0);
				while(ind <= 23) loop
				  dt_customizada_w := to_date(to_char(current_setting('apap_dinamico_pck.hr_inicio_apap_w')::timestamp,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
				  apap_total_w.extend(1);
				  indice_w := apap_total_w.count;
				  apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
				  apap_total_w[indice_w].qt_total := qt_gasoterapia_ant_w;
				  apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
				  apap_total_w[indice_w].dt_apap := dt_customizada_w;
				  apap_total_w[indice_w].nr_seq_gas := r_consultas.nr_seq_gas;
				  ind := ind + 1;
				end loop;

				ind := 0;
				while(ind <= nr_hora_w) loop
				  dt_customizada_w := to_date(to_char(current_setting('apap_dinamico_pck.hr_inicio_apap_w')::timestamp,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
				  apap_total_w.extend(1);
				  indice_w := apap_total_w.count;
				  apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
				  apap_total_w[indice_w].qt_total := qt_gasoterapia_ant_w;
				  apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
				  apap_total_w[indice_w].dt_apap := dt_customizada_w;
				  apap_total_w[indice_w].nr_seq_gas := r_consultas.nr_seq_gas;
				  ind := ind + 1;
				end loop;
			  elsif (coalesce(nr_hora_ant_w,0) < qt_hora_w + 1) then
				ind := coalesce(nr_hora_ant_w,0);
				while(ind <= nr_hora_w) loop
				  dt_customizada_w := to_date(to_char(current_setting('apap_dinamico_pck.hr_inicio_apap_w')::timestamp,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
				  apap_total_w.extend(1);
				  indice_w := apap_total_w.count;
				  apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
				  apap_total_w[indice_w].qt_total := qt_gasoterapia_ant_w;
				  apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
				  apap_total_w[indice_w].dt_apap := dt_customizada_w;
				  apap_total_w[indice_w].nr_seq_gas := r_consultas.nr_seq_gas;
				  ind := ind + 1;
				end loop;
			  end if;

			  nr_hora_ant_w := nr_hora_w;
			end if;
		  end if;

		  qt_gasoterapia_ant_w := qt_gasoterapia_w;
		end loop read_gasoterapia;

		if (ie_cursor_w = 'S') and (ie_evento_w in ('I','R','V')) then
		  if (clock_timestamp() <= current_setting('apap_dinamico_pck.dt_final_w')::timestamp) then
			if (nr_hora_w > qt_hora_w + 1) and ((trunc(current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp,'dd') = trunc(current_setting('apap_dinamico_pck.dt_final_w')::timestamp,'dd')) or (clock_timestamp() >= current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp)) then
			  nr_hora_dif_w := somente_numero(to_char(clock_timestamp(),'hh24'));
			  ind := coalesce(nr_hora_ant_w,qt_hora_w + 1);
						  if (nr_hora_dif_w < ind) then
				while(ind <= 23) loop
				  dt_customizada_w := to_date(to_char(current_setting('apap_dinamico_pck.hr_inicio_apap_w')::timestamp,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
				  apap_total_w.extend(1);
				  indice_w := apap_total_w.count;
				  apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
				  apap_total_w[indice_w].qt_total := qt_gasoterapia_ant_w;
				  apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
				  apap_total_w[indice_w].dt_apap := dt_customizada_w;
				  apap_total_w[indice_w].nr_seq_gas := r_consultas.nr_seq_gas;
				  ind := ind + 1;
				end loop;

				ind := 0;
				while(ind < nr_hora_w) loop
				  dt_customizada_w := to_date(to_char(current_setting('apap_dinamico_pck.hr_inicio_apap_w')::timestamp,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
				  apap_total_w.extend(1);
				  indice_w := apap_total_w.count;
				  apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
				  apap_total_w[indice_w].qt_total := qt_gasoterapia_ant_w;
				  apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
				  apap_total_w[indice_w].dt_apap := dt_customizada_w;
				  apap_total_w[indice_w].nr_seq_gas := r_consultas.nr_seq_gas;
				  ind := ind + 1;
				end loop;
			  else
				while(ind <= nr_hora_dif_w) loop
				  dt_customizada_w := to_date(to_char(current_setting('apap_dinamico_pck.hr_inicio_apap_w')::timestamp,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
				  apap_total_w.extend(1);
				  indice_w := apap_total_w.count;
				  apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
				  apap_total_w[indice_w].qt_total := qt_gasoterapia_ant_w;
				  apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
				  apap_total_w[indice_w].dt_apap := dt_customizada_w;
				  apap_total_w[indice_w].nr_seq_gas := r_consultas.nr_seq_gas;
				  ind := ind + 1;
				end loop;
			  end if;

			elsif (nr_hora_w < qt_hora_w + 1) and (dt_alteracao_w < current_setting('apap_dinamico_pck.dt_inicial_w')::timestamp) then
			  nr_hora_dif_w 	:= somente_numero(to_char(clock_timestamp(),'hh24'));
			  ind := qt_hora_w + 1;

			  while(ind <= nr_hora_dif_w) loop
				dt_customizada_w := to_date(to_char(current_setting('apap_dinamico_pck.hr_inicio_apap_w')::timestamp,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
				apap_total_w.extend(1);
				indice_w := apap_total_w.count;
				apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
				apap_total_w[indice_w].qt_total := qt_gasoterapia_ant_w;
				apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
				apap_total_w[indice_w].dt_apap := dt_customizada_w;
				apap_total_w[indice_w].nr_seq_gas := r_consultas.nr_seq_gas;
				ind := ind + 1;
			  end loop;
			end if;
		  elsif (nr_hora_w >= qt_hora_w + 1) then
			ind := nr_hora_w + 1;
			while(ind <= 23) loop
			  dt_customizada_w := to_date(to_char(current_setting('apap_dinamico_pck.hr_inicio_apap_w')::timestamp,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
			  apap_total_w.extend(1);
			  indice_w := apap_total_w.count;
			  apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
			  apap_total_w[indice_w].qt_total := qt_gasoterapia_ant_w;
			  apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
			  apap_total_w[indice_w].dt_apap := dt_customizada_w;
			  apap_total_w[indice_w].nr_seq_gas := r_consultas.nr_seq_gas;
			  ind := ind + 1;
			end loop;

			ind := 0;
			while(ind <= qt_hora_w) loop
			  dt_customizada_w := to_date(to_char(current_setting('apap_dinamico_pck.hr_inicio_apap_w')::timestamp,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
			  apap_total_w.extend(1);
			  indice_w := apap_total_w.count;
			  apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
			  apap_total_w[indice_w].qt_total := qt_gasoterapia_ant_w;
			  apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
			  apap_total_w[indice_w].dt_apap := dt_customizada_w;
			  apap_total_w[indice_w].nr_seq_gas := r_consultas.nr_seq_gas;
			  ind := ind + 1;
			end loop;

				  elsif (nr_hora_w < qt_hora_w + 1) then
					  ind := nr_hora_w;
					  while(ind <= qt_hora_w) loop
			  dt_customizada_w := to_date(to_char(current_setting('apap_dinamico_pck.hr_inicio_apap_w')::timestamp,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');
			  apap_total_w.extend(1);
			  indice_w := apap_total_w.count;
			  apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
			  apap_total_w[indice_w].qt_total := qt_gasoterapia_ant_w;
			  apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
			  apap_total_w[indice_w].dt_apap := dt_customizada_w;
			  apap_total_w[indice_w].nr_seq_gas := r_consultas.nr_seq_gas;
			  ind := ind + 1;
			end loop;
		  end if;
		end if;
	  elsif (r_consultas.ie_informacao = 'IA') then
		<<read_itens_administrados>>
		for r_itens_administrados in c_itens_administrados(r_consultas.cd_material)
		loop
		  apap_total_w.extend(1);
		  indice_w := apap_total_w.count;
		  apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
		  apap_total_w[indice_w].qt_total := r_itens_administrados.qt_dose;
		  apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
		  apap_total_w[indice_w].dt_apap := r_itens_administrados.dt_fim_horario;
		  apap_total_w[indice_w].cd_material := r_itens_administrados.cd_material;
		end loop read_itens_administrados;
	  elsif (r_consultas.ie_informacao = 'IP') then
		<<read_itens_pendentes>>
		for r_itens_pendentes in c_itens_pendentes(r_consultas.cd_material)
		loop
		  apap_total_w.extend(1);
		  indice_w := apap_total_w.count;
		  apap_total_w[indice_w].nr_atendimento := current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type;
		  apap_total_w[indice_w].qt_total := r_itens_pendentes.qt_dose;
		  apap_total_w[indice_w].ie_informacao := r_consultas.ie_informacao;
		  apap_total_w[indice_w].dt_apap := r_itens_pendentes.dt_inicio_horario;
		  apap_total_w[indice_w].cd_material := r_itens_pendentes.cd_material;
		end loop read_itens_administrados;
	  end if;
	end loop read_consulta;

	delete
		from  w_apap_total
		where nr_atendimento = current_setting('apap_dinamico_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%type
		and   nm_usuario = current_setting('apap_dinamico_pck.nm_usuario_w')::usuario.nm_usuario%type;

		commit;

	insert into w_apap_total(nr_sequencia,
							  dt_atualizacao,
							  nm_usuario,
							  dt_atualizacao_nrec,
							  nm_usuario_nrec,
							  nr_atendimento,
							  cd_pessoa_fisica,
							  qt_total,
							  ie_informacao,
							  dt_apap,
							  nr_ficha_tecnica,
							  ie_controla_adep,
							  ie_tipo_dosagem,
							  nr_seq_gas,
							  cd_material,
							  nr_prescricao,
							  nr_seq_solucao,
							  nr_seq_documento,
							  nr_seq_cpoe,
							  dt_inicio_continuo,
							  dt_fim_continuo,
							  ie_evento_tipo,
							  ds_resultado,
							  ie_tipo_elemento,
							  nr_seq_gqa_prot_eta,
							  nr_seq_disp_pac,
							  nr_seq_diagnostico,
							  nr_seq_intervention,
							  ds_tooltip,
							  ie_status,
							  nr_seq_cp_indicator,
							  qt_dose,
							  cd_pessoa_responsavel,
							  nr_seq_icone)
							  SELECT  nextval('w_apap_total_seq'),
									  clock_timestamp(),
									  current_setting('apap_dinamico_pck.nm_usuario_w')::usuario.nm_usuario%type,
									  clock_timestamp(),
									  current_setting('apap_dinamico_pck.nm_usuario_w')::usuario.nm_usuario%type,
									  nr_atendimento,
									  cd_pessoa_fisica,
									  qt_total,
									  ie_informacao,
									  dt_apap,
									  nr_ficha_tecnica,
									  ie_controla_adep,
									  ie_tipo_dosagem,
									  nr_seq_gas,
									  cd_material,
									  nr_prescricao,
									  nr_seq_solucao,
									  current_setting('apap_dinamico_pck.nr_seq_documento_w')::documento.nr_sequencia%type,
									  nr_seq_cpoe,
									  dt_inicio_continuo,
									  dt_fim_continuo,
									  ie_evento_tipo,
									  ds_resultado,
									  ie_tipo_elemento,
									  nr_seq_gqa_prot_eta,
									  nr_seq_disp_pac,
									  nr_seq_diagnostico,
									  nr_seq_intervention,
									  ds_tooltip,
									  ie_status,
									  nr_seq_cp_indicator,
									  qt_dose,
									  cd_pessoa_responsavel,
									  nr_seq_icone
							  from (SELECT	nr_atendimento,
											  cd_pessoa_fisica,
											  sum(qt_total) qt_total,
											  ie_informacao,
											  dt_apap,
											  nr_ficha_tecnica,
											  ie_controla_adep,
											  ie_tipo_dosagem,
											  nr_seq_gas,
											  cd_material,
											  nr_prescricao,
											  nr_seq_solucao,
											  nr_seq_cpoe,
											  dt_inicio_continuo,
											  dt_fim_continuo,
											  ie_evento_tipo,
											  ds_resultado,
											  ie_tipo_elemento,
											  nr_seq_gqa_prot_eta,
											  nr_seq_disp_pac,
											  nr_seq_diagnostico,
											  nr_seq_intervention,
											  ds_tooltip,
											  ie_status,
											  nr_seq_cp_indicator,
											  qt_dose,
											  cd_pessoa_responsavel,
											  nr_seq_icone
									  from    table(get_apap_total)
									  group by
											  nr_atendimento,
											  cd_pessoa_fisica,
											  ie_informacao,
											  dt_apap,
											  nr_ficha_tecnica,
											  ie_controla_adep,
											  ie_tipo_dosagem,
											  nr_seq_gas,
											  cd_material,
											  nr_prescricao,
											  nr_seq_solucao,
											  nr_seq_cpoe,
											  dt_inicio_continuo,
											  dt_fim_continuo,
											  ie_evento_tipo,
											  ds_resultado,
											  ie_tipo_elemento,
											  nr_seq_gqa_prot_eta,
											  nr_seq_disp_pac,
											  nr_seq_diagnostico,
											  nr_seq_intervention,
											  ds_tooltip,
											  ie_status,
											  nr_seq_cp_indicator,
											  qt_dose,
											  cd_pessoa_responsavel,
											  nr_seq_icone) alias9;

	commit;

  exception
	when others then
	  PERFORM set_config('apap_dinamico_pck.sql_errm_w', sqlerrm, false);
	  CALL apap_dinamico_pck.gera_log_apap('gera_resultados_agrupamento:'||current_setting('apap_dinamico_pck.sql_errm_w')::varchar(4000));
  end;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE apap_dinamico_pck.gera_resultados_agrupamento () FROM PUBLIC;
