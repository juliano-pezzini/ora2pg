-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION apap_dinamico_pck.get_nutrient_totals ( nr_atendimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp) RETURNS SETOF T_NUTRIENT_TOTALS AS $body$
DECLARE



r_nutrient_item_w 	r_nutrient_item;
dt_inicio_adm_w		timestamp := null;
dt_fim_adm_w		timestamp := null;
qt_volume_adm_w		double precision := 0;
qt_volume_etapa_w	double precision := 0;
nr_seq_cpoe_w		cpoe_material.nr_sequencia%type;
cd_material_w		cpoe_material.cd_material%type;

cInfusion CURSOR FOR
	SELECT	cpoe.cd_material,
			cpoe.nr_sequencia nr_seq_cpoe,
			Obter_dose_convertida(cpoe.cd_material, cpoe.qt_dose, cpoe.cd_unidade_medida, 'ml') qt_volume
	from    cpoe_material cpoe
	where   cpoe.nr_atendimento = nr_atendimento_p
	and     cpoe.ie_controle_tempo = 'S'
	and     ((CASE WHEN coalesce(cpoe.dt_lib_suspensao::text, '') = '' THEN  cpoe.dt_fim  ELSE coalesce(cpoe.dt_suspensao, cpoe.dt_fim) END  >= dt_inicio_p)
	or (CASE WHEN coalesce(cpoe.dt_lib_suspensao::text, '') = '' THEN  cpoe.dt_fim  ELSE coalesce(cpoe.dt_suspensao, cpoe.dt_fim) coalesce(END::text, '') = ''))
	and     cpoe.dt_inicio <= dt_fim_p
	and     exists (	SELECT  1
						from    nut_elem_material mat,
								nut_elemento elem
						where   mat.cd_material = cpoe.cd_material
						and     mat.nr_seq_elemento = elem.nr_sequencia
						and     elem.ie_situacao = 'A'
						and     mat.ie_situacao = 'A');

cEvents CURSOR FOR
	SELECT	dt_alteracao,
			ie_alteracao,
			qt_dosagem,
			ie_tipo_dosagem,
			qt_volume_fase,
			qt_vol_infundido
	from    prescr_solucao_evento pse
	left 	join adep_motivo_interrupcao ami on pse.nr_seq_motivo = ami.nr_sequencia
	where 	pse.nr_seq_cpoe = nr_seq_cpoe_w
	and 	pse.ie_evento_valido = 'S'
	and     ((pse.ie_alteracao = 2 and ami.ie_troca_frasco = 'S')
	or (pse.ie_alteracao = 1)
	or (pse.ie_alteracao = 4))
	and		pse.dt_alteracao between dt_inicio_p and dt_fim_p
	order by
			dt_alteracao asc;

cNutrients CURSOR FOR
	SELECT	elem.nr_sequencia,
			elem.ie_tipo_elemento,
			elem.cd_unidade_medida unid_med_elemento,
			mat.qt_conv_unid_cons fator_conv_um_elem,
			mat.qt_conversao_ml fator_conv_qt_prod,
			mat.cd_unid_med_conv,
			mat.qt_conversao,
			mat.ie_sem_volume
	from    nut_elem_material mat,
			nut_elemento elem
	where   mat.cd_material = cd_material_w
	and     mat.nr_seq_elemento = elem.nr_sequencia
	and     elem.ie_situacao = 'A'
	and     mat.ie_situacao = 'A';
BEGIN

for infusion_schedule_w in cInfusion
	loop
	if (infusion_schedule_w.qt_volume > 0) then
		nr_seq_cpoe_w     	:= infusion_schedule_w.nr_seq_cpoe;
		cd_material_w		:= infusion_schedule_w.cd_material;
		for event_w in cEvents
			loop
			/*
			1 - Inicio de solucao
			2 - Interrupcao de solucao
			4 - Finalizacao de solucao
			*/
			qt_volume_adm_w := 0;
			if (event_w.ie_alteracao = 1) then
				dt_inicio_adm_w := event_w.dt_alteracao;
			elsif (event_w.ie_alteracao in (2, 4)) then
				dt_fim_adm_w 	:= event_w.dt_alteracao;
				qt_volume_adm_w	:= event_w.qt_vol_infundido;
			end if;
			if (qt_volume_adm_w > 0) then
				for nutrient_w in cNutrients
					loop
					r_nutrient_item_w.ie_tipo_nutriente := nutrient_w.ie_tipo_elemento;
					r_nutrient_item_w.ie_um_nutriente	:= nutrient_w.unid_med_elemento;
					r_nutrient_item_w.dt_inicio_adm		:= dt_inicio_adm_w;
					r_nutrient_item_w.dt_fim_adm		:= dt_fim_adm_w;
					r_nutrient_item_w.qt_administrada	:= (qt_volume_adm_w / nutrient_w.fator_conv_qt_prod) * nutrient_w.fator_conv_um_elem;
					RETURN NEXT r_nutrient_item_w;
				end loop;
			end if;
			end loop;
	end if;
	end loop;
return;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION apap_dinamico_pck.get_nutrient_totals ( nr_atendimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp) FROM PUBLIC;
