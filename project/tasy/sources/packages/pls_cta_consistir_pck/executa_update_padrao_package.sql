-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- feito com union por motivo de performance, antes era feito em um select s_ com OR e em bases grandes apresentava problemas de performance



-- executa os comandos padr_es para atualizar redund_ncias, tempos, etc.



CREATE OR REPLACE PROCEDURE pls_cta_consistir_pck.executa_update_padrao ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, ie_tipo_update_p text, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


nr_seq_cbo_saude_w		pls_conta.nr_seq_cbo_saude%type;
cd_cooperativa_w		pls_congenere.cd_cooperativa%type;
ie_tipo_contratacao_w		pls_plano.ie_tipo_contratacao%type;
ie_participacao_w		pls_plano.ie_participacao%type;
ie_tipo_plano_w			pls_conta.ie_tipo_plano%type;
ie_tipo_beneficiario_w		pls_contrato.ie_tipo_beneficiario%type;
ie_tipo_gat_w			pls_guia_plano.ie_tipo_gat%type;
cd_senha_externa_guia_w 	pls_guia_plano.cd_senha_externa%type;
qt_existe_fat_w			integer;
ie_consiste_guia_w		pls_regra_autorizacao.ie_liberado%type;
ie_evento_w			varchar(5);
nr_seq_prestador_w		pls_prestador.nr_sequencia%type;
nr_seq_prestador_retorno_w	pls_prestador.nr_sequencia%type;
nr_seq_regra_retorno_w		pls_prestador_consistencia.nr_sequencia%type;
ie_existe_regra_w		varchar(1);
nr_seq_motivo_glosa_w		pls_regra_autorizacao.nr_seq_motivo_glosa%type;	
qt_analise_w			integer	:= 0;

c_contas_upd CURSOR(	nr_seq_lote_pc		pls_lote_protocolo_conta.nr_sequencia%type,
			nr_seq_protocolo_pc	pls_protocolo_conta.nr_sequencia%type,
			nr_seq_lote_processo_pc	pls_cta_lote_processo.nr_sequencia%type,	
			nr_seq_conta_pc		pls_conta.nr_sequencia%type) FOR
SELECT	a.nr_sequencia nr_seq_conta,
	a.nr_seq_cbo_saude,
	a.cd_medico_executor,
	a.cd_guia_referencia,
	a.nr_seq_segurado,
	a.ie_tipo_conta,
	a.cd_senha_externa,
	a.nr_seq_protocolo,
	b.nr_seq_congenere,
	pls_obter_produto_benef(b.nr_sequencia, a.dt_atendimento) as nr_seq_plano,
	b.nr_seq_contrato
from	pls_conta_v a,
	pls_segurado b
where	a.nr_seq_lote_conta = nr_seq_lote_pc
and	a.ie_status <> 'C'
and	b.nr_sequencia = a.nr_seq_segurado

union all

SELECT	a.nr_sequencia nr_seq_conta,
	a.nr_seq_cbo_saude,
	a.cd_medico_executor,
	a.cd_guia_referencia,
	a.nr_seq_segurado,
	a.ie_tipo_conta,
	a.cd_senha_externa,
	a.nr_seq_protocolo,
	b.nr_seq_congenere,
	pls_obter_produto_benef(b.nr_sequencia, a.dt_atendimento) as nr_seq_plano,
	b.nr_seq_contrato
from	pls_conta_v a,
	pls_segurado b
where	a.nr_seq_protocolo = nr_seq_protocolo_pc
and	a.ie_status <> 'C'
and	b.nr_sequencia = a.nr_seq_segurado

union all

select	a.nr_sequencia nr_seq_conta,
	a.nr_seq_cbo_saude,
	a.cd_medico_executor,
	a.cd_guia_referencia,
	a.nr_seq_segurado,
	a.ie_tipo_conta,
	a.cd_senha_externa,
	a.nr_seq_protocolo,
	b.nr_seq_congenere,
	pls_obter_produto_benef(b.nr_sequencia, a.dt_atendimento) as nr_seq_plano,
	b.nr_seq_contrato
from	pls_conta_v a,
	pls_segurado b
where	a.nr_sequencia = nr_seq_conta_pc
and	a.ie_status <> 'C'
and	b.nr_sequencia = a.nr_seq_segurado

union all

select	a.nr_sequencia nr_seq_conta,
	a.nr_seq_cbo_saude,
	a.cd_medico_executor,
	a.cd_guia_referencia,
	a.nr_seq_segurado,
	a.ie_tipo_conta,
	a.cd_senha_externa,
	a.nr_seq_protocolo,
	b.nr_seq_congenere,
	pls_obter_produto_benef(b.nr_sequencia, a.dt_atendimento) as nr_seq_plano,
	b.nr_seq_contrato
from	pls_conta_v a,
	pls_segurado b
where	a.ie_status <> 'C'
and	b.nr_sequencia = a.nr_seq_segurado
and	exists (select	1
			from	pls_cta_lote_proc_conta p
			where	p.nr_seq_lote_processo = nr_seq_lote_processo_pc
			and	p.nr_seq_conta = a.nr_sequencia);

BEGIN

if (ie_tipo_update_p = 'inicio_processo') then
	
	for r_c_contas_upd_w in c_contas_upd(nr_seq_lote_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p) loop
	
		--Diego 18/03/2012 - Na consist_ncia da conta, at_ ser verificado a cria__o de p_s, a conta n_o possui faturamento.

		update	pls_conta
		set	ie_status_fat		= 'N',
			dt_inicio_consistencia	= clock_timestamp()
		where	nr_sequencia	= r_c_contas_upd_w.nr_seq_conta;
		
		update	pls_conta_proc
		set	ie_regra_qtde_execucao	= 'N',
			nr_seq_regra_qtde_exec	 = NULL
		where	nr_seq_conta		= r_c_contas_upd_w.nr_seq_conta;

		--Francisco - 31/10/2012 - OS 513343

		update	pls_conta_proc
		set	ie_status_pagamento	= 'I'
		where	nr_seq_conta		= r_c_contas_upd_w.nr_seq_conta
		and	coalesce(ie_status_pagamento::text, '') = '';

		update	pls_conta_mat
		set	ie_status_pagamento	= 'I'
		where	nr_seq_conta		= r_c_contas_upd_w.nr_seq_conta
		and	coalesce(ie_status_pagamento::text, '') = '';

		update	pls_proc_participante a
		set	ie_status_pagamento	= 'I'
		where	coalesce(ie_status_pagamento::text, '') = ''
		and	exists (SELECT	1
				from	pls_conta_proc x
				where	x.nr_sequencia = a.nr_seq_conta_proc
				and	x.nr_seq_conta	= r_c_contas_upd_w.nr_seq_conta);
		--Fim Francisco - 31/10/2012 - OS 513343 

		
		-- in_cio redund_ncias

		-- se o CBO n_o foi informado e tiver m_dico executor

		if (coalesce(r_c_contas_upd_w.nr_seq_cbo_saude::text, '') = '') and (r_c_contas_upd_w.cd_medico_executor IS NOT NULL AND r_c_contas_upd_w.cd_medico_executor::text <> '') then
			
			-- busca um CBO para a conta

			select	max(nr_seq_cbo_saude)
			into STRICT	nr_seq_cbo_saude_w
			from	medico_especialidade
			where	cd_pessoa_fisica  = r_c_contas_upd_w.cd_medico_executor
			and	nr_seq_prioridade = 	(SELECT	min(nr_seq_prioridade)
							 from	medico_especialidade
							 where	cd_pessoa_fisica  = r_c_contas_upd_w.cd_medico_executor)
			and	(nr_seq_cbo_saude IS NOT NULL AND nr_seq_cbo_saude::text <> '');
		else
			-- alimenta a vari_vel com o mesmo valor que j_ est_ gravado na tabela

			nr_seq_cbo_saude_w := r_c_contas_upd_w.nr_seq_cbo_saude;
		end if;
		
		-- busca o c_digo da cooperativa

		select	max(a.cd_cooperativa)
		into STRICT	cd_cooperativa_w
		from	pls_congenere	a
		where	a.nr_sequencia	= r_c_contas_upd_w.nr_seq_congenere;
		
		select	max(a.ie_tipo_contratacao),
			max(a.ie_participacao)
		into STRICT	ie_tipo_contratacao_w,
			ie_participacao_w
		from	pls_plano	a
		where	a.nr_sequencia	= r_c_contas_upd_w.nr_seq_plano;
		
		-- Obter o tipo do plano do benefici_rio - Dom_nio 2213

		ie_tipo_plano_w := null;
		if (ie_tipo_contratacao_w = 'I') then
			ie_tipo_plano_w	:= 'IF';
		elsif (ie_participacao_w = 'S') then
			ie_tipo_plano_w	:= 'CSP';
		elsif (ie_participacao_w = 'C') then
			ie_tipo_plano_w	:= 'CCP';
		end if;
		
		select	max(ie_tipo_beneficiario)
		into STRICT	ie_tipo_beneficiario_w
		from	pls_contrato
		where	nr_sequencia	= r_c_contas_upd_w.nr_seq_contrato;
		
		select	max(ie_tipo_gat),
			max(cd_senha_externa)
		into STRICT	ie_tipo_gat_w,
			cd_senha_externa_guia_w
		from	pls_guia_plano
		where	cd_guia		= r_c_contas_upd_w.cd_guia_referencia
		and	nr_seq_segurado	= r_c_contas_upd_w.nr_seq_segurado;
	
		update	pls_conta
		set	nr_seq_cbo_saude	= nr_seq_cbo_saude_w,
			cd_cooperativa		= cd_cooperativa_w,
			nr_seq_plano		= r_c_contas_upd_w.nr_seq_plano,
			ie_tipo_plano		= ie_tipo_plano_w,
			ie_tipo_beneficiario	= ie_tipo_beneficiario_w,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p,
			ie_tipo_gat		= ie_tipo_gat_w,
			-- s_ atualiza a senha se a que estiver informada na tabela for pls_conta estiver nula

			cd_senha_externa	= coalesce(r_c_contas_upd_w.cd_senha_externa, cd_senha_externa_guia_w)
		where	nr_sequencia		= r_c_contas_upd_w.nr_seq_conta;
		
		-- fim redund_ncias

	end loop;

elsif (ie_tipo_update_p = 'fim_processo') then
	
	for r_c_contas_upd_w in c_contas_upd(nr_seq_lote_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p) loop
	
		-- atualiza a utiliza__o de guias

		CALL pls_atualizar_utilizacao_guia(r_c_contas_upd_w.nr_seq_conta, cd_estabelecimento_p, nm_usuario_p);
		
		-- Lepinski - OS 381715 Atualizar o valor de provis_o do procedimento/material

		-- Atualizado em 29/12/2012 - Conforme Adriano, se o valor apresentado veio na conta (N_o foi atualizado pelo sistema), deve considerar o apresentado */

		update	pls_conta_proc
		set	vl_provisao		= CASE WHEN coalesce(vl_procedimento_imp,0)=0 THEN vl_procedimento  ELSE vl_procedimento_imp END ,
			ie_origem_provisao	= CASE WHEN coalesce(vl_procedimento_imp,0)=0 THEN  'C'  ELSE 'A' END
		where	nr_seq_conta		= r_c_contas_upd_w.nr_seq_conta
		and	coalesce(nr_lote_contabil_prov::text, '') = '';

		update	pls_conta_mat
		set	vl_provisao		= CASE WHEN coalesce(vl_material_imp,0)=0 THEN vl_material  ELSE vl_material_imp END ,
			ie_origem_provisao	= CASE WHEN coalesce(vl_material_imp,0)=0 THEN 'C'  ELSE 'A' END
		where	nr_seq_conta		= r_c_contas_upd_w.nr_seq_conta
		and	coalesce(nr_lote_contabil_prov::text, '') = '';

		-- Diego - Ao finalizar a consist_ncia da conta _ verificado se existe itens a faturar.

		-- Se existir seta-se para pendente de faturamento

		select 	count(1)
		into STRICT	qt_existe_fat_w
		from	pls_conta_pos_estabelecido	a
		where	a.nr_seq_conta		= r_c_contas_upd_w.nr_seq_conta		
		and	a.ie_status_faturamento not in ('L','C','N','A')
		and	((ie_situacao		= 'A') or (coalesce(ie_situacao::text, '') = ''));
		
		select 	count(1)
		into STRICT	qt_analise_w
		from	pls_analise_conta
		where	ie_status	not in ('T','C')
		and	nr_sequencia 	in (	SELECT 	nr_seq_analise
						from	pls_conta_pos_estabelecido	a
						where	a.nr_seq_conta		= r_c_contas_upd_w.nr_seq_conta			
						and	((ie_situacao		= 'A') or (coalesce(ie_situacao::text, '') = '')));	
		-- wcbernardino - 17/11/2014

		-- N_o pode passar a conta pra pendente de faturamento quando tiver apenas conta p_s com status como Liberado para faturamento, Cancelado, N_o permite faturamento e tambem desconsiderar o aviso de cobranca.

		-- Mas se tiver UMA (ou mais) conta p_s com status Pendente de an_lise, Permitido faturamento ou Usu_rio (Aguardando A__o), tem que passar para pendente de faturamento.


		if (qt_existe_fat_w > 0) then
			update	pls_conta
			set	ie_status_fat	= 'P'
			where	nr_sequencia	= r_c_contas_upd_w.nr_seq_conta;
		else	
			select 	count(1)
			into STRICT	qt_existe_fat_w
			from	pls_conta_pos_estabelecido	a
			where	a.nr_seq_conta		= r_c_contas_upd_w.nr_seq_conta		
			and	a.ie_status_faturamento = 'L'
			and	((ie_situacao		= 'A') or (coalesce(ie_situacao::text, '') = ''));
			
			if (qt_existe_fat_w > 0) and (qt_analise_w 	= 0) then
				update	pls_conta
				set	ie_status_fat	= 'L'
				where	nr_sequencia	= r_c_contas_upd_w.nr_seq_conta;
			end if;
		end if;
		
	end loop;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cta_consistir_pck.executa_update_padrao ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, ie_tipo_update_p text, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
