-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--Rotina repons_vel por deixar a conta pronta para o fechamento(status "liberado para fechamento").



CREATE OR REPLACE PROCEDURE pls_cta_consistir_pck.pls_gerencia_liberar_conta ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p pls_outorgante.cd_estabelecimento%type) AS $body$
DECLARE


ie_fechar_conta_glosa_w		pls_parametros.ie_fechar_conta_glosa%type;
qt_conta_analise_lib_w		integer;	
ie_status_conta_w		pls_conta.ie_status%type;
tb_protocolos_w			dbms_sql.number_table;
tb_contas_w			dbms_sql.number_table;
tb_status_conta_w		dbms_sql.varchar2_table;
tb_analise_w			dbms_sql.number_table;
nr_indexador_w			integer;	
ie_analise_cm_nova_w		pls_parametros.ie_analise_cm_nova%type;

BEGIN

tb_analise_w.delete;
tb_protocolos_w.delete;
tb_contas_w.delete;	
tb_status_conta_w.delete;
nr_indexador_w := 0;
--Par_metros que informa o momento em que coparticipa__o e p_s estab devem ser gerados. 

ie_fechar_conta_glosa_w	:= pls_cta_consistir_pck.obter_valor_parametro(cd_estabelecimento_p, 'F');
--Obt_m valor do par_metro ie_analise_cm_nova

ie_analise_cm_nova_w	:= pls_cta_consistir_pck.obter_valor_parametro(cd_estabelecimento_p, 'A');

for r_C01_w in current_setting('pls_cta_consistir_pck.c_fechar_contas')::CURSOR(( nr_seq_lote_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p) loop
	
	--Controle para que a sequencia de cada protocolo seja inserido uma _nica vez na lista.

	if (not tb_protocolos_w.exists(r_C01_w.nr_seq_protocolo)) then
		tb_protocolos_w(r_C01_w.nr_seq_protocolo) := r_C01_w.nr_seq_protocolo;
	end if;
	
	--Faz algumas consist_ncias para saber se pode prosseguir com a libera__o da conta.

	CALL pls_cta_consistir_pck.pls_consiste_dados_stat_conta(	r_C01_w.nr_seq_conta, r_C01_w.ie_origem_conta, r_C01_w.ie_status,
					ie_fechar_conta_glosa_w, r_C01_w.ie_atende_glosado, r_C01_w.nr_seq_regra_lib);
			
	-- se n_o estiver cancelada, fechada ou A700 finalizado

	if (r_C01_w.ie_status not in ('C', 'F', 'S')) then
		--Ent_o status  deve ser setado como pendente de libera__o.

		ie_status_conta_w	:= 'P';
		
		--Se todos os materiais e procedimentos estiverem liberados, ent_o status conta  = liberado

		if (pls_cta_consistir_pck.qtde_itens_nao_liberados(r_C01_w.nr_seq_conta) = 0) then
			ie_status_conta_w	:= 'L';
		end if;
	else
		ie_status_conta_w := r_C01_w.ie_status;
	end if;
	
	tb_status_conta_w(nr_indexador_w) := ie_status_conta_w;
	tb_contas_w(nr_indexador_w) := r_C01_w.nr_seq_conta;
	
	--Se atingiu o n_mero de registros pr_-definido, ent_o  chama as rotinas de atualiza__o no banco.

	if (nr_indexador_w >= pls_util_pck.qt_registro_transacao_w) then
		--Modifica status da conta de acordo com o que foi definido anteriormente(Liberado ou permanece com valor atual)

		CALL CALL pls_cta_consistir_pck.atualiza_status_conta(tb_contas_w, tb_status_conta_w, nm_usuario_p);
		
		--Passa os materiais e procedimentos em an_lise para liberado pelo usu_rio

		CALL pls_cta_consistir_pck.libera_itens_em_analise(tb_contas_w);
		
		--Zera vari_veis tabela e indexador.

		tb_contas_w.delete;	
		tb_status_conta_w.delete;
		nr_indexador_w := 0;
	else
		--Como ainda n_o atingiu a quantidade especificada,  continua a incrementar o indexador.

		nr_indexador_w := nr_indexador_w + 1;
	end if;
		
end loop;

--Para ganrantir que todos  os registros das variaveis tabela sejam enviados para o banco

CALL CALL pls_cta_consistir_pck.atualiza_status_conta(tb_contas_w, tb_status_conta_w, nm_usuario_p);
CALL pls_cta_consistir_pck.libera_itens_em_analise(tb_contas_w);

nr_indexador_w := 0;
--Passa uma segundas vez pelos registros do cursor, pois na primeira s_o ajustados todos os status de contas e itens, como

--se utiliza atualiza__o em lote(com forall), ent_o s_ podemos prosseguir ao t_rmino da primeira itera__o por todos os registros do cursor. 

for r_C01_w in current_setting('pls_cta_consistir_pck.c_fechar_contas')::CURSOR(( nr_seq_lote_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p) loop
	
	-- Busca a quantidade de contas da an_lise que ainda n_o est_o liberadas para fechamento.

	qt_conta_analise_lib_w := pls_cta_consistir_pck.qt_contas_na_analise(r_C01_w.nr_seq_analise, 'L');
		
	--a an_lise sem auditoria _ setada para "Liberada para fechamento" quando nenhuma de suas contas estiver com status diferente de n_o  liberado.

	--an_lises de auditoria n_o s_o afetadas pois o status Liberado para fechamento n_o ser_ pertinente pois todo o fechamento _ realizado pelo auditor.

	if (qt_conta_analise_lib_w = 0) then		
		
		if (r_C01_w.ie_status_analise = 'S') then
		
			tb_analise_w(nr_indexador_w) := r_C01_w.nr_seq_analise;
		 	if (nr_indexador_w >= pls_util_pck.qt_registro_transacao_w) then
				--lrp  verificar como obter o nome da procedure chamadora

				CALL pls_cta_consistir_pck.alterar_status_analise_cta(tb_analise_w, 'L', 'pls_cta_consistir_pck.pls_gerencia_liberar_conta()', ie_analise_cm_nova_w, nm_usuario_p, cd_estabelecimento_p);
				nr_indexador_w := 0;
				tb_analise_w.delete;
			else
				nr_indexador_w := nr_indexador_w + 1;
			end if;	
		end if;
	end if;
end loop;

--Para ganrantir que todos  os registros das variaveis tabela sejam enviados para o banco

CALL pls_cta_consistir_pck.alterar_status_analise_cta(	tb_analise_w, 'L', 'pls_cta_consistir_pck.pls_gerencia_liberar_conta()',
				ie_analise_cm_nova_w, nm_usuario_p, cd_estabelecimento_p);

--Executa as rotinas pls_altera_status_protocolo e  pls_gerar_valores_protocolo para todos os protocolos envolvidos.

CALL pls_cta_consistir_pck.atualiza_dados_protocolo(tb_protocolos_w, cd_estabelecimento_p, nm_usuario_p);

--Atualiza valores  dos protocolos envolvidos.

CALL pls_cta_consistir_pck.gerenciar_atualizacao_val_prot(tb_protocolos_w, cd_estabelecimento_p, nm_usuario_p);

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cta_consistir_pck.pls_gerencia_liberar_conta ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p pls_outorgante.cd_estabelecimento%type) FROM PUBLIC;
