-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_cta_consistir_pck.verifica_dado_contrato ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type) AS $body$
DECLARE

					
qt_contrato_w		integer;
type t_contrato is table of bigint index by integer;
vetor_contrato_w	t_contrato;
ds_contrato_w		varchar(4000);
nr_seq_contrato_w	pls_contrato.nr_sequencia%type;

C01 CURSOR(	nr_seq_segurado_pc	pls_segurado.nr_sequencia%type) FOR
	SELECT	a.nr_seq_contrato
	from	pls_segurado	a
	where	a.nr_sequencia	= nr_seq_segurado_pc
	-- benefici_rio de plano de sa_de

	and	a.ie_tipo_segurado = 'B';

BEGIN

for r_c_contas_w in current_setting('pls_cta_consistir_pck.c_contas')::CURSOR((	nr_seq_lote_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p) loop
	
	for r_C01_w in C01(r_c_contas_w.nr_seq_segurado) loop
		
		select	count(1)
		into STRICT	qt_contrato_w
		from	pls_contrato
		where	nr_sequencia	= r_C01_w.nr_seq_contrato;
		
		-- se n_o tem contrato armazena no vetor para depois dar a mensagem de defeito

		if (qt_contrato_w = 0) then
			if (vetor_contrato_w.count = 0) then
				vetor_contrato_w(r_C01_w.nr_seq_contrato) := 0;
			else
				-- somente insere no objeto se a an_lise n_o existir

				if not(vetor_contrato_w.exists(r_C01_w.nr_seq_contrato)) then
					vetor_contrato_w(r_C01_w.nr_seq_contrato) := 0;
				end if;
			end if;
		end if;
	end loop;
end loop;

-- se tiver contrato no vetor, coloca todos separados por v_rgulas e aborta o processo

ds_contrato_w := null;
if (vetor_contrato_w.count > 0) then
	
	for nr_seq_contrato_w in vetor_contrato_w.first .. vetor_contrato_w.last loop
		
		if (coalesce(ds_contrato_w::text, '') = '') then
			ds_contrato_w := to_char(nr_seq_contrato_w);
		else
			ds_contrato_w := ', ' || to_char(nr_seq_contrato_w);
		end if;
	end loop;	
end if;

if (ds_contrato_w IS NOT NULL AND ds_contrato_w::text <> '') then
	-- Problema na leitura dos dados do contrato ' || nr_seq_contrato_w ||

	CALL wheb_mensagem_pck.exibir_mensagem_abort(176427, 'NR_SEQ_CONTRATO=' ||ds_contrato_w);
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cta_consistir_pck.verifica_dado_contrato ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type) FROM PUBLIC;
