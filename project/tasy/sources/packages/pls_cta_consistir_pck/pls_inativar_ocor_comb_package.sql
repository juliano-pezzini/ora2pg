-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

--ocorrencia que ir_ inativar as ocorrencias combinadas que ser_o re-consistidas



CREATE OR REPLACE PROCEDURE pls_cta_consistir_pck.pls_inativar_ocor_comb ( nr_seq_lote_p pls_analise_conta.nr_seq_lote_protocolo%type, nm_usuario_p text, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Inativar as glosas e ocorr_ncias de um ou v_rios itens da an_lise , para que o sistema
reative na consist_ncia
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X ]  Objetos do dicion_rio [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relat_rios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de aten__o:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


ie_conta_w			varchar(1)	:= 'N';
nr_seq_conta_glosa_w		bigint;
nr_seq_ocorrencia_benef_w	bigint;
nr_seq_ocorrencia_fat_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_glosa_w			bigint;
qt_ocorrencia_w			integer;

C01 CURSOR(nr_seq_lote_protocolo_pc	pls_analise_conta.nr_seq_lote_protocolo%type)FOR
	SELECT	a.nr_sequencia
	from	pls_conta 		a,
		pls_analise_conta	b
	where	a.nr_seq_analise	= b.nr_sequencia
	and	b.nr_seq_lote_protocolo	= nr_seq_lote_protocolo_pc
	and	a.ie_status not in ('C','F');
	
C03 CURSOR(	nr_seq_conta_pc		pls_conta.nr_sequencia%type,
		nr_seq_ocorrencia_pc	pls_ocorrencia.nr_sequencia%type) FOR
	SELECT	/* +USE_CONCAT */

		a.nr_sequencia,
		a.nr_seq_glosa
	from	pls_ocorrencia_benef	a
	where	((a.ie_situacao		= 'A') or (exists (SELECT 1
								 from 	pls_analise_glo_ocor_grupo	c
								 where	a.nr_sequencia		= c.nr_seq_ocor_benef
								 and	c.ie_status		= 'P')))
	and	a.nr_seq_conta		= nr_seq_conta_pc
	and	coalesce(a.nr_seq_conta_proc::text, '') = ''
	and	coalesce(a.nr_seq_conta_mat::text, '') = ''
	and	coalesce(a.nr_seq_proc_partic::text, '') = ''
	and (ie_lib_manual 	= 'N' 	or coalesce(ie_lib_manual::text, '') = '')
	and	((coalesce(nr_seq_ocorrencia_pc::text, '') = '') or (nr_seq_ocorrencia_pc = a.nr_seq_ocorrencia))
	and	exists (select 1
			 from	pls_ocorrencia		b
			 where	b.nr_sequencia		= a.nr_seq_ocorrencia
			 and	b.ie_regra_combinada	= 'S')
	
union all

	select	a.nr_sequencia,
		a.nr_seq_glosa
	from	pls_conta_proc		b,
		pls_ocorrencia_benef	a
	where	((a.ie_situacao		= 'A') or (exists (select 1
								 from 	pls_analise_glo_ocor_grupo	c
								 where	a.nr_sequencia		= c.nr_seq_ocor_benef
								 and	c.ie_status		= 'P')))
	and	a.nr_seq_conta_proc	= b.nr_sequencia
	and	a.nr_seq_conta		= nr_seq_conta_pc
	and	((coalesce(nr_seq_ocorrencia_pc::text, '') = '') or (nr_seq_ocorrencia_pc = a.nr_seq_ocorrencia))
	and (ie_lib_manual 	= 'N' 	or coalesce(ie_lib_manual::text, '') = '')
	and	exists (select 1
			 from	pls_ocorrencia		b
			 where	b.nr_sequencia		= a.nr_seq_ocorrencia
			 and	b.ie_regra_combinada	= 'S')
	
union all

	select	a.nr_sequencia,
		a.nr_seq_glosa
	from	pls_conta_mat		b,
		pls_ocorrencia_benef	a
	where	((a.ie_situacao		= 'A') or (exists (select 1
								 from 	pls_analise_glo_ocor_grupo	c
								 where	a.nr_sequencia		= c.nr_seq_ocor_benef
								 and	c.ie_status		= 'P')))
	and	a.nr_seq_conta_mat	= b.nr_sequencia
	and	a.nr_seq_conta		= nr_seq_conta_pc
	and	((coalesce(nr_seq_ocorrencia_pc::text, '') = '') or (nr_seq_ocorrencia_pc = a.nr_seq_ocorrencia))
	and (ie_lib_manual 	= 'N' 	or coalesce(ie_lib_manual::text, '') = '')
	and	exists (select 1
			 from	pls_ocorrencia		b
			 where	b.nr_sequencia		= a.nr_seq_ocorrencia
			 and	b.ie_regra_combinada	= 'S')
	
union all

	select	a.nr_sequencia,
		a.nr_seq_glosa
	from	pls_proc_participante	b,
		pls_ocorrencia_benef	a
	where	((a.ie_situacao		= 'A') or (exists (select 1
								 from 	pls_analise_glo_ocor_grupo	c
								 where	a.nr_sequencia		= c.nr_seq_ocor_benef
								 and	c.ie_status		= 'P')))
	and	a.nr_seq_proc_partic	= b.nr_sequencia
	and	a.nr_seq_conta		= nr_seq_conta_pc
	and	((coalesce(nr_seq_ocorrencia_pc::text, '') = '') or (nr_seq_ocorrencia_pc = a.nr_seq_ocorrencia))
	and (ie_lib_manual 	= 'N' 	or coalesce(ie_lib_manual::text, '') = '')
	and	exists (select 1
			 from	pls_ocorrencia		b
			 where	b.nr_sequencia		= a.nr_seq_ocorrencia
			 and	b.ie_regra_combinada	= 'S');

C04 CURSOR(nr_seq_ocorrencia_benef_pc	pls_ocorrencia_benef.nr_sequencia%type) FOR
	SELECT	b.nr_sequencia
	from	pls_ocorrencia_benef	b
	where	b.nr_seq_ocor_pag	= nr_seq_ocorrencia_benef_pc
	and (b.ie_lib_manual 	= 'N' or coalesce(b.ie_lib_manual::text, '') = '');

BEGIN

for r_c01_w in C01(nr_seq_lote_p) loop
	begin
	for r_c03_w in C03(	r_c01_w.nr_sequencia, nr_seq_ocorrencia_p) loop
		begin
		nr_seq_glosa_w	:= r_c03_w.nr_seq_glosa;
		
		update	pls_ocorrencia_benef
		set	ie_situacao		= 'I',
			ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='U' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'S' END
		where	nr_sequencia		= r_c03_w.nr_sequencia;
		
		if (coalesce(nr_seq_glosa_w::text, '') = '') then
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_glosa_w
			from	pls_conta_glosa a
			where	a.nr_seq_ocorrencia_benef	= r_c03_w.nr_sequencia;

		end if;
		
		if (nr_seq_glosa_w IS NOT NULL AND nr_seq_glosa_w::text <> '') then
			update	pls_conta_glosa
			set	ie_situacao		= 'I',
				ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='U' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'S' END
			where	nr_sequencia		= nr_seq_glosa_w;
		end if;
		
		for r_c04_w in C04(r_c03_w.nr_sequencia) loop
			begin
			update	pls_ocorrencia_benef
			set	ie_situacao		= 'I',
				ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='U' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'S' END
			where	nr_sequencia		= r_c04_w.nr_sequencia;
			end;
		end loop;

		end;
	end loop;
	
	end;
end loop;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cta_consistir_pck.pls_inativar_ocor_comb ( nr_seq_lote_p pls_analise_conta.nr_seq_lote_protocolo%type, nm_usuario_p text, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type) FROM PUBLIC;
