-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--Rotina respons_vel pelo fechamento da conta.



CREATE OR REPLACE PROCEDURE pls_cta_consistir_pck.pls_gerencia_fechar_conta ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p pls_outorgante.cd_estabelecimento%type) AS $body$
DECLARE


ie_fechar_conta_glosa_w		pls_parametros.ie_fechar_conta_glosa%type;
ie_status_analise_w		pls_analise_conta.ie_status%type;
qt_conta_analise_fec_w		integer;	
tb_protocolos_w			dbms_sql.number_table;
tb_contas_w			dbms_sql.number_table;
tb_status_conta_w		dbms_sql.varchar2_table;
tb_analise_w			dbms_sql.number_table;
nr_indexador_w			integer;
ie_analise_cm_nova_w		pls_parametros.ie_analise_cm_nova%type;

BEGIN

tb_status_conta_w.delete;
tb_protocolos_w.delete;
tb_analise_w.delete;
tb_contas_w.delete;	
nr_indexador_w := 0;


--Obt_m valor do par_mtro ie_fechar_conta_glosa

ie_fechar_conta_glosa_w	:= pls_cta_consistir_pck.obter_valor_parametro(cd_estabelecimento_p, 'F');
--Obt_m valor do par_metro ie_analise_cm_nova

ie_analise_cm_nova_w	:= pls_cta_consistir_pck.obter_valor_parametro(cd_estabelecimento_p, 'A');

for r_C01_w in current_setting('pls_cta_consistir_pck.c_fechar_contas')::CURSOR((	nr_seq_lote_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p) loop
	
	--Controle para que a sequencia de cada protocolo seja inserido uma _nica vez na lista.

	if (not tb_protocolos_w.exists(r_C01_w.nr_seq_protocolo)) then
		tb_protocolos_w(r_C01_w.nr_seq_protocolo) := r_C01_w.nr_seq_protocolo;
	end if;
	
	--Faz algumas consist_ncias para saber se pode prosseguir com a libera__o da conta.

	CALL pls_cta_consistir_pck.pls_consiste_dados_stat_conta(	r_C01_w.nr_seq_conta, r_C01_w.ie_origem_conta, r_C01_w.ie_status,
					ie_fechar_conta_glosa_w, r_C01_w.ie_atende_glosado, r_C01_w.nr_seq_regra_lib);
						
	tb_status_conta_w(nr_indexador_w) := 'F';
	tb_contas_w(nr_indexador_w) := r_C01_w.nr_seq_conta;
	
	--Se atingiu o n_mero de registros pr_-definido, ent_o  chama as rotinas de atualiza__o no banco.

	if (nr_indexador_w >= pls_util_pck.qt_registro_transacao_w) then
		
		CALL CALL pls_cta_consistir_pck.atualiza_status_conta(tb_contas_w, tb_status_conta_w, nm_usuario_p);
		
		--Consist_ncia para verifica__o dos valores liberados para pagamento de produ__o m_dica o valor liberado do item sempre dever_ ser igual ao liberado para pagamento

		CALL pls_cta_consistir_pck.atualiza_valores_item(tb_contas_w);
		
		--Zera vari_veis tabela e indexador.

		tb_contas_w.delete;	
		tb_status_conta_w.delete;
		nr_indexador_w := 0;
	else
		--Como ainda n_o atingiu a quantidade especificada,  continua a incrementar o indexador.

		nr_indexador_w := nr_indexador_w + 1;
	end if;
					
end loop;

--Caso ainda tenham registros nas vari_veis tabela, ent_o manda para o banco.s

CALL CALL pls_cta_consistir_pck.atualiza_status_conta(tb_contas_w, tb_status_conta_w, nm_usuario_p);	
CALL pls_cta_consistir_pck.atualiza_valores_item(tb_contas_w);

nr_indexador_w := 0;
--Na segunda passagem pelas contas,  os status das contas j_ estar_o atualizados  e valor dos itens  tamb_m

for r_C01_w in current_setting('pls_cta_consistir_pck.c_fechar_contas')::CURSOR(( nr_seq_lote_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p) loop

	-- Busca a quantidade de contas da an_lise que n_o est_o fechadas

	qt_conta_analise_fec_w := pls_cta_consistir_pck.qt_contas_na_analise(r_C01_w.nr_seq_analise, 'F');

	--Se todas as contas da an_lise estiverem fechadas, ent_o altera o status da an_lise para  "atendimento encerrado" .("ie_status = T") .

	if (qt_conta_analise_fec_w = 0) then
		
		--Se status da an_lise estiver entre liberado para fechamento e atendimento sem auditoria

		if (r_C01_w.ie_status_analise in ('L', 'S')) then
		
			tb_analise_w(nr_indexador_w) := r_C01_w.nr_seq_analise;
			--Altera status da an_lise para atendimento encerrado(T)

			if (nr_indexador_w >= pls_util_pck.qt_registro_transacao_w) then
				CALL pls_cta_consistir_pck.alterar_status_analise_cta(tb_analise_w, 'T', 'pls_cta_consistir_pck.pls_gerencia_fechar_conta()', ie_analise_cm_nova_w, nm_usuario_p, cd_estabelecimento_p);
				tb_analise_w.delete;
				nr_indexador_w := 0;
			else
				nr_indexador_w := nr_indexador_w + 1;
			end if;
		end if;
	end if;
	
end loop;

--Podem sobrar registros na lista, nesse caso, manda para o banco.

CALL pls_cta_consistir_pck.alterar_status_analise_cta(tb_analise_w, 'T', 'pls_cta_consistir_pck.pls_fechar_conta', ie_analise_cm_nova_w, nm_usuario_p, cd_estabelecimento_p);

--Para atualizar o status dos protocolos

CALL pls_cta_consistir_pck.atualiza_dados_protocolo(tb_protocolos_w, cd_estabelecimento_p, nm_usuario_p);

--Atualiza valores  dos protocolos envolvidos.

CALL pls_cta_consistir_pck.gerenciar_atualizacao_val_prot(tb_protocolos_w, cd_estabelecimento_p, nm_usuario_p);

--Atualiza valores das conta(redund_ncias)

CALL pls_cta_consistir_pck.atualiza_valor_conta(nr_seq_lote_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p, nm_usuario_p, cd_estabelecimento_p);

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cta_consistir_pck.pls_gerencia_fechar_conta ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p pls_outorgante.cd_estabelecimento%type) FROM PUBLIC;
