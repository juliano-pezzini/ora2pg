-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ctb_online_pck.ctb_acumular_saldo (nr_seq_mes_ref_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


  dt_referencia_w            ctb_mes_ref.dt_referencia%type;
  cd_estabelecimento_w       estabelecimento.cd_estabelecimento%type;
  cd_classificacao_w         conta_contabil.cd_classificacao%type;
  cd_classif_titulo_w        conta_contabil.cd_classificacao%type;
  cd_classif_sup_titulo_w    conta_contabil.cd_classif_superior%type;
  ie_tipo_w                  conta_contabil.ie_tipo%type;
  ie_compensacao_w           conta_contabil.ie_compensacao%type;
  cd_conta_contabil_titulo_w conta_contabil.cd_conta_contabil%type;
  nr_nivel_conta_max_w       ctb_saldo.nr_nivel_conta%type := 20;
  vl_debito_w                ctb_saldo.vl_debito%type;
  vl_credito_w               ctb_saldo.vl_credito%type;
  vl_movimento_w             ctb_saldo.vl_movimento%type;
  vl_saldo_w                 ctb_saldo.vl_saldo%type;
  nr_nivel_conta_w           ctb_saldo.nr_nivel_conta%type;
  ie_debito_credito_w        ctb_grupo_conta.ie_debito_credito%type;
  ie_debito_credito_titulo_w ctb_grupo_conta.ie_debito_credito%type;
  cd_empresa_w               ctb_mes_ref.cd_empresa%type;
  qt_regra_classif_w         integer;
  ie_conta_titulo_vigente_w  varchar(1) := 'S';

  C01 CURSOR FOR
      SELECT a.cd_estabelecimento,
              a.cd_classificacao,
              a.cd_classif_sup,
              sum(a.vl_debito),
              sum(a.vl_credito),
              sum(a.vl_movimento),
              sum(a.vl_saldo),
              c.ie_debito_credito,
              b.ie_tipo,
              coalesce(b.ie_compensacao,'N')
      from   ctb_grupo_conta c,
              conta_contabil  b,
              ctb_saldo       a
      where  substr(obter_se_conta_vigente2(b.cd_conta_contabil,
                                            b.dt_inicio_vigencia,
                                            b.dt_fim_vigencia,
                                            dt_referencia_w),
                    1,1) = 'S'
      and    a.cd_estabelecimento = coalesce(cd_estabelecimento_p,
                                        a.cd_estabelecimento)
      and    a.cd_conta_contabil = b.cd_conta_contabil
      and    b.cd_grupo = c.cd_grupo
      and    nr_nivel_conta_max_w < 20
      and    a.nr_nivel_conta = nr_nivel_conta_max_w
      and    (a.cd_classif_sup IS NOT NULL AND a.cd_classif_sup::text <> '')
      and    a.nr_seq_mes_ref = nr_seq_mes_ref_p
      group  by a.cd_estabelecimento,
                a.cd_classificacao,
                a.cd_classif_sup,
                c.ie_debito_credito,
                b.ie_tipo,
                coalesce(ie_compensacao,'N');


BEGIN

  delete from ctb_saldo
  where  nr_seq_mes_ref = nr_seq_mes_ref_p
  and    cd_estabelecimento = coalesce(cd_estabelecimento_p,cd_estabelecimento)
  and    cd_conta_contabil in (SELECT a.cd_conta_contabil from conta_contabil a where a.ie_tipo = 'T');

  select a.dt_referencia,
          a.cd_empresa
  into STRICT   dt_referencia_w,
          cd_empresa_w
  from   ctb_mes_ref a
  where  a.nr_sequencia = nr_seq_mes_ref_p;

  /*Select se tona mais performatico que o count*/


  select coalesce(max(1),0)
  into STRICT   qt_regra_classif_w

  where  exists (SELECT 1 from conta_contabil_classif);

  while nr_nivel_conta_max_w > 0 loop
      begin
          open C01;
          loop
              fetch C01
                  into cd_estabelecimento_w,
                        cd_classificacao_w,
                        cd_classif_titulo_w,
                        vl_debito_w,
                        vl_credito_w,
                        vl_movimento_w,
                        vl_saldo_w,
                        ie_debito_credito_w,
                        ie_tipo_w,
                        ie_compensacao_w;
              EXIT WHEN NOT FOUND; /* apply on C01 */
              begin

                  if (qt_regra_classif_w > 0) then
                      begin

                          select min(a.cd_conta_contabil)
                          into STRICT   cd_conta_contabil_titulo_w
                          from   conta_contabil         b,
                                  conta_contabil_classif a
                          where  a.cd_conta_contabil = b.cd_conta_contabil
                          and    b.cd_empresa = cd_empresa_w
                          and    a.cd_classificacao = cd_classif_titulo_w
                          and    a.dt_inicio_vigencia <= dt_referencia_w
                          and    coalesce(a.dt_fim_vigencia,dt_referencia_w) >= dt_referencia_w
                          and    substr(obter_se_conta_vigente2(a.cd_conta_contabil,
                                                                b.dt_inicio_vigencia,
                                                                b.dt_fim_vigencia,
                                                                dt_referencia_w),
                                        1,1) = 'S';

                      end;
                  end if;

                  if (coalesce(cd_conta_contabil_titulo_w,'X') = 'X') then
                      begin

                          select min(a.cd_conta_contabil)
                          into STRICT   cd_conta_contabil_titulo_w
                          from   conta_contabil a
                          where  cd_classificacao = cd_classif_titulo_w
                          and    a.cd_empresa = cd_empresa_w
                          and    substr(obter_se_conta_vigente2(a.cd_conta_contabil,
                                                                a.dt_inicio_vigencia,
                                                                a.dt_fim_vigencia,
                                                                dt_referencia_w),
                                        1,1) = 'S';

                      exception
                          when others then
                              ie_conta_titulo_vigente_w := 'N';
                      end;

                  end if;

                  if (ie_conta_titulo_vigente_w = 'N') then
                      begin
                          nr_nivel_conta_max_w := -1;
                      end;

                  elsif (coalesce(cd_conta_contabil_titulo_w,'X') = 'X') then
                      begin
                          nr_nivel_conta_max_w := -1;
                      end;
                  else
                      begin

                          if (ie_compensacao_w = 'S') and (nr_nivel_conta_max_w = 2) then
                              vl_debito_w    := 0;
                              vl_credito_w   := 0;
                              vl_movimento_w := 0;
                              vl_saldo_w     := 0;
                          end if;

                          select max(b.ie_debito_credito)
                          into STRICT   ie_debito_credito_titulo_w
                          from   ctb_grupo_conta b,
                                  conta_contabil  a
                          where  a.cd_conta_contabil = cd_conta_contabil_titulo_w
                          and    a.cd_grupo = b.cd_grupo;

                          if (ie_debito_credito_w <> ie_debito_credito_titulo_w) then
                              vl_saldo_w     := vl_saldo_w * -1;
                              vl_movimento_w := vl_movimento_w * -1;
                          end if;

                          cd_classif_titulo_w     := substr(ctb_obter_classif_conta(cd_conta_contabil_titulo_w,
                                                                                    cd_classif_titulo_w,
                                                                                    dt_referencia_w),
                                                            1,40);
                          cd_classif_sup_titulo_w := substr(ctb_obter_classif_conta_sup(cd_classif_titulo_w,
                                                                                        dt_referencia_w,
                                                                                        cd_empresa_w),
                                                            1,40);
                          nr_nivel_conta_w        := ctb_obter_nivel_classif_conta(cd_classif_titulo_w);

                          merge into ctb_saldo a
                          using(SELECT coalesce(max(1),0) qt_registro_saldo

                                  where  exists (select 1
                                          from   ctb_saldo a
                                          where  a.nr_seq_mes_ref = nr_seq_mes_ref_p
                                          and    a.cd_estabelecimento = cd_estabelecimento_w
                                          and    a.cd_conta_contabil = cd_conta_contabil_titulo_w
                                          and    a.cd_classificacao = cd_classif_titulo_w
                                          and    a.nr_nivel_conta = nr_nivel_conta_w)) b
                          on (b.qt_registro_saldo > 0)
                          when matched then
                              update
                              set    vl_debito        = vl_debito + vl_debito_w,
                                      vl_credito       = vl_credito + vl_credito_w,
                                      vl_movimento     = vl_movimento + vl_movimento_w,
                                      vl_saldo         = vl_saldo + vl_saldo_w,
                                      cd_classificacao = cd_classif_titulo_w,
                                      cd_classif_sup   = cd_classif_sup_titulo_w,
                                      nr_nivel_conta   = nr_nivel_conta_w
                              where  cd_estabelecimento = cd_estabelecimento_w
                              and    nr_seq_mes_ref = nr_seq_mes_ref_p
                              and    cd_conta_contabil = cd_conta_contabil_titulo_w
                          when not matched then
                              insert(nr_sequencia,
                                    nr_seq_mes_ref,
                                    dt_atualizacao,
                                    nm_usuario,
                                    cd_estabelecimento,
                                    cd_conta_contabil,
                                    vl_debito,
                                    vl_credito,
                                    vl_saldo,
                                    vl_movimento,
                                    cd_classificacao,
                                    cd_classif_sup,
                                    nr_nivel_conta,
                                    vl_encerramento)
                              values (nextval('ctb_saldo_seq'),
                                    nr_seq_mes_ref_p,
                                    clock_timestamp(),
                                    nm_usuario_p,
                                    cd_estabelecimento_w,
                                    cd_conta_contabil_titulo_w,
                                    vl_debito_w,
                                    vl_credito_w,
                                    vl_saldo_w,
                                    vl_movimento_w,
                                    cd_classif_titulo_w,
                                    cd_classif_sup_titulo_w,
                                    nr_nivel_conta_w,
                                    0);

                      end;
                  end if;

              end;
          end loop;
          close C01;
          commit;
          nr_nivel_conta_max_w := nr_nivel_conta_max_w - 1;
      end;
  end loop;

  commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_online_pck.ctb_acumular_saldo (nr_seq_mes_ref_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;
