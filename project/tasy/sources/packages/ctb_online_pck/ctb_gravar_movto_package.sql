-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


/*
- Grava ctb_movimento, ctb_movto_centro_custo e movimento_contabil_doc
  ctb_movimento_doc_p.nr_seq_movimento
  ctb_movimento_doc_p.nr_lote_contabil
  ctb_movimento_doc_p.cd_tipo_lote_contabil - Se nao informar nr_lote_contabil
  ctb_movimento_doc_p.cd_estabelecimento
  ctb_movimento_doc_p.dt_movimento
  ctb_movimento_doc_p.vl_movimento
  ctb_movimento_doc_p.cd_conta_debito
  ctb_movimento_doc_p.cd_conta_credito
  ctb_movimento_doc_p.cd_historico
  ctb_movimento_doc_p.nr_seq_agrupamento
  ctb_movimento_doc_p.ds_compl_historico
  ctb_movimento_doc_p.nr_documento
  ctb_movimento_doc_p.ie_origem_documento
  ctb_movimento_doc_p.nr_seq_movto_partida
  ctb_movimento_doc_p.ie_transitorio
  ctb_movimento_doc_p.cd_centro_custo
*/



CREATE OR REPLACE PROCEDURE ctb_online_pck.ctb_gravar_movto (ctb_movimento_doc_p INOUT ctb_online_pck.ctb_movimento_doc, nm_usuario_p text, ie_commit_p text default 'N', ie_consistir_p text default 'S', ie_atualizar_saldo_p text default 'S', nr_seq_proj_rec_p bigint default null) AS $body$
DECLARE


cd_classif_credito_w            conta_contabil.cd_classificacao%type;
cd_classif_debito_w             conta_contabil.cd_classificacao%type;
current_setting('ctb_online_pck.cd_conta_contabil_w')::ctb_regra_estab_dif.cd_conta_contabil%type             conta_contabil.cd_conta_contabil%type;
movimento_contabil_doc_w        movimento_contabil_doc%rowtype;
nr_agrup_sequencial_w           ctb_movimento.nr_agrup_sequencial%type;
nr_seq_mes_ref_w                ctb_mes_ref.nr_sequencia%type;
nr_seq_movimento_w              ctb_movimento.nr_sequencia%type;
nr_seq_centro_custo_w           ctb_movto_centro_custo.nr_sequencia%type;
vl_movimento_w                  ctb_movimento.vl_movimento%type;
dt_atualizacao_saldo_w          ctb_movimento.dt_atualizacao_saldo%type;
lock_handler_w                  varchar(128);


BEGIN
        begin
        lock_handler_w := ctb_online_pck.request_lock('ctb_online_pck.ctb_gravar_movto_lock');
        if (coalesce(ctb_movimento_doc_p.vl_movimento,0) <> 0) then
        -- SE NAO INFORMAR O NR_LOTE_CONTABIL RODA A FUNcAO PARA OBTE-LO

                if (coalesce(ctb_movimento_doc_p.nr_lote_contabil,0) = 0) then
                        ctb_movimento_doc_p.nr_lote_contabil := ctb_online_pck.get_lote_contabil(ctb_movimento_doc_p.cd_tipo_lote_contabil,
                                                                                ctb_movimento_doc_p.cd_estabelecimento,
                                                                                ctb_movimento_doc_p.dt_movimento,
                                                                                nm_usuario_p);
                end if;

                ctb_movimento_doc_p.dt_movimento := coalesce(ctb_movimento_doc_p.dt_movimento,trunc(clock_timestamp(),'dd'));

                /* Removido pois esta informacao sera gerada posteriormente na reatualizacao do saldo */


                -- nr_agrup_sequencial_w   := ctb_online_pck.get_agrup_sequencial(obter_empresa_estab(ctb_movimento_doc_p.cd_estabelecimento), ctb_movimento_doc_p.dt_movimento);


                /*Seleciona MES de Referencia com numero do Lote Contabil */


                select  b.nr_sequencia
                into STRICT    nr_seq_mes_ref_w
                from    lote_contabil a,
                        ctb_mes_ref   b
                where   a.nr_seq_mes_ref = b.nr_sequencia
                and     a.nr_lote_contabil = ctb_movimento_doc_p.nr_lote_contabil;

                /* Inverte conta debito e credito caso o valor do movimento seja negativo*/


                PERFORM set_config('ctb_online_pck.cd_conta_contabil_w', null, false);
                if (ctb_movimento_doc_p.vl_movimento < 0) then
                        PERFORM set_config('ctb_online_pck.cd_conta_contabil_w', ctb_movimento_doc_p.cd_conta_debito, false);
                        ctb_movimento_doc_p.cd_conta_debito  := ctb_movimento_doc_p.cd_conta_credito;
                        ctb_movimento_doc_p.cd_conta_credito := current_setting('ctb_online_pck.cd_conta_contabil_w')::ctb_regra_estab_dif.cd_conta_contabil%type;
                        ctb_movimento_doc_p.vl_movimento     := abs(ctb_movimento_doc_p.vl_movimento);
                end if;
                cd_classif_debito_w  := null;
                cd_classif_credito_w := null;
                /* CLASSIFICAcaO atraves da CD_CONTA_CONTABIL - DEBITO */


                if (ctb_movimento_doc_p.cd_conta_debito IS NOT NULL AND ctb_movimento_doc_p.cd_conta_debito::text <> '') then
                        cd_classif_debito_w := ctb_obter_classif_conta(ctb_movimento_doc_p.cd_conta_debito,null,ctb_movimento_doc_p.dt_movimento);
                end if;
                if (ctb_movimento_doc_p.cd_conta_credito IS NOT NULL AND ctb_movimento_doc_p.cd_conta_credito::text <> '') then
                        cd_classif_credito_w := ctb_obter_classif_conta(ctb_movimento_doc_p.cd_conta_credito,null,ctb_movimento_doc_p.dt_movimento);
                end if;

                /* Realiza INSERcaO ou ATUALIZA registro se existir */



                select  max(c.nr_sequencia),
                        max(c.dt_atualizacao_saldo)
                into STRICT    nr_seq_movimento_w,
                        dt_atualizacao_saldo_w
                from    ctb_movimento c
                where   trunc(c.dt_movimento, 'dd') = trunc(ctb_movimento_doc_p.dt_movimento, 'dd')
                and     c.nr_lote_contabil = ctb_movimento_doc_p.nr_lote_contabil
                and     coalesce(c.cd_estabelecimento,0) = ctb_movimento_doc_p.cd_estabelecimento
                and     coalesce(c.cd_historico,0) = coalesce(ctb_movimento_doc_p.cd_historico,0)
                and     coalesce(c.nr_seq_agrupamento,0) = coalesce(ctb_movimento_doc_p.nr_seq_agrupamento,0)
                and     coalesce(c.ds_compl_historico,'X') = coalesce(ctb_movimento_doc_p.ds_compl_historico,'X')
                and     coalesce(c.cd_conta_debito,'X') = coalesce(ctb_movimento_doc_p.cd_conta_debito,'X')
                and     coalesce(c.cd_conta_credito,'X') = coalesce(ctb_movimento_doc_p.cd_conta_credito,'X');

                if (coalesce(nr_seq_movimento_w,0) <> 0) then
                        begin
                                if (dt_atualizacao_saldo_w IS NOT NULL AND dt_atualizacao_saldo_w::text <> '') then
                                        CALL ctb_online_pck.ctb_desatualizar_saldo_movto(nr_seq_movimento_w, 'S', nm_usuario_p, 'N');
                                end if;

                                update  ctb_movimento
                                set     vl_movimento   = vl_movimento + ctb_movimento_doc_p.vl_movimento,
                                        dt_atualizacao = clock_timestamp(),
                                        nm_usuario     = nm_usuario_p
                                where   nr_sequencia = nr_seq_movimento_w;
                        end;
                else
                        /* Seleciona PROXIMO numero de sequencia do MOVIMENTO */


                        if (coalesce(ctb_movimento_doc_p.nr_sequencia,0) <> 0) then
                            nr_seq_movimento_w := ctb_movimento_doc_p.nr_sequencia;
                        else
                            select nextval('ctb_movimento_seq') into STRICT nr_seq_movimento_w;
                            ctb_movimento_doc_p.nr_sequencia := nr_seq_movimento_w;
                        end if;

                insert into ctb_movimento(nr_sequencia, --1
                        nr_lote_contabil, --2
                        nr_seq_mes_ref, --3
                        dt_movimento, --4
                        vl_movimento, --5
                        dt_atualizacao, --6
                        nm_usuario, --7
                        cd_historico, --8
                        cd_conta_debito, --9
                        cd_conta_credito, --10
                        ds_compl_historico, --11
                        nr_seq_agrupamento, --12
                        ie_revisado, --13
                        cd_estabelecimento, --14
                        dt_atualizacao_nrec, --15
                        nm_usuario_nrec, --16
                        cd_classif_debito, --17
                        cd_classif_credito, --18
                        dt_revisao, --19
                        nm_usuario_revisao, --20
                        nr_agrup_sequencial, --21
                        nr_documento, --22
                        ie_origem_documento, --23
                        nr_seq_movto_partida, --24
                        ie_status_concil, --25
                        ie_status_origem, --26
                        ie_transitorio, --27,
                        nr_seq_classif_movto, --28
                        ie_intercompany, --29
                        cd_estab_intercompany, --30
                        nr_seq_regra_lanc, --31
                        nr_seq_proj_rec --32
                        )
                values (nr_seq_movimento_w, --1
                        ctb_movimento_doc_p.nr_lote_contabil, --2
                        nr_seq_mes_ref_w, --3
                        ctb_movimento_doc_p.dt_movimento, --4
                        abs(ctb_movimento_doc_p.vl_movimento), --5
                        clock_timestamp(), --6
                        nm_usuario_p, --7
                        ctb_movimento_doc_p.cd_historico, --8
                        ctb_movimento_doc_p.cd_conta_debito, --9
                        ctb_movimento_doc_p.cd_conta_credito, --10
                        ctb_movimento_doc_p.ds_compl_historico, --11
                        ctb_movimento_doc_p.nr_seq_agrupamento, --12
                        'N', --13
                        ctb_movimento_doc_p.cd_estabelecimento, --14
                        clock_timestamp(), --15
                        nm_usuario_p, --16
                        cd_classif_debito_w, --17
                        cd_classif_credito_w, --18
                        clock_timestamp(), --19
                        nm_usuario_p, --20
                        nr_agrup_sequencial_w, --21
                        ctb_movimento_doc_p.nr_documento, --22
                        ctb_movimento_doc_p.ie_origem_documento, --23
                        ctb_movimento_doc_p.nr_seq_movto_partida, --24
                        'NC', --25
                        'SO', --26
                        ctb_movimento_doc_p.ie_transitorio, --27
                        ctb_movimento_doc_p.nr_seq_classif_movto, --28
                        ctb_movimento_doc_p.ie_intercompany, --29
                        ctb_movimento_doc_p.cd_estab_intercompany, -- 30
                        ctb_movimento_doc_p.nr_seq_regra_lanc, --31
                        nr_seq_proj_rec_p
                        );
                end if;

                /* INSERE CENTRO DE CUSTO se tiver */


                if (coalesce(ctb_movimento_doc_p.cd_centro_custo,0) <> 0) then

                        begin
                              select nr_sequencia
                              into STRICT   nr_seq_centro_custo_w
                              from   ctb_movto_centro_custo
                              where  nr_seq_movimento = nr_seq_movimento_w
                              and    cd_centro_custo = ctb_movimento_doc_p.cd_centro_custo;
                        exception
                        when others then
                                nr_seq_centro_custo_w := 0;
                        end;

                        if (nr_seq_centro_custo_w != 0) then

                                update  ctb_movto_centro_custo
                                set     vl_movimento   = vl_movimento + ctb_movimento_doc_p.vl_movimento,
                                        dt_atualizacao = clock_timestamp(),
                                        nm_usuario     = nm_usuario_p
                                where  nr_sequencia = nr_seq_centro_custo_w;

                        else
                                begin
                                        insert into ctb_movto_centro_custo(nr_sequencia,
                                                nr_seq_movimento,
                                                cd_centro_custo,
                                                dt_atualizacao,
                                                nm_usuario,
                                                vl_movimento,
                                                pr_rateio)
                                        values (nextval('ctb_movto_centro_custo_seq'),
                                                nr_seq_movimento_w,
                                                ctb_movimento_doc_p.cd_centro_custo,
                                                clock_timestamp(),
                                                nm_usuario_p,
                                                abs(ctb_movimento_doc_p.vl_movimento),
                                                0);
                                end;
                        end if;
                        CALL ctb_atualizar_rateio_movto(nr_seq_movimento_w,nm_usuario_p);
                end if;

                /* Realiza a validacao no movimento */


                if (ie_consistir_p = 'S') then
                        CALL ctb_online_pck.validar_movimento(nr_seq_movimento_w,nm_usuario_p);
                end if;

                /* Atualiza SALDO Movimento */


                if (ie_atualizar_saldo_p = 'S') then
                        CALL ctb_online_pck.ctb_atualizar_saldo_movto(nr_seq_movimento_w,'S',nm_usuario_p,'N');
                end if;

                if (coalesce(ctb_movimento_doc_p.nr_seq_info,0) != 0 and
                        coalesce(ctb_movimento_doc_p.nm_tabela,'X') != 'X' and
                        coalesce(ctb_movimento_doc_p.nm_atributo,'X') != 'X' and
                        coalesce(ctb_movimento_doc_p.vl_movimento,0) != 0) then

                        movimento_contabil_doc_w.nr_seq_ctb_movto     := nr_seq_movimento_w;
                        movimento_contabil_doc_w.nr_seq_ctb_documento := ctb_movimento_doc_p.nr_seq_ctb_documento;
                        movimento_contabil_doc_w.nr_documento         := ctb_movimento_doc_p.nr_seq_tab_orig;
                        movimento_contabil_doc_w.nr_seq_doc_compl     := ctb_movimento_doc_p.nr_seq_doc_compl;
                        movimento_contabil_doc_w.nr_doc_analitico     := ctb_movimento_doc_p.nr_doc_analitico;
                        movimento_contabil_doc_w.nr_lote_contabil     := ctb_movimento_doc_p.nr_lote_contabil;
                        movimento_contabil_doc_w.nr_seq_info          := ctb_movimento_doc_p.nr_seq_info;
                        movimento_contabil_doc_w.vl_movimento         := ctb_movimento_doc_p.vl_movimento;
                        movimento_contabil_doc_w.nm_tabela            := ctb_movimento_doc_p.nm_tabela;
                        movimento_contabil_doc_w.nm_atributo          := ctb_movimento_doc_p.nm_atributo;
                        movimento_contabil_doc_w.cd_historico         := ctb_movimento_doc_p.cd_historico;
                        movimento_contabil_doc_w.ds_compl_historico   := ctb_movimento_doc_p.ds_compl_historico;
                        movimento_contabil_doc_w.dt_movimento         := ctb_movimento_doc_p.dt_movimento;
                        movimento_contabil_doc_w.nr_seq_regra_tf      := ctb_movimento_doc_p.nr_seq_regra_tf;
                        movimento_contabil_doc_w.cd_cnpj              := ctb_movimento_doc_p.cd_cnpj;
                        movimento_contabil_doc_w.cd_pessoa_fisica     := ctb_movimento_doc_p.cd_pessoa_fisica;
                        movimento_contabil_doc_w.nr_seq_trans_fin     := ctb_movimento_doc_p.nr_seq_trans_fin;
                        movimento_contabil_doc_w.cd_centro_custo      := ctb_movimento_doc_p.cd_centro_custo;
                        movimento_contabil_doc_w.cd_sequencia_parametro     := ctb_movimento_doc_p.cd_sequencia_parametro;

                        if (coalesce(ctb_movimento_doc_p.cd_conta_debito,'X') <> 'X') then
                                movimento_contabil_doc_w.cd_conta_contabil := ctb_movimento_doc_p.cd_conta_debito;
                                movimento_contabil_doc_w.ie_debito_credito := 'D';
                        else
                                movimento_contabil_doc_w.cd_conta_contabil := ctb_movimento_doc_p.cd_conta_credito;
                                movimento_contabil_doc_w.ie_debito_credito := 'C';
                        end if;

                        CALL ctb_online_pck.gravar_movto_contab_doc(movimento_contabil_doc_w,nm_usuario_p);
                end if;

                /* Trata Parametro IE_COMMIT */


                if (coalesce(ie_commit_p,'N') = 'S') then
                        commit;
                end if;
        end if;
        CALL ctb_online_pck.release_lock(lock_handler_w);
        exception
        when others then
                CALL ctb_online_pck.release_lock(lock_handler_w);
                raise;
        end;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_online_pck.ctb_gravar_movto (ctb_movimento_doc_p INOUT ctb_online_pck.ctb_movimento_doc, nm_usuario_p text, ie_commit_p text default 'N', ie_consistir_p text default 'S', ie_atualizar_saldo_p text default 'S', nr_seq_proj_rec_p bigint default null) FROM PUBLIC;
