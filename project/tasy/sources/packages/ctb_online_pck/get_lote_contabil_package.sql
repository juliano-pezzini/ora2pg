-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION ctb_online_pck.get_lote_contabil ( cd_tipo_lote_contabil_p lote_contabil.cd_tipo_lote_contabil%type, cd_estabelecimento_p lote_contabil.cd_estabelecimento%type, dt_referencia_p lote_contabil.dt_referencia%type, nm_usuario_p lote_contabil.nm_usuario%type, cd_convenio_p convenio.cd_convenio%type default null, ie_tipo_convenio_p convenio.ie_tipo_convenio%type default null, nr_grupo_contab_nf_p operacao_nota.nr_seq_grupo_contab%type default null) RETURNS bigint AS $body$
DECLARE


nr_lote_contabil_w      lote_contabil.nr_lote_contabil%type;
cd_empresa_w            empresa.cd_empresa%type;
nr_contador_w           smallint := 0;
lock_handle_w           varchar(128);
ie_grupo_contab_nota_w  lote_contabil_parametro.ds_valor_parametro%type;


BEGIN
    begin
        lock_handle_w := ctb_online_pck.request_lock('ctb_online_pck.get_lote_contal_lock'); -- cria lock para evitar a criacao de lotes ao mesmo tempo pela contabilidade online
        cd_empresa_w := obter_empresa_estab(cd_estabelecimento_p);

        begin
        select count(1)
        into STRICT   nr_contador_w
        from   ctb_mes_ref
        where  cd_empresa = cd_empresa_w
        and    dt_referencia = PKG_DATE_UTILS.START_OF(dt_referencia_p,'MONTH')
        and    (dt_fechamento IS NOT NULL AND dt_fechamento::text <> '');

        exception
        when others then
                nr_contador_w := 0;
        end;

        if (nr_contador_w <> 0) then
                CALL ctb_online_pck.release_lock(lock_handle_w);
                CALL wheb_mensagem_pck.exibir_mensagem_abort(207399);
        end if;

        begin
            if (cd_tipo_lote_contabil_p = 6) then
                -- LOTE RECEITA

                select  coalesce(max(a.nr_lote_contabil),0)
                into STRICT    nr_lote_contabil_w
                from    lote_contabil a,
                        ctb_mes_ref   b
                where   a.nr_seq_mes_ref = b.nr_sequencia
                and     a.cd_tipo_lote_contabil = cd_tipo_lote_contabil_p
                and     a.cd_estabelecimento = cd_estabelecimento_p
                and     b.cd_empresa = cd_empresa_w
                and     dt_referencia_p between a.dt_inicio_ref and a.dt_fim_ref
                and     trunc(a.dt_referencia,'mm') = trunc(dt_referencia_p,'mm')
                and     a.nr_lote_contabil in (
                                        SELECT  p1.nr_lote_contabil
                                        from    lote_contabil_parametro p1,
                                                lote_contabil_parametro p2
                                        where   p1.cd_tipo_lote_contabil = 6
                                        and     p1.nr_lote_contabil = p2.nr_lote_contabil
                                        and     p1.cd_tipo_lote_contabil = p2.cd_tipo_lote_contabil
                                        and     p1.nr_seq_parametro = 3
                                        and     coalesce(p1.vl_parametro,coalesce(cd_convenio_p,0)) = coalesce(cd_convenio_p,0)
                                        and     p2.nr_seq_parametro = 5
                                        and     coalesce(p2.vl_parametro,coalesce(ie_tipo_convenio_p,0)) = coalesce(ie_tipo_convenio_p,0));

            elsif (cd_tipo_lote_contabil_p in (2, 51)) then
                begin
                select  nr_seq_grupo_contab
                into STRICT    ie_grupo_contab_nota_w
                from (
                    SELECT  coalesce(to_char(a.nr_seq_grupo_contab),'A') nr_seq_grupo_contab
                    from    ctb_regra_geracao_lote a
                    where   a.cd_tipo_lote_contabil = cd_tipo_lote_contabil_p
                    and     a.cd_empresa = cd_empresa_w
                    and     coalesce(cd_estab_exclusivo,cd_estabelecimento_p) = cd_estabelecimento_p
                    and     coalesce(a.nr_seq_grupo_contab,coalesce(nr_grupo_contab_nf_p,0)) = coalesce(nr_grupo_contab_nf_p,0)
                    order by 1 desc
                ) alias8 LIMIT 1;
                exception
                    when no_data_found then
                        ie_grupo_contab_nota_w := null;
                    when others then
                        ie_grupo_contab_nota_w := null;
                end;

                select  coalesce(max(a.nr_lote_contabil),0)
                into STRICT    nr_lote_contabil_w
                from    lote_contabil a,
                        ctb_mes_ref   b
                where   a.nr_seq_mes_ref = b.nr_sequencia
                and     a.cd_estabelecimento = cd_estabelecimento_p
                and     b.cd_empresa = cd_empresa_w
                and     dt_referencia_p between a.dt_inicio_ref and a.dt_fim_ref
                and     trunc(a.dt_referencia,'mm') = trunc(dt_referencia_p,'mm')
                and     exists (
                        SELECT  p.nr_lote_contabil
                        from    lote_contabil_parametro p
                        where   cd_tipo_lote_contabil = cd_tipo_lote_contabil_p
                        and     p.ds_valor_parametro = ie_grupo_contab_nota_w
                        and     p.nr_lote_contabil = a.nr_lote_contabil
                        and     p.nr_seq_parametro = 5);
            else
                select  coalesce(max(a.nr_lote_contabil),0)
                into STRICT    nr_lote_contabil_w
                from    lote_contabil a,
                        ctb_mes_ref   b
                where   a.nr_seq_mes_ref = b.nr_sequencia
                and     a.cd_tipo_lote_contabil = cd_tipo_lote_contabil_p
                and     a.cd_estabelecimento = cd_estabelecimento_p
                and     b.cd_empresa = cd_empresa_w
                and     dt_referencia_p between a.dt_inicio_ref and a.dt_fim_ref
                and     trunc(a.dt_referencia,'mm') = trunc(dt_referencia_p,'mm');
            end if;

        exception
            when others then
                nr_lote_contabil_w := 0;
        end;

        if (coalesce(nr_lote_contabil_w,0) = 0) then
            nr_lote_contabil_w := ctb_online_pck.criar_lote_contabil(
                cd_tipo_lote_contabil_p, cd_estabelecimento_p, dt_referencia_p, nm_usuario_p, nr_lote_contabil_w, cd_convenio_p, ie_tipo_convenio_p, nr_grupo_contab_nf_p);
        end if;
        CALL ctb_online_pck.release_lock(lock_handle_w);
        return nr_lote_contabil_w;
    exception
    when others then
            CALL ctb_online_pck.release_lock(lock_handle_w); -- remove o lock criado no inicio da rotina
            raise;
    end;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION ctb_online_pck.get_lote_contabil ( cd_tipo_lote_contabil_p lote_contabil.cd_tipo_lote_contabil%type, cd_estabelecimento_p lote_contabil.cd_estabelecimento%type, dt_referencia_p lote_contabil.dt_referencia%type, nm_usuario_p lote_contabil.nm_usuario%type, cd_convenio_p convenio.cd_convenio%type default null, ie_tipo_convenio_p convenio.ie_tipo_convenio%type default null, nr_grupo_contab_nf_p operacao_nota.nr_seq_grupo_contab%type default null) FROM PUBLIC;
