-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


/*
ctb_movimento_p.nr_sequencia
ctb_movimento_p.cd_conta_credito
ctb_movimento_p.cd_conta_debito
ctb_movimento_p.vl_movimento
ctb_movimento_p.nr_seq_mutacao_pl
ctb_movimento_p.nr_lote_contabil
ctb_movimento_p.nr_agrup_sequencial
ctb_movimento_p.dt_movimento
ctb_movimento_p.cd_historico
ctb_movimento_p.cd_estabelecimento
ctb_movimento_p.ie_revisado
*/



CREATE OR REPLACE PROCEDURE ctb_online_pck.validar_ctb_movto (ctb_movimento_p INOUT ctb_movimento, nm_usuario_p text) AS $body$
DECLARE


  ie_centro_custo_inativo_w    varchar(1);
  ie_movto_valor_zerado_w      varchar(1);
  ie_movto_valor_negativo_w    varchar(1);
  ie_movto_centro_estab_w      varchar(1);
  ie_consistir_data_movto_w    varchar(1);
  ie_consiste_movto_pendente_w varchar(1);
  ie_encerramento_w            varchar(1);
  qt_tipo_lote_pl_w            bigint;
  qt_mov_lote_pl_w             bigint;
  current_setting('ctb_online_pck.cd_tipo_lote_contabil_w')::ctb_regra_estab_dif.cd_tipo_lote_contabil%type      tipo_lote_contabil.cd_tipo_lote_contabil%type;
  ie_consiste_revisao_w        tipo_lote_contabil.ie_consiste_revisao%type;
  cd_estabelecimento_w         ctb_movimento.cd_estabelecimento%type;
  ds_consistencia_w            ctb_movimento.ds_consistencia%type;
  dt_referencia_w              ctb_mes_ref.dt_referencia%type;
  cd_empresa_w                 ctb_mes_ref.cd_empresa%type;

  x RECORD;

BEGIN

  select  count(cd_tipo_lote_contabil)
  into STRICT    qt_tipo_lote_pl_w
  from    tipo_lote_contabil
  where   cd_tipo_lote_contabil = 54;

  /* Dados do lote contabil*/


  select coalesce(b.ie_encerramento,'N'),
          b.cd_estabelecimento,
          coalesce(a.ie_consiste_revisao,'S'),
          a.cd_tipo_lote_contabil
  into STRICT   ie_encerramento_w,
          cd_estabelecimento_w,
          ie_consiste_revisao_w,
          current_setting('ctb_online_pck.cd_tipo_lote_contabil_w')::ctb_regra_estab_dif.cd_tipo_lote_contabil%type
  from   tipo_lote_contabil a,
          lote_contabil b,
          ctb_movimento c
  where  c.nr_lote_contabil = b.nr_lote_contabil
  and    b.cd_tipo_lote_contabil = a.cd_tipo_lote_contabil
  and    c.nr_sequencia = ctb_movimento_p.nr_sequencia;

  select b.cd_empresa,
          b.dt_referencia
  into STRICT   cd_empresa_w,
          dt_referencia_w
  from   ctb_mes_ref   b,
          ctb_movimento a
  where  a.nr_sequencia = ctb_movimento_p.nr_sequencia
  and    a.nr_seq_mes_ref = b.nr_sequencia;

  /* Parametro de consistencia*/


  ie_centro_custo_inativo_w    := coalesce(obter_valor_param_usuario(923,43,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),'S');
  ie_movto_valor_zerado_w      := coalesce(obter_valor_param_usuario(923,49,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),'S');
  ie_movto_valor_negativo_w    := coalesce(obter_valor_param_usuario(923,51,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),'N');
  ie_movto_centro_estab_w      := coalesce(obter_valor_param_usuario(923,68,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),'S');
  ie_consistir_data_movto_w    := coalesce(obter_valor_param_usuario(923,70,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),'N');
  ie_consiste_movto_pendente_w := coalesce(obter_valor_param_usuario(923,84,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),'N');

  ctb_movimento_p.ds_consistencia := null;

  ---------------------------------------------------------------------------

  -- Falta informar a conta credito ou debito do movimento

  if (coalesce(ctb_movimento_p.cd_conta_credito,'0') = '0') and (coalesce(ctb_movimento_p.cd_conta_debito,'0') = '0') then
      ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(225337),1,255); --VERIFICAR
  end if;
  ---------------------------------------------------------------------------

  -- Movimento contabil com valor zerado

  if (ie_movto_valor_zerado_w = 'S' and ctb_movimento_p.vl_movimento = 0) then
      ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(280943),1,255);
      ctb_movimento_p.ie_validacao    := '1';
  end if;
  ---------------------------------------------------------------------------

  if (ie_movto_valor_negativo_w = 'S') then
      -- Movimento contabil com valor negativo

      if (ctb_movimento_p.vl_movimento < 0) then
          ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(280944),1,255);
          ctb_movimento_p.ie_validacao    := '2';
      end if;
      ---------------------------------------------------------------------------

      -- Movimento contabil com valor negativo (centros de custo)

      begin
          for x in (SELECT 1 qt_registro

                    where  exists (select 1
                            from   ctb_movto_centro_custo b
                            where  b.nr_seq_movimento = ctb_movimento_p.nr_sequencia
                            and    b.vl_movimento < 0)) loop
              if (x.qt_registro = 1) then
                  ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(280944),1,255);
                  ctb_movimento_p.ie_validacao    := '2';
              end if;
          end loop;
      end;
  end if;
  ---------------------------------------------------------------------------

  if (qt_tipo_lote_pl_w > 0) and (dt_referencia_w >= to_date('01/12/2015','dd/mm/yyyy')) then
      begin
          -- Informe o campo Mutacao PL pois a conta e de Patrimonio Liquido

          if (coalesce(ctb_movimento_p.nr_seq_mutacao_pl::text, '') = '') then
              begin
                  for x in (SELECT 1 qt_registro

                            where  exists (select 1
                                    from   conta_contabil b
                                    where  ctb_movimento_p.cd_conta_debito = b.cd_conta_contabil
                                    and    b.ie_natureza_sped = '03'
                                    
union all

                                    SELECT 1
                                    from   conta_contabil b
                                    where  ctb_movimento_p.cd_conta_credito = b.cd_conta_contabil
                                    and    b.ie_natureza_sped = '03')) loop
                      if (x.qt_registro = 1) then
                          ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(404925),1,255);
                          ctb_movimento_p.ie_validacao    := '24';
                      end if;
                  end loop;
              end;
          end if;
          ---------------------------------------------------------------------------

          -- Deve existir pelo menos um movimento contabil em uma conta de Patrimonio Liquido neste lote

          if (current_setting('ctb_online_pck.cd_tipo_lote_contabil_w')::ctb_regra_estab_dif.cd_tipo_lote_contabil%type = 54) then
              select count(nr_sequencia)
              into STRICT   qt_mov_lote_pl_w
              from   ctb_movimento a
              where  a.nr_lote_contabil = ctb_movimento_p.nr_lote_contabil
              and    exists (SELECT 1
                      from   conta_contabil b
                      where  a.cd_conta_debito = b.cd_conta_contabil
                      and    b.ie_natureza_sped = '03'

union all

                      SELECT 1
                      from   conta_contabil b
                      where  a.cd_conta_credito = b.cd_conta_contabil
                      and    b.ie_natureza_sped = '03');

              if (qt_mov_lote_pl_w = 0) then
                  begin
                      ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(378102),1,255);
                      ctb_movimento_p.ie_validacao    := '23';
                  end;
              end if;
          end if;
      end;
  end if;
  ---------------------------------------------------------------------------

  -- Lancamento sem a apropriacao por centro de resultado. Esta conta contabil exige informacao do centro de custo.

  if (ie_encerramento_w = 'N') then
      begin
          for x in (SELECT 1 qt_registro

                    where  not exists (select 1 from ctb_movto_centro_custo b where ctb_movimento_p.nr_sequencia = b.nr_seq_movimento)
                    and    exists (select 1
                            from   conta_contabil b
                            where  ctb_movimento_p.cd_conta_debito = b.cd_conta_contabil
                            and    b.ie_centro_custo = 'S'
                            
union all

                            SELECT 1
                            from   conta_contabil b
                            where  ctb_movimento_p.cd_conta_credito = b.cd_conta_contabil
                            and    b.ie_centro_custo = 'S')) loop
              if (x.qt_registro = 1) then
                  ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(280945),1,255);
                  ctb_movimento_p.ie_validacao    := '3';
              end if;
          end loop;
      end;
  end if;
  -----------------------------------------------------------------------------

  -- Lancamento com a apropriacao indevida por centro de resultado. Esta conta contabil nao requer informacao do centro de custo.

  begin
      for x in (SELECT 1 qt_registro

                where  exists (select 1 from ctb_movto_centro_custo b where ctb_movimento_p.nr_sequencia = b.nr_seq_movimento)
                and    not exists (select 1
                        from   conta_contabil b
                        where  ctb_movimento_p.cd_conta_debito = b.cd_conta_contabil
                        and    b.ie_centro_custo in ('S','O')
                        
union all

                        SELECT 1
                        from   conta_contabil b
                        where  ctb_movimento_p.cd_conta_credito = b.cd_conta_contabil
                        and    b.ie_centro_custo in ('S','O'))) loop
          if (x.qt_registro = 1) then
              ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(280946),1,255);
              ctb_movimento_p.ie_validacao    := '4';
          end if;
      end loop;
  end;
  -----------------------------------------------------------------------------

  -- Lancamento com valor diferente da somatoria dos centros de custo.

  begin
      for x in (SELECT *
                from (select sum(b.vl_movimento) vl
                        from   ctb_movimento          a,
                                ctb_movto_centro_custo b
                        where  a.nr_sequencia = ctb_movimento_p.nr_sequencia
                        and    a.nr_sequencia = b.nr_seq_movimento
                        group  by a.nr_sequencia
                        having 1 > 0) alias1) loop
          if (x.vl <> ctb_movimento_p.vl_movimento) then
              ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(280947),1,255);
              ctb_movimento_p.ie_validacao    := '5';
          end if;
      end loop;
  end;
  -----------------------------------------------------------------------------

  if (trunc(dt_referencia_w,'mm') >= to_date('01/04/2015','dd/mm/yyyy')) then
      -----------------------------------------------------------------------------

      -- Existem lancamentos com diferenca de debito e credito. Informacao obrigatoria para ECD (SPED Contabil)

      /*begin
          for x in ( select 1 qt_registro
                      from dual
                      where exists (
                          select 1
                          from    (
                              select      sum(x.vl_mov_deb) vl_mov_deb,
                                      sum(x.vl_mov_cred) vl_mov_cred,
                                      x.nr_agrup_sequencial
                              from (
                                  select   sum(a.vl_movimento) vl_mov_deb,
                                            0 vl_mov_cred,
                                            a.nr_agrup_sequencial
                                  from     ctb_movimento a
                                  where    a.nr_lote_contabil = ctb_movimento_p.nr_lote_contabil
                                  and          a.cd_conta_debito is not null
                                  group by a.nr_agrup_sequencial
                              union all
                                  select   0 vl_mov_deb,
                                            sum(a.vl_movimento) vl_mov_cred,
                                            a.nr_agrup_sequencial
                                  from     ctb_movimento a
                                  where    a.nr_lote_contabil = ctb_movimento_p.nr_lote_contabil
                                  and          a.cd_conta_credito is not null
                                  group by a.nr_agrup_sequencial
                                  ) x
                              group by x.nr_agrup_sequencial
                              ) w
                              where w.nr_agrup_sequencial = ctb_movimento_p.nr_agrup_sequencial
                              and w.vl_mov_deb <> w.vl_mov_cred))
          loop
              if(x.qt_registro = 1) then
                      ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(317540), 1, 255);
                      ctb_movimento_p.ie_validacao    := '21';
                  end if;
          end loop;
      end;*/

      -----------------------------------------------------------------------------

      -- Lancamentos sem fato contabil. Informacao obrigatoria para ECD (SPED Contabil).

      if (coalesce(ctb_movimento_p.nr_seq_agrupamento,0) = 0) then
          ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(317536),1,255);
          ctb_movimento_p.ie_validacao    := '20';
      end if;
  end if;
  -----------------------------------------------------------------------------

  -- Existe diferenca de debito e credito no dia deste movimento.

  --        begin

  --            for x in ( select 1 qt_registro

  --                from dual

  --                where exists (

  --                        select  1

  --                        from    ctb_movimento a

  --                        where   a.nr_sequencia = ctb_movimento_p.nr_sequencia

  --                        and     exists (

  --                                select      1

  --                                from        ctb_movimento b

  --                                where   b.nr_lote_contabil = ctb_movimento_p.nr_lote_contabil

  --                                and     b.dt_movimento = ctb_movimento_p.dt_movimento

  --                                group by trunc(b.dt_movimento)

  --                                having      (sum(decode(b.cd_conta_debito,null,0, b.vl_movimento)) <> sum(decode(b.cd_conta_credito,null,0,b.vl_movimento))))))

  --            loop

  --            if(x.qt_registro = 1) then

  --                ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(280970), 1, 255);

  --                ctb_movimento_p.ie_validacao    := '6';

  --            end if;

  --            end loop;

  --        end;

  -----------------------------------------------------------------------------

  -- O mes do movimento e diferente da data de referencia

  begin
      for x in (SELECT 1 qt_registro

                where  exists (select 1
                        from   ctb_mes_ref b
                        where  ctb_movimento_p.nr_seq_mes_ref = b.nr_sequencia
                        and    trunc(ctb_movimento_p.dt_movimento,'month') <> trunc(b.dt_referencia,'month'))) loop
          if (x.qt_registro = 1) then
              ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(280972),1,255);
              ctb_movimento_p.ie_validacao    := '7';
          end if;
      end loop;
  end;
  -----------------------------------------------------------------------------

  -- Dia do movimento e maior que o dia do lote

  if (ie_consistir_data_movto_w = 'S') then
      begin
          for x in (SELECT 1 qt_registro

                    where  exists (select 1
                            from   lote_contabil x
                            where  x.nr_lote_contabil = ctb_movimento_p.nr_lote_contabil
                            and    x.dt_referencia < ctb_movimento_p.dt_movimento)) loop
              if (x.qt_registro = 1) then
                  ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(280973),1,255);
                  ctb_movimento_p.ie_validacao    := '8';
              end if;
          end loop;
      end;
  end if;
  -----------------------------------------------------------------------------

  -- A conta contabil e do tipo totalizadora

  begin
      for x in (SELECT 1 qt_registro

                where  exists (select 1
                        from   conta_contabil b
                        where  ctb_movimento_p.cd_conta_debito = b.cd_conta_contabil
                        and    b.ie_tipo = 'T'
                        
union

                        SELECT 1
                        from   conta_contabil b
                        where  ctb_movimento_p.cd_conta_credito = b.cd_conta_contabil
                        and    b.ie_tipo = 'T')) loop
          if (x.qt_registro = 1) then
              ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(280983),1,255);
              ctb_movimento_p.ie_validacao    := '9';
          end if;
      end loop;
  end;
  -----------------------------------------------------------------------------

  -- A conta contabil e de outro estabelecimento

  begin
      for x in (SELECT 1 qt_registro

                where  exists (select 1
                        from   conta_contabil_estab b
                        where  b.cd_conta_contabil = ctb_movimento_p.cd_conta_debito
                        
union all

                        SELECT 1 from conta_contabil_estab b where b.cd_conta_contabil = ctb_movimento_p.cd_conta_credito)
                and    not exists (select 1
                        from   conta_contabil_estab c
                        where  c.cd_conta_contabil = ctb_movimento_p.cd_conta_debito
                        and    c.cd_estabelecimento = ctb_movimento_p.cd_estabelecimento
                        
union all

                        select 1
                        from   conta_contabil_estab c
                        where  c.cd_conta_contabil = ctb_movimento_p.cd_conta_credito
                        and    c.cd_estabelecimento = ctb_movimento_p.cd_estabelecimento)) loop
          if (x.qt_registro = 1) then
              ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(280984),1,255);
              ctb_movimento_p.ie_validacao    := '10';
          end if;
      end loop;
  end;
  -----------------------------------------------------------------------------

  -- A conta contabil esta inativa.

  begin
      for x in (SELECT 1 qt_registro

                where  exists (select 1
                        from   conta_contabil b
                        where  ctb_movimento_p.cd_conta_debito = b.cd_conta_contabil
                        and    b.ie_situacao <> 'A'
                        
union

                        SELECT 1
                        from   conta_contabil b
                        where  ctb_movimento_p.cd_conta_credito = b.cd_conta_contabil
                        and    b.ie_situacao <> 'A')) loop
          if (x.qt_registro = 1) then
              ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(280985),1,255);
              ctb_movimento_p.ie_validacao    := '11';
          end if;
      end loop;
  end;
  -----------------------------------------------------------------------------

  -- Falta informar o grupo no cadastro da conta.

  begin
      for x in (SELECT 1 qt_registro

                where  exists (select 1
                        from   conta_contabil b
                        where  ctb_movimento_p.cd_conta_debito = b.cd_conta_contabil
                        and    coalesce(b.cd_grupo::text, '') = ''
                        
union

                        SELECT 1
                        from   conta_contabil b
                        where  ctb_movimento_p.cd_conta_credito = b.cd_conta_contabil
                        and    coalesce(b.cd_grupo::text, '') = '')) loop
          if (x.qt_registro = 1) then
              ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(280986),1,255);
              ctb_movimento_p.ie_validacao    := '12';
          end if;
      end loop;
  end;
  -----------------------------------------------------------------------------

  -- A conta contabil e de outra empresa.

  begin
      for x in (SELECT 1 qt_registro

                where  exists (select 1
                        from   conta_contabil b
                        where  ctb_movimento_p.cd_conta_debito = b.cd_conta_contabil
                        and    b.cd_empresa <> cd_empresa_w
                        
union

                        SELECT 1
                        from   conta_contabil b
                        where  ctb_movimento_p.cd_conta_credito = b.cd_conta_contabil
                        and    b.cd_empresa <> cd_empresa_w)) loop
          if (x.qt_registro = 1) then
              ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(280987),1,255);
              ctb_movimento_p.ie_validacao    := '13';
          end if;
      end loop;
  end;
  -----------------------------------------------------------------------------

  -- Este historico e de outra empresa

  begin
      for x in (SELECT 1 qt_registro

                where  exists (select 1
                        from   historico_padrao b
                        where  ctb_movimento_p.cd_historico = b.cd_historico
                        and    b.cd_empresa <> cd_empresa_w)) loop
          if (x.qt_registro = 1) then
              ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(280988),1,255);
              ctb_movimento_p.ie_validacao    := '14';
          end if;
      end loop;
  end;
  -----------------------------------------------------------------------------

  -- Este historico esta inativo.

  begin
      for x in (SELECT 1 qt_registro

                where  exists (select 1
                        from   historico_padrao b
                        where  ctb_movimento_p.cd_historico = b.cd_historico
                        and    coalesce(b.ie_situacao,'I') <> 'A')) loop
          if (x.qt_registro = 1) then
              ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(280989),1,255);
              ctb_movimento_p.ie_validacao    := '15';
          end if;
      end loop;
  end;
  -----------------------------------------------------------------------------

  -- Movimento com centro de resultado totalizador.

  begin
      for x in (SELECT 1 qt_registro

                where  exists (select 1
                        from   centro_custo           c,
                                ctb_movto_centro_custo b
                        where  b.nr_seq_movimento = ctb_movimento_p.nr_sequencia
                        and    b.cd_centro_custo = c.cd_centro_custo
                        and    c.ie_tipo = 'T')) loop
          if (x.qt_registro = 1) then
              ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(280991), 1, 255);
              ctb_movimento_p.ie_validacao    := '16';
          end if;
      end loop;
  end;
  -----------------------------------------------------------------------------

  -- Movimento com centro de resultado inativo.

  begin
      for x in (SELECT 1 qt_registro

                where  exists (select 1
                        from   centro_custo c,
                                ctb_movto_centro_custo b
                        where  b.nr_seq_movimento = ctb_movimento_p.nr_sequencia
                        and    b.cd_centro_custo = c.cd_centro_custo
                        and    c.ie_situacao <> 'A'
                        and    ie_centro_custo_inativo_w = 'S'
                        and    coalesce(c.dt_fim_contabil,
                                    ctb_movimento_p.dt_movimento) <= ctb_movimento_p.dt_movimento)) loop
          if (x.qt_registro = 1) then
              ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(280992),1,255);
              ctb_movimento_p.ie_validacao    := '17';
          end if;
      end loop;
  end;
  -----------------------------------------------------------------------------

  -- Movimento com centro de resultado de estabelecimento diferente

  if (ie_movto_centro_estab_w = 'S') then
      begin
          for x in (SELECT 1 qt_registro

                    where  exists (select 1
                            from   centro_custo           c,
                                    ctb_movto_centro_custo b
                            where  b.nr_seq_movimento = ctb_movimento_p.nr_sequencia
                            and    b.cd_centro_custo = c.cd_centro_custo
                            and    c.cd_estabelecimento <> ctb_movimento_p.cd_estabelecimento)) loop
              if (x.qt_registro = 1) then
                  ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(280993),1,255);
                  ctb_movimento_p.ie_validacao    := '18';
              end if;
          end loop;
      end;
  end if;
  -----------------------------------------------------------------------------

  -- Centro de custo nao permitido, pertence a outra empresa

  begin
      for x in (SELECT 1 qt_registro

                where  exists (select 1
                        from   estabelecimento b,
                                centro_custo c,
                                ctb_movto_centro_custo d,
                                empresa e
                        where  d.nr_seq_movimento = ctb_movimento_p.nr_sequencia
                        and    c.cd_estabelecimento = b.cd_estabelecimento
                        and    b.cd_empresa = e.cd_empresa
                        and    d.cd_centro_custo = c.cd_centro_custo
                        and    e.cd_empresa <> cd_empresa_w)) loop
          if (x.qt_registro = 1) then
              ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(351249),1,255);
              ctb_movimento_p.ie_validacao    := '22';
          end if;
      end loop;
  end;
  -----------------------------------------------------------------------------

  -- Movimento pendente para revisao

  if (ie_consiste_movto_pendente_w = 'S' and ie_consiste_revisao_w = 'S' and ctb_movimento_p.ie_revisado <> 'S') then
      ctb_movimento_p.ds_consistencia := substr(wheb_mensagem_pck.get_texto(280994),1,255);
      ctb_movimento_p.ie_validacao    := '19';
  end if;

  -----------------------------------------------------------------------------

  -- Persiste a atualizacao do campo ds_consistencia

  update  ctb_movimento
  set     ds_consistencia = ctb_movimento_p.ds_consistencia,
          ie_validacao    = ctb_movimento_p.ie_validacao
  where   nr_sequencia = ctb_movimento_p.nr_sequencia;

  commit;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_online_pck.validar_ctb_movto (ctb_movimento_p INOUT ctb_movimento, nm_usuario_p text) FROM PUBLIC;
