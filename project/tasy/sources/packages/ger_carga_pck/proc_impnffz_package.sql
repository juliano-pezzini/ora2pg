-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ger_carga_pck.proc_impnffz ( nr_seq_carga_p ger_carga_inicial.nr_sequencia%type, nr_seq_carga_arq_p ger_carga_arq.nr_sequencia%type, nr_sequencia_p bigint, ie_tipo_proc_p text) AS $body$
DECLARE


_ora2pg_r RECORD;
reg_proc_w			r_reg_proc;
qt_registro_w			bigint;
nr_seq_episodio_princ_w		episodio_paciente.nr_sequencia%type;
nr_seq_episodio_sec_w		episodio_paciente.nr_sequencia%type;
cd_pessoa_acompanhante_w	episodio_paciente.cd_pessoa_fisica%type;
current_setting('ger_carga_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%TYPE		atendimento_paciente.nr_atendimento%type;
nr_case_princ_w			varchar(10);
nr_case_sec_w			varchar(10);
atendimento_acompanhante_w	atendimento_acompanhante%rowtype;
nr_seq_interno_w		atend_paciente_unidade.nr_seq_interno%type;

ds_erro_w			varchar(2000);

current_setting('ger_carga_pck.c01')::CURSOR CURSOR FOR
SELECT	*
from	impnffz
where	nr_seq_carga 	= nr_seq_carga_p
and	((ie_status 	= 'V') or (ie_status 	in ('L','E') and ie_tipo_proc_p = 'VAL'));

impnffz_w	current_setting('ger_carga_pck.c01')::CURSOR%rowtype;


BEGIN

reg_proc_w.ie_tipo_proc	:= ie_tipo_proc_p;

open current_setting('ger_carga_pck.c01')::CURSOR;
loop
fetch current_setting('ger_carga_pck.c01')::into CURSOR
	impnffz_w;
EXIT WHEN NOT FOUND; /* apply on current_setting('ger_carga_pck.c01')::CURSOR */
	begin

	reg_proc_w := ger_carga_pck.set_carga_arq(reg_proc_w, impnffz_w.nr_seq_carga_arq, impnffz_w.nr_linha, impnffz_w.nr_sequencia, 'S');
	CALL ger_carga_pck.atualizar_processamento('IMPNFFZ', impnffz_w.nr_sequencia);
	PERFORM set_config('ger_carga_pck.ie_update_w', null, false);
	atendimento_acompanhante_w	:= null;

	/*Identifica qual e o case principal e o secundario, para fazer a relacao entre eles.
	B= Escort / company
	M= Mother
	N= New-Born
	P= is escorted / will be accompanied */
	if (impnffz_w.refa1 in ('P','N')) then
		nr_case_princ_w	:= impnffz_w.faln1;
		nr_case_sec_w	:= lpad(impnffz_w.faln2,10,'0');
	else
		nr_case_princ_w	:= impnffz_w.faln2;
		nr_case_sec_w	:= lpad(impnffz_w.faln1,10,'0');
	end if;

	select	max(nr_sequencia)
	into STRICT	nr_seq_episodio_princ_w
	from	episodio_paciente
	where	nr_episodio = nr_case_princ_w;

	begin
	select	a.cd_pessoa_fisica
	into STRICT	cd_pessoa_acompanhante_w
	from	pf_codigo_externo a,
		hcm_fall b
	where	a.cd_pessoa_fisica_externo = b.casepatno
	and	a.ie_tipo_codigo_externo = 'ISH'
	and coalesce(a.cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento
	and	ltrim(b.caseno,'0') = ltrim(nr_case_sec_w,'0')  LIMIT 1;
	exception
	when others then
		begin
		select	a.cd_pessoa_fisica
		into STRICT	cd_pessoa_acompanhante_w
		from	pf_codigo_externo a,
			impnfal b
		where	ltrim(a.cd_pessoa_fisica_externo,'0') = ltrim(b.patnr,'0')
		and	a.ie_tipo_codigo_externo 	= 'ISH'
		and coalesce(a.cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento
		and	b.ie_status			= 'I'
		and	ltrim(b.falnr,'0') 		= ltrim(nr_case_sec_w,'0')  LIMIT 1;
		exception
		when others then
			cd_pessoa_acompanhante_w := null;
		end;
	end;

	if (nr_seq_episodio_princ_w IS NOT NULL AND nr_seq_episodio_princ_w::text <> '') and (cd_pessoa_acompanhante_w IS NOT NULL AND cd_pessoa_acompanhante_w::text <> '') then

		if (cd_pessoa_acompanhante_w IS NOT NULL AND cd_pessoa_acompanhante_w::text <> '') then
			--Busca o atendimento atual do case principal
			PERFORM set_config('ger_carga_pck.nr_atendimento_w', ish_get_encounter_case( coalesce(nr_case_princ_w, nr_seq_episodio_princ_w), 'INPAT'), false);

			if (current_setting('ger_carga_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%(TYPE IS NOT NULL AND TYPE::text <> '')) then

				nr_seq_interno_w	:= Obter_Atepacu_paciente(current_setting('ger_carga_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%TYPE,'A');

				reg_proc_w.nm_tabela 	:= 'ATENDIMENTO_ACOMPANHANTE';
				SELECT * FROM ger_carga_pck.proc_val(reg_proc_w, 'REFA2', 'NR_SEQ_TIPO', impnffz_w.refa2, atendimento_acompanhante_w.nr_seq_tipo) INTO STRICT _ora2pg_r;
 reg_proc_w := _ora2pg_r.reg_proc_p; atendimento_acompanhante_w.nr_seq_tipo := _ora2pg_r.ds_valor_retorno_p;

				atendimento_acompanhante_w.nr_atendimento	:= current_setting('ger_carga_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%TYPE;
				atendimento_acompanhante_w.dt_acompanhante	:= coalesce(to_date(impnffz_w.begdt,current_setting('ger_carga_pck.ds_mascara_date_w')::ger_carga_arq.ds_mascara_date%type),clock_timestamp());
				atendimento_acompanhante_w.nr_acompanhante	:= 1;
				atendimento_acompanhante_w.dt_atualizacao	:= clock_timestamp();
				atendimento_acompanhante_w.nm_usuario		:= reg_proc_w.usernametasy;
				atendimento_acompanhante_w.nm_acompanhante	:= substr(obter_nome_pf(cd_pessoa_acompanhante_w),1,40);
				atendimento_acompanhante_w.cd_pessoa_fisica	:= cd_pessoa_acompanhante_w;
				atendimento_acompanhante_w.ie_alojamento	:= 'S';
				atendimento_acompanhante_w.nr_seq_interno	:= nr_seq_interno_w;

				if (reg_proc_w.qt_reg_log = 0) and (ie_tipo_proc_p = 'IMP') then
					update	atendimento_acompanhante
					set	row = atendimento_acompanhante_w
					where	nr_atendimento = atendimento_acompanhante_w.nr_atendimento
					and	dt_acompanhante = atendimento_acompanhante_w.dt_acompanhante;

					if (NOT FOUND) then
						insert into atendimento_acompanhante values (atendimento_acompanhante_w.*);
					end if;

					update	atendimento_paciente
					set	cd_pessoa_responsavel	= cd_pessoa_acompanhante_w
					where	nr_atendimento		= current_setting('ger_carga_pck.nr_atendimento_w')::atendimento_paciente.nr_atendimento%TYPE;
				end if;
			end if;
		end if;

	elsif ( coalesce(nr_seq_episodio_princ_w::text, '') = '') then

		--Nao foi localizado case no Tasy para o valor recebido.
		--Valor externo: #@DS_VALOR#@
		 reg_proc_w := ger_carga_pck.incluir_ger_carga_log_import( reg_proc_w, '11', substr(	wheb_mensagem_pck.get_texto(1040672,'DS_VALOR=' || nr_case_princ_w ),1,4000));

	elsif ( coalesce(cd_pessoa_acompanhante_w::text, '') = '') then
		--Nao foi localizado case no Tasy para o valor recebido.
		--Valor externo: #@DS_VALOR#@
		 reg_proc_w := ger_carga_pck.incluir_ger_carga_log_import( reg_proc_w, '11', substr(	wheb_mensagem_pck.get_texto(1040672,'DS_VALOR=' || ' patno:' || cd_pessoa_acompanhante_w ),1,4000));

	end if;

	if (reg_proc_w.qt_reg_log > 0) then
		begin
		/*'Em caso de qualquer consistencia o sistema efetua rollback, atualiza o status para Erro e registra todos os logs de consistencia'*/

		rollback;
		update	impnffz
		set	ie_status 	= 'E',
			dt_fim_proc	= clock_timestamp()
		where	nr_sequencia 	= impnffz_w.nr_sequencia;
		end;
	elsif (ie_tipo_proc_p = 'IMP') then
		update	impnffz
		set	ie_status 	= 'I',
			ds_chave_tasy	= atendimento_acompanhante_w.nr_atendimento,
			dt_fim_proc	= clock_timestamp()
		where	nr_sequencia 	= impnffz_w.nr_sequencia;
	else
		update	impnffz
		set	ie_status 	= 'V',
			dt_fim_proc	= clock_timestamp()
		where	nr_sequencia 	= impnffz_w.nr_sequencia;
	end if;

	exception
	when others then
		begin
		ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);

		rollback;

		 reg_proc_w := ger_carga_pck.incluir_ger_carga_log_import( reg_proc_w, '4', ds_erro_w);

		update	impnffz
		set	ie_status 	= 'E',
			dt_fim_proc	= clock_timestamp()
		where	nr_sequencia 	= impnffz_w.nr_sequencia;

		end;
	end;

	commit;

end loop;
close current_setting('ger_carga_pck.c01')::CURSOR;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ger_carga_pck.proc_impnffz ( nr_seq_carga_p ger_carga_inicial.nr_sequencia%type, nr_seq_carga_arq_p ger_carga_arq.nr_sequencia%type, nr_sequencia_p bigint, ie_tipo_proc_p text) FROM PUBLIC;
