-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


/*procedure DUPLICAR_NGPA_CLINICAS
		(nr_seq_carga_p	in 	number) is

names_1_w		dbms_sql.varchar2_table;
names_2_w		dbms_sql.varchar2_table;
impngpa_w		impngpa%rowtype;
nr_sequencia_w		number(10);
x			integer	:=	0;

cursor c01 is
select	*
from	impngpa a
where	a.pers 		= 'X'
and	a.nr_seq_carga 	= nr_seq_carga_p
and	(select	(x.qt_separador_1 + x.qt_separador_2 + x.qt_separador_3) + 1
	from	(select	NVL( LENGTH( a.name1 ), 0 ) - NVL( LENGTH( REPLACE( a.name1, '/', NULL ) ), 0 ) qt_separador_1,
			NVL( LENGTH( a.name1 ), 0 ) - NVL( LENGTH( REPLACE( a.name1, ',', NULL ) ), 0 ) qt_separador_2,
			NVL( LENGTH( a.name1 ), 0 ) - NVL( LENGTH( REPLACE( a.name1, ';', NULL ) ), 0 ) qt_separador_3
		from	dual) x) > 1;

c01_w	c01%rowtype;

begin

open C01;
loop
fetch C01 into
	c01_w;
exit when C01%notfound;

	nr_sequencia_w	:= c01_w.nr_sequencia;

	select	*
	into	impngpa_w
	from	impngpa
	where	nr_sequencia	= nr_sequencia_w;

	if	(instr(c01_w.name1,'/') > 0) then
		names_1_w := obter_lista_string(c01_w.name1,'/');
		names_2_w := obter_lista_string(c01_w.name2,'/');
	elsif	(instr(c01_w.name1,',') > 0) then
		names_1_w := obter_lista_string(c01_w.name1,',');
		names_2_w := obter_lista_string(c01_w.name2,',');
	elsif	(instr(c01_w.name1,';') > 0) then
		names_1_w := obter_lista_string(c01_w.name1,';');
		names_2_w := obter_lista_string(c01_w.name2,';');
	end if;

	if	(names_1_w.count > 0) then

		for x in names_1_w.first..names_1_w.last loop

			if	(trim(names_1_w(x)) is not null) then

				select	impngpa_seq.nextval
				into	impngpa_w.nr_sequencia
				from	dual;

				impngpa_w.name1	:= trim(names_1_w(x));
				begin
					if	(names_2_w.count > 0) then
						if	(names_2_w(x) is not null) then
							impngpa_w.name2	:= trim(names_2_w(x));
						end if;
					end if;
				exception
				when others then
					null;
				end;

				impngpa_w.ds_chave_tasy	:= 'P;'||x;

				insert into impngpa values impngpa_w;
			end if;
		end loop;

		delete	from impngpa
		where	nr_sequencia	= nr_sequencia_w;

	end if;

end loop;
close C01;

commit;

end DUPLICAR_NGPA_CLINICAS;*/
CREATE OR REPLACE PROCEDURE ger_carga_pck.duplicar_cadastro_medico (pessoa_fisica_p pessoa_fisica, person_name_p person_name, pf_codigo_externo_p pf_codigo_externo, medico_p medico, medico_vinculo_p medico_vinculo, pessoa_fisica_idioma_p pessoa_fisica_idioma, cd_pessoa_nova_p INOUT text) AS $body$
DECLARE


cd_pessoa_nova_w	pessoa_fisica.cd_pessoa_fisica%type;
pessoa_fisica_w		pessoa_fisica%rowtype;
person_name_w		person_name%rowtype;
pf_codigo_externo_w	pf_codigo_externo%rowtype;
medico_w		medico%rowtype;
medico_vinculo_w	medico_vinculo%rowtype;
pessoa_fisica_idioma_w	pessoa_fisica_idioma%rowtype;
compl_pessoa_fisica_w	compl_pessoa_fisica%rowtype;

current_setting('ger_carga_pck.c01')::CURSOR CURSOR FOR
SELECT	*
from	compl_pessoa_fisica
where	cd_pessoa_fisica	= pessoa_fisica_p.cd_pessoa_fisica;

c01_w	current_setting('ger_carga_pck.c01')::CURSOR%rowtype;


BEGIN

person_name_w	:= person_name_p;

select	nextval('person_name_seq')
into STRICT	person_name_w.nr_sequencia
;

insert into person_name values (person_name_w.*);

pessoa_fisica_w		:= pessoa_fisica_p;

select	nextval('pessoa_fisica_seq')
into STRICT	cd_pessoa_nova_w
;

pessoa_fisica_w.nr_seq_person_name	:= person_name_w.nr_sequencia;
pessoa_fisica_w.cd_pessoa_fisica	:= cd_pessoa_nova_w;
pessoa_fisica_w.nr_prontuario		:= null;

insert into pessoa_fisica values (pessoa_fisica_w.*);

compl_pessoa_fisica_w := null;
open current_setting('ger_carga_pck.c01')::CURSOR;
loop
fetch current_setting('ger_carga_pck.c01')::into CURSOR
	c01_w;
EXIT WHEN NOT FOUND; /* apply on current_setting('ger_carga_pck.c01')::CURSOR */

	compl_pessoa_fisica_w := c01_w;

	compl_pessoa_fisica_w.cd_pessoa_fisica	:= cd_pessoa_nova_w;
	insert into compl_pessoa_fisica values (compl_pessoa_fisica_w.*);

end loop;
close current_setting('ger_carga_pck.c01')::CURSOR;

pf_codigo_externo_w			:= pf_codigo_externo_p;
pf_codigo_externo_w.cd_pessoa_fisica	:= cd_pessoa_nova_w;

if ( coalesce(pf_codigo_externo_w.cd_estabelecimento::text, '') = '' ) then
	pf_codigo_externo_w.cd_estabelecimento	:=	wheb_usuario_pck.get_cd_estabelecimento;
end if;

select	nextval('pf_codigo_externo_seq')
into STRICT	pf_codigo_externo_w.nr_sequencia
;

insert into pf_codigo_externo values (pf_codigo_externo_w.*);

medico_w				:= medico_p;
medico_w.cd_pessoa_fisica		:= cd_pessoa_nova_w;

insert into medico values (medico_w.*);

if (medico_vinculo_p.nr_sequencia IS NOT NULL AND medico_vinculo_p.nr_sequencia::text <> '') then
	medico_vinculo_w			:= medico_vinculo_p;
	medico_vinculo_w.cd_medico		:= cd_pessoa_nova_w;
	select	nextval('medico_vinculo_seq')
	into STRICT	medico_vinculo_w.nr_sequencia
	;

	insert into medico_vinculo values (medico_vinculo_w.*);
end if;

if (pessoa_fisica_idioma_p.cd_pessoa_fisica IS NOT NULL AND pessoa_fisica_idioma_p.cd_pessoa_fisica::text <> '') then

	pessoa_fisica_idioma_w			:= pessoa_fisica_idioma_p;
	pessoa_fisica_idioma_w.cd_pessoa_fisica	:= cd_pessoa_nova_w;
	select	nextval('pessoa_fisica_idioma_seq')
	into STRICT	pessoa_fisica_idioma_w.nr_sequencia
	;

	insert into pessoa_fisica_idioma values (pessoa_fisica_idioma_w.*);
end if;

cd_pessoa_nova_p	:= cd_pessoa_nova_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ger_carga_pck.duplicar_cadastro_medico (pessoa_fisica_p pessoa_fisica, person_name_p person_name, pf_codigo_externo_p pf_codigo_externo, medico_p medico, medico_vinculo_p medico_vinculo, pessoa_fisica_idioma_p pessoa_fisica_idioma, cd_pessoa_nova_p INOUT text) FROM PUBLIC;
