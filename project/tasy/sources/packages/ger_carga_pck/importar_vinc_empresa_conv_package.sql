-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ger_carga_pck.importar_vinc_empresa_conv ( nr_seq_carga_p ger_carga_inicial.nr_sequencia%type, nr_seq_carga_arq_p ger_carga_arq.nr_sequencia%type, nr_sequencia_p bigint, ie_tipo_proc_p text) AS $body$
DECLARE


reg_proc_w			r_reg_proc;
qt_registro_w			bigint;
ds_erro_w			varchar(4000);
tipo_pessoa_juridica_w		tipo_pessoa_juridica%rowtype;
convenio_empresa_w		convenio_empresa%rowtype;

current_setting('ger_carga_pck.c01')::CURSOR CURSOR FOR
SELECT	*
from	imp_empresa_conv
where	nr_seq_carga 	= nr_seq_carga_p
and	((ie_status 	= 'V') or (ie_status 	in ('L','E') and ie_tipo_proc_p = 'VAL'));

imp_empresa_conv_w	current_setting('ger_carga_pck.c01')::CURSOR%rowtype;

c02 CURSOR FOR
SELECT	*
from	imp_tipo_visita_bg
where	nr_seq_carga 	= nr_seq_carga_p;

imp_tipo_visita_bg_w	c02%rowtype;



BEGIN

reg_proc_w.ie_tipo_proc	:= ie_tipo_proc_p;

open current_setting('ger_carga_pck.c01')::CURSOR;
loop
fetch current_setting('ger_carga_pck.c01')::into CURSOR
	imp_empresa_conv_w;
EXIT WHEN NOT FOUND; /* apply on current_setting('ger_carga_pck.c01')::CURSOR */
	begin

	reg_proc_w := ger_carga_pck.set_carga_arq(reg_proc_w, imp_empresa_conv_w.nr_seq_carga_arq, imp_empresa_conv_w.nr_linha, imp_empresa_conv_w.nr_sequencia, 'S');
	CALL ger_carga_pck.atualizar_processamento('IMP_EMPRESA_CONV', imp_empresa_conv_w.nr_sequencia);
	PERFORM set_config('ger_carga_pck.ie_update_w', null, false);
	tipo_pessoa_juridica_w	:= null;
	convenio_empresa_w	:= null;

	if (ie_tipo_proc_p = 'IMP') then


		begin
		select	*
		into STRICT	tipo_pessoa_juridica_w
		from	tipo_pessoa_juridica
		where	cd_tipo_pessoa	= imp_empresa_conv_w.cd_type_legal_entity
		and (coalesce(imp_empresa_conv_w.ds_type_legal_entity::text, '') = '' or
			 lower(imp_empresa_conv_w.ds_type_legal_entity) = lower(ds_tipo_pessoa))  LIMIT 1;
		exception
		when others then
			tipo_pessoa_juridica_w := null;
		end;

		if (coalesce(tipo_pessoa_juridica_w.cd_tipo_pessoa::text, '') = '') then

			select	coalesce(max(cd_tipo_pessoa),0) + 1
			into STRICT	tipo_pessoa_juridica_w.cd_tipo_pessoa
			from	tipo_pessoa_juridica;

			tipo_pessoa_juridica_w.ds_tipo_pessoa	:= substr(imp_empresa_conv_w.ds_type_legal_entity,1,40);
			tipo_pessoa_juridica_w.dt_atualizacao	:= clock_timestamp();
			tipo_pessoa_juridica_w.nm_usuario    	:= reg_proc_w.usernametasy;
			tipo_pessoa_juridica_w.ie_situacao   	:= 'A';
			tipo_pessoa_juridica_w.ie_atualiza_pj	:= 'S';

			insert into tipo_pessoa_juridica values (tipo_pessoa_juridica_w.*);
		end if;

		update	pessoa_juridica
		set	cd_tipo_pessoa		= tipo_pessoa_juridica_w.cd_tipo_pessoa
		where	ltrim(cd_cgc,'0') 	= ltrim(imp_empresa_conv_w.cd_company,'0');

		open C02;
		loop
		fetch C02 into
			imp_tipo_visita_bg_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */

			convenio_empresa_w := null;

			begin
			select	*
			into STRICT	convenio_empresa_w
			from	convenio_empresa
			where	cd_tipo_pessoa			= tipo_pessoa_juridica_w.cd_tipo_pessoa
			and	nr_seq_tipo_admissao_fat	= imp_tipo_visita_bg_w.cd_type_visit
			and	cd_convenio			= ltrim(imp_empresa_conv_w.cd_insurance,'0')  LIMIT 1;
			exception
			when others then
				convenio_empresa_w := null;
			end;

			if (coalesce(convenio_empresa_w.nr_sequencia::text, '') = '') then

				select	nextval('convenio_empresa_seq')
				into STRICT	convenio_empresa_w.nr_sequencia
				;

				convenio_empresa_w.dt_atualizacao		:= clock_timestamp();
				convenio_empresa_w.nm_usuario			:= reg_proc_w.usernametasy;
				convenio_empresa_w.dt_atualizacao_nrec		:= clock_timestamp();
				convenio_empresa_w.nm_usuario_nrec		:= reg_proc_w.usernametasy;
				convenio_empresa_w.cd_tipo_pessoa		:= tipo_pessoa_juridica_w.cd_tipo_pessoa;
				convenio_empresa_w.nr_seq_tipo_admissao_fat	:= imp_tipo_visita_bg_w.cd_type_visit;
				convenio_empresa_w.cd_convenio			:= ltrim(imp_empresa_conv_w.cd_insurance,'0');

				insert into convenio_empresa values (convenio_empresa_w.*);

			end if;

		end loop;
		close C02;

	elsif (ie_tipo_proc_p = 'VAL') then

		begin
		select	1
		into STRICT	qt_registro_w
		from	pessoa_juridica
		where	ltrim(cd_cgc,'0') = ltrim(imp_empresa_conv_w.CD_COMPANY,'0')  LIMIT 1;
		exception
		when others then
			qt_registro_w := 0;
		end;

		if (qt_registro_w = 0) then
			
				reg_proc_w := ger_carga_pck.incluir_ger_carga_log_import(
				reg_proc_w, '11', substr(wheb_mensagem_pck.get_texto(736989,
					'DS_ELEMENTO=IMP_EMPRESA_CONV' ||
					';DS_ATRIBUTO=CD_COMPANY' ||
					';NM_TABELA_REFERENCIA=PESSOA_JURIDICA' ||
					';DS_VALOR='|| imp_empresa_conv_w.cd_company ),1,4000));
		end if;

		begin
		select	1
		into STRICT	qt_registro_w
		from	convenio
		where	ltrim(cd_convenio,'0') = ltrim(imp_empresa_conv_w.cd_insurance,'0')  LIMIT 1;
		exception
		when others then
			qt_registro_w := 0;
		end;

		if (qt_registro_w = 0) then
			
				reg_proc_w := ger_carga_pck.incluir_ger_carga_log_import(
				reg_proc_w, '11', substr(wheb_mensagem_pck.get_texto(736989,
					'DS_ELEMENTO=IMP_EMPRESA_CONV' ||
					';DS_ATRIBUTO=CD_INSURANCE' ||
					';NM_TABELA_REFERENCIA=CONVENIO' ||
					';DS_VALOR='|| imp_empresa_conv_w.cd_insurance ),1,4000));
		end if;

	end if;

	if (reg_proc_w.qt_reg_log > 0) then
		begin
		/*'Em caso de qualquer consistencia o sistema efetua rollback, atualiza o status para Erro e registra todos os logs de consistencia'*/

		rollback;
		update	imp_empresa_conv
		set	ie_status 	= 'E',
			dt_fim_proc	= clock_timestamp()
		where	nr_sequencia 	= imp_empresa_conv_w.nr_sequencia;
		end;
	elsif (ie_tipo_proc_p = 'IMP') then
		update	imp_empresa_conv
		set	ie_status 	= 'I',
			ds_chave_tasy	= ltrim(imp_empresa_conv_w.CD_COMPANY,'0'),
			dt_fim_proc	= clock_timestamp()
		where	nr_sequencia 	= imp_empresa_conv_w.nr_sequencia;
	else
		update	imp_empresa_conv
		set	ie_status 	= 'V',
			dt_fim_proc	= clock_timestamp()
		where	nr_sequencia 	= imp_empresa_conv_w.nr_sequencia;
	end if;

	exception
	when others then
		begin
		ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);

		rollback;

		 reg_proc_w := ger_carga_pck.incluir_ger_carga_log_import( reg_proc_w, '4', ds_erro_w);

		update	imp_empresa_conv
		set	ie_status 	= 'E',
			dt_fim_proc	= clock_timestamp()
		where	nr_sequencia 	= imp_empresa_conv_w.nr_sequencia;

		end;
	end;

	commit;

end loop;
close current_setting('ger_carga_pck.c01')::CURSOR;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ger_carga_pck.importar_vinc_empresa_conv ( nr_seq_carga_p ger_carga_inicial.nr_sequencia%type, nr_seq_carga_arq_p ger_carga_arq.nr_sequencia%type, nr_sequencia_p bigint, ie_tipo_proc_p text) FROM PUBLIC;
