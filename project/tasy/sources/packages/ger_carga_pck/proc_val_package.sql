-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ger_carga_pck.proc_val ( reg_proc_p INOUT r_reg_proc, nm_coluna_p text, nm_atributo_p text, ds_valor_entrada_p text, ds_valor_retorno_p INOUT text, ie_conversao_p text default 'N') AS $body$
DECLARE


ger_tipo_carga_campo_w	ger_tipo_carga_campo%rowtype;


nr_seq_tipo_arq_w		ger_carga_arq.nr_seq_tipo_arq%type;
nm_tabela_w		tabela_sistema.nm_tabela%type;

nm_tabela_ref_w		integridade_referencial.nm_tabela_referencia%type;
nm_atrib_ref_w		indice_atributo.nm_atributo%type;
ie_consistir_fk_w		varchar(1)	:=	'N';
ds_valor_w		varchar(4000);
ds_valor_retorno_w		varchar(4000);
ds_sql_w			varchar(4000);
ds_mascara_w		varchar(50);
ds_arquivo_w		ger_tipo_carga_arq.ds_arquivo%type;
ie_sequencia_criacao_w	integridade_atributo.ie_sequencia_criacao%type;
ie_tipo_atributo_w		tabela_atributo.ie_tipo_atributo%type;
cd_dominio_w		tabela_atributo.cd_dominio%type;
qt_tamanho_w		tabela_atributo.qt_tamanho%type;
qt_registros_w		bigint;
ie_conversao_w		varchar(1);


BEGIN

nr_seq_tipo_arq_w	:=	reg_proc_p.nr_seq_tipo_arq;
nm_tabela_w		:=	reg_proc_p.nm_tabela;
ds_valor_w		:=	ds_valor_entrada_p;

begin
select	*
into STRICT	ger_tipo_carga_campo_w
from	ger_tipo_carga_campo b
where	b.nr_seq_arquivo = reg_proc_p.nr_seq_tipo_arq
and	b.nm_campo = nm_coluna_p  LIMIT 1;


select	ds_arquivo
into STRICT	ds_arquivo_w
from	ger_tipo_carga_arq
where	nr_sequencia = reg_proc_p.nr_seq_tipo_arq;
exception
when others then
	ger_tipo_carga_campo_w	:=	null;
end;

begin
select	ie_tipo_atributo,
	cd_dominio,
	qt_tamanho
into STRICT	ie_tipo_atributo_w,
	cd_dominio_w,
	qt_tamanho_w
from	tabela_atributo
where	nm_tabela = nm_tabela_w
and	nm_atributo = nm_atributo_p;
exception
when others then
	ie_tipo_atributo_w	:=	null;
end;

if (ger_tipo_carga_campo_w.ie_conversao = 'S') or (ie_conversao_p = 'S') then
	ie_conversao_w	:= 'S';
end if;

/*'Busca definicao da constraint para validar o valor da FK'*/

if (ie_conversao_w = 'S') then
	begin
	ie_consistir_fk_w	:=	'N';
	nm_tabela_ref_w		:=	nm_tabela_w;
	nm_atrib_ref_w		:=	nm_atributo_p;

	loop
		begin
		begin
		/*'Busca o nome da tabela_referencia'*/

		select	a.nm_tabela_referencia,
			b.ie_sequencia_criacao
		into STRICT	nm_tabela_ref_w,
			ie_sequencia_criacao_w
		from	integridade_referencial a,
			integridade_atributo b
		where	a.nm_tabela = b.nm_tabela
		and	a.nm_integridade_referencial = b.nm_integridade_referencial
		and	a.nm_tabela = nm_tabela_ref_w
		and	b.nm_atributo = nm_atrib_ref_w  LIMIT 1;
		exception
		when others then
			exit;
		end;

		/*'Busca o nome do atributo que e PK da tabela referencia'*/

		select	b.nm_atributo
		into STRICT	nm_atrib_ref_w
		from	indice a,
			indice_atributo b
		where	a.nm_tabela = b.nm_tabela
		and	a.nm_indice = b.nm_indice
		and	a.nm_tabela = nm_tabela_ref_w
		and	b.nr_sequencia = ie_sequencia_criacao_w
		and	a.ie_tipo = 'PK';

		ie_consistir_fk_w		:=	'S';
		end;
	end loop;

	if (ie_consistir_fk_w = 'N') then
		begin
		nm_tabela_ref_w		:=	nm_tabela_w;
		nm_atrib_ref_w		:=	nm_atributo_p;
		end;
	end if;
	end;
end if;

if (nm_atributo_p like 'DT%') and (coalesce(reg_proc_p.ds_mascara_data,'X') <> 'X') then
	begin
	ds_mascara_w	:=	upper(reg_proc_p.ds_mascara_data);
	ds_mascara_w	:=	replace(ds_mascara_w,'HH:MI:SS','HH24:MI:SS');
	ds_mascara_w	:=	replace(ds_mascara_w,'HHMISS','HH24MISS');
	ds_valor_w	:=	to_char(to_date(ds_valor_w,ds_mascara_w));
	exception
	when others then
		ds_valor_w	:=	ds_valor_w;
	end;
elsif (ie_tipo_atributo_w = 'NUMBER') and (coalesce(reg_proc_p.ds_mascara_numero,'X') <> 'X') then
	begin
	ds_mascara_w	:=	replace(reg_proc_p.ds_mascara_numero,'#','9');
	ds_valor_w	:=	to_number(ds_valor_w, ds_mascara_w);
	exception
	when others then
		ds_valor_w	:=	ds_valor_w;
	end;
end if;

/*'Efetua conversao de dados'*/

if (coalesce(ds_valor_w,'NULL') <> 'NULL') and (ie_conversao_w = 'S') and (reg_proc_p.nr_seq_regra_conv IS NOT NULL AND reg_proc_p.nr_seq_regra_conv::text <> '') then
	begin

	ds_valor_retorno_w	:=	bkf_obter_conv_interna(null, nm_tabela_ref_w, nm_atrib_ref_w, ds_valor_w, null, reg_proc_p.nr_seq_regra_conv);
	/*'Caso nao encontrar conversao no meio externo e a referencia for Pessoa Fisica, efetua conversao pela pf_codigo_externo'*/

	if (coalesce(ds_valor_retorno_w,'NULL') = 'NULL') and
		((nm_atrib_ref_w like 'CD_MEDICO%') or (nm_atrib_ref_w like 'CD_PESSOA%')) then
		begin
		select	cd_pessoa_fisica
		into STRICT	ds_valor_retorno_w
		from	pf_codigo_externo
		where	ltrim(cd_pessoa_fisica_externo,'0') 	= ltrim(ds_valor_w,'0')
		and	ie_tipo_codigo_externo 	in ('ISH','ISHMED')
		and coalesce(cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento;
		exception
		when others then
			ds_valor_retorno_w	:=	null;
		end;

		if (coalesce(ds_valor_retorno_w,'NULL') = 'NULL') then
			begin
			select	cd_pessoa_fisica
			into STRICT	ds_valor_retorno_w
			from	pf_codigo_externo
			where	ltrim(cd_pessoa_fisica_externo,'0') = ltrim(ds_valor_w,'0')
			and coalesce(cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento;
			exception
			when others then
				ds_valor_retorno_w	:=	null;
			end;
		end if;
	end if;

	/*'Guarda o log caso nao encontrar a conversao para o valor recebido'*/

	if (coalesce(ds_valor_retorno_w,'NULL') = 'NULL') then
		begin
		
			reg_proc_p := ger_carga_pck.incluir_ger_carga_log_import(
			reg_proc_p, '9', substr(	wheb_mensagem_pck.get_texto(736986,
				'DS_ELEMENTO='||ds_arquivo_w ||
				';DS_ATRIBUTO='||nm_coluna_p ||
				';NR_SEQ_REGRA='||reg_proc_p.nr_seq_regra_conv||
				';NM_TABELA='||nm_tabela_ref_w||
				';NM_ATRIBUTO='||nm_atrib_ref_w||
				';DS_VALOR='||ds_valor_w),1,4000));
		end;
	end if;
	end;
elsif (coalesce(ds_valor_w,'NULL') <> 'NULL') then
	ds_valor_retorno_w	:=	ds_valor_w;
elsif (coalesce(ds_valor_w,'NULL') = 'NULL') and (coalesce(ds_valor_retorno_w,'NULL') <> 'NULL') then
	ds_valor_retorno_w	:=	ds_valor_retorno_w;
elsif (coalesce(ds_valor_w,'NULL') = 'NULL') and (ger_tipo_carga_campo_w.ie_obrigatorio = 'S') then
	begin
	
		reg_proc_p := ger_carga_pck.incluir_ger_carga_log_import(
		reg_proc_p, '3', substr(	wheb_mensagem_pck.get_texto(736987,
			'DS_ELEMENTO='||ds_arquivo_w ||
			';DS_ATRIBUTO='||nm_coluna_p),1,4000));
	end;
end if;

if (coalesce(ds_valor_retorno_w,'NULL') <> 'NULL') then
	begin
	if (cd_dominio_w > 0) then
		begin
		select	count(*)
		into STRICT	qt_registros_w
		from	intpd_valor_dominio_v
		where	cd_dominio = cd_dominio_w
		and	vl_dominio = ds_valor_retorno_w;

		if (qt_registros_w = 0) then
			begin
			
				reg_proc_p := ger_carga_pck.incluir_ger_carga_log_import(
				reg_proc_p, '10', substr(	wheb_mensagem_pck.get_texto(736988,
					'DS_ELEMENTO='||ds_arquivo_w ||
					';DS_ATRIBUTO='||nm_coluna_p ||
					';CD_DOMINIO='||cd_dominio_w||
					';DS_VALOR='||ds_valor_retorno_w),1,4000));
			end;
		end if;
		end;
	end if;

	if (ie_consistir_fk_w = 'S') then
		begin
		begin
		ds_sql_w := 'select count(1) qt_reg from ' || nm_tabela_ref_w || ' where ' || nm_atrib_ref_w || ' = :ds_valor ';
		EXECUTE ds_sql_w into STRICT qt_registros_w using ds_valor_retorno_w;
		exception
		when others then
			qt_registros_w	:=	0;
		end;

		if (qt_registros_w = 0) then
			begin
			
				reg_proc_p := ger_carga_pck.incluir_ger_carga_log_import(
				reg_proc_p, '11', substr(	wheb_mensagem_pck.get_texto(736989,
					'DS_ELEMENTO='||ds_arquivo_w ||
					';DS_ATRIBUTO='||nm_coluna_p ||
					';NM_TABELA_REFERENCIA='||nm_tabela_ref_w||
					';DS_VALOR='||ds_valor_retorno_w),1,4000));
			end;
		end if;
		end;
	end if;

	end;
end if;

if (ie_tipo_atributo_w in ('VARCHAR2','NUMBER')) and (qt_tamanho_w > 0) and (length(ds_valor_retorno_w) > qt_tamanho_w) then
	--O conteudo para o campo excede o tamanho maximo permitido.
	--Elemento:#@DS_ELEMENTO#@ Atributo:#@DS_ATRIBUTO#@ Tabela:#@NM_TABELA#@ Campo: #@NM_CAMPO#@ Valor:#@DS_VALOR#@
	
			reg_proc_p := ger_carga_pck.incluir_ger_carga_log_import(
			reg_proc_p, '4', substr(wheb_mensagem_pck.get_texto(1073211,
				'DS_ELEMENTO='	|| ds_arquivo_w ||
				';DS_ATRIBUTO='	|| nm_coluna_p ||
				';NM_TABELA='	|| nm_tabela_w ||
				';NM_CAMPO='	|| nm_atributo_p ||
				';DS_VALOR='	|| ds_valor_retorno_w),1,4000));

	ds_valor_retorno_w	:= null;
end if;

begin
ds_valor_retorno_p	:=	ds_valor_retorno_w;
exception
when others then
	
		reg_proc_p := ger_carga_pck.incluir_ger_carga_log_import(
		reg_proc_p, '12', substr(	wheb_mensagem_pck.get_texto(1059154,
			'DS_ELEMENTO='||ds_arquivo_w ||
			';DS_ATRIBUTO='||nm_coluna_p ||
			';NM_TABELA='||nm_tabela_w||
			';NM_ATRIBUTO='||nm_atributo_p||
			';DS_VALOR='||ds_valor_retorno_w),1,4000));
end;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ger_carga_pck.proc_val ( reg_proc_p INOUT r_reg_proc, nm_coluna_p text, nm_atributo_p text, ds_valor_entrada_p text, ds_valor_retorno_p INOUT text, ie_conversao_p text default 'N') FROM PUBLIC;
