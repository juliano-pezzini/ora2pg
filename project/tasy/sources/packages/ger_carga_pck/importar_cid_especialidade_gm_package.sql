-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ger_carga_pck.importar_cid_especialidade_gm ( nr_seq_carga_p ger_carga_inicial.nr_sequencia%type, nr_seq_carga_arq_p ger_carga_arq.nr_sequencia%type, nr_sequencia_p bigint) AS $body$
DECLARE

	qt_especialidade_w bigint;

	c_cid_especialidade_gm CURSOR FOR
	SELECT  *
	from    cid_especialidade_gm
	where   ie_status	= 'V'
	and     nr_seq_carga 		= nr_seq_carga_p
	and     nr_seq_carga_arq 	= coalesce(nr_seq_carga_arq_p,nr_seq_carga_arq)
	and     nr_sequencia 		= coalesce(nr_sequencia_p, nr_sequencia);

	
BEGIN

	for 	row_cid_especialidade_gm in c_cid_especialidade_gm loop

		reg_proc_w := ger_carga_pck.set_carga_arq(reg_proc_w, row_cid_especialidade_gm.nr_seq_carga_arq, row_cid_especialidade_gm.nr_linha, row_cid_especialidade_gm.nr_sequencia, 'S');
		CALL ger_carga_pck.atualizar_processamento( 'CID_ESPECIALIDADE_GM', row_cid_especialidade_gm.nr_sequencia);
		PERFORM set_config('ger_carga_pck.ie_update_w', null, false);

		begin

		select	count(*)
		into STRICT   	qt_especialidade_w
		from   	cid_especialidade
		where  	cd_especialidade_cid = row_cid_especialidade_gm.cd_especialidade;

		if (qt_especialidade_w = 0) and (ie_tipo_proc_p = 'IMP') then
			begin
			insert into cid_especialidade(cd_especialidade_cid,
				ds_especialidade_cid,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_categ_inicial,
				cd_categ_final,
				ds_especialidade_compl,
				ie_situacao)
			values (row_cid_especialidade_gm.cd_especialidade, -- cd_especialidade_cid
				substr(row_cid_especialidade_gm.ds_especialidade, 0, 100), -- ds_especialidade_cid
				clock_timestamp(), -- dt_atualizacao
				nm_usuario_w, -- nm_usuario
				clock_timestamp(), -- dt_atualizacao_nrec
				nm_usuario_w, -- nm_usuario_nrec
				null, -- cd_categ_inicial
				null, -- cd_categ_final
				null, -- ds_especialidade_compl
				'A'); -- ie_situacao
			end;
		elsif (current_setting('ger_carga_pck.ie_atualizar_w')::varchar(1) = 'S') and (ie_tipo_proc_p = 'IMP') then
			begin
			update  cid_especialidade
			set     ds_especialidade_cid    = substr(row_cid_especialidade_gm.ds_especialidade,0,100),
				dt_atualizacao          = clock_timestamp(),
				nm_usuario              = nm_usuario_w,
				ie_situacao             = 'A'
			where   cd_especialidade_cid    = row_cid_especialidade_gm.cd_especialidade;

			PERFORM set_config('ger_carga_pck.ie_update_w', 'S;', false);
			end;
		end if;

		if (reg_proc_w.qt_reg_log > 0) then
			begin
			/*'Em caso de qualquer consistencia o sistema efetua rollback, atualiza o status para Erro e registra todos os logs de consistencia'*/

			rollback;
			update	cid_especialidade_gm
			set	ie_status 	= 'E',
				dt_fim_proc	= clock_timestamp()
			where	nr_sequencia 	= row_cid_especialidade_gm.nr_sequencia;
			end;
		elsif (ie_tipo_proc_p = 'IMP') then
			update	cid_especialidade_gm
			set	ie_status 	= 'I',
				ds_chave_tasy	= current_setting('ger_carga_pck.ie_update_w')::varchar(2)||row_cid_especialidade_gm.cd_especialidade,
				dt_fim_proc	= clock_timestamp()
			where	nr_sequencia 	= row_cid_especialidade_gm.nr_sequencia;
		else
			update	cid_especialidade_gm
			set	ie_status 	= 'V',
				dt_fim_proc	= clock_timestamp()
			where	nr_sequencia 	= row_cid_especialidade_gm.nr_sequencia;
		end if;

		exception
		when others then
			begin
			ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);

			rollback;

			reg_proc_w := ger_carga_pck.incluir_ger_carga_log_import(reg_proc_w, '4', ds_erro_w);

			update	cid_especialidade_gm
			set	ie_status 	= 'E',
				dt_fim_proc	= clock_timestamp()
			where	nr_sequencia 	= row_cid_especialidade_gm.nr_sequencia;

			end;
		end;

		commit;
	end loop;

	end;
--==============================================================================
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ger_carga_pck.importar_cid_especialidade_gm ( nr_seq_carga_p ger_carga_inicial.nr_sequencia%type, nr_seq_carga_arq_p ger_carga_arq.nr_sequencia%type, nr_sequencia_p bigint) FROM PUBLIC;
