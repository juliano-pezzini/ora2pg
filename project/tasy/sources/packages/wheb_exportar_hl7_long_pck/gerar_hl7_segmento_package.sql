-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE wheb_exportar_hl7_long_pck.gerar_hl7_segmento (nr_seq_segmento_p bigint, ar_result_query_sup_p myArray, nr_seq_atrib_superior_p bigint, ds_valor_long_p INOUT DBMS_SQL.VARCHAR2A) AS $body$
DECLARE

	_ora2pg_r RECORD;
ar_hl7_elemento_w	hl7Segmento;
	ar_resultado_atual_w 	myArray;
	cursor_atual_w		integer;

	nr_sequencia_w 		bigint;
	ie_criar_segmento_w 	varchar(1);
	ie_tipo_w		varchar(3);
	nm_segmento_w		varchar(50);
	ds_erro_w		varchar(4000);

	c_elemento CURSOR FOR
		SELECT	nr_sequencia,
			ds_sql,
			ie_criar_segmento,
			substr(nm_segmento,1,50) nm_segmento,
			ie_tipo
		FROM 	hl7_segmento
		WHERE 	nr_sequencia = nr_seq_segmento_p
		ORDER BY nr_seq_apresentacao;
	
BEGIN
		OPEN c_elemento;
		LOOP
		FETCH c_elemento INTO
			ar_hl7_elemento_w[1].NR_SEQUENCIA,
			ar_hl7_elemento_w[1].DS_SQL,
			ar_hl7_elemento_w[1].ie_criar_segmento,
			ar_hl7_elemento_w[1].NM_SEGMENTO,
			ar_hl7_elemento_w[1].IE_TIPO;
		EXIT WHEN NOT FOUND; /* apply on c_elemento */
		if ( ar_hl7_elemento_w[1](.DS_SQL IS NOT NULL AND .DS_SQL::text <> '')) then
			SELECT * FROM wheb_exportar_hl7_long_pck.executa_sql(ar_hl7_elemento_w, ar_result_query_sup_p, ar_resultado_atual_w, cursor_atual_w) INTO STRICT _ora2pg_r;
 ar_resultado_atual_w := _ora2pg_r.ar_resultado_p; cursor_atual_w := _ora2pg_r.cursor_p;
			LOOP
			BEGIN

				/* faz a leitura dos caracteres que farão parte na montagem da mensagem  (DS_SEPARADOR,DS_ENCODING) */

				ar_resultado_atual_w := wheb_exportar_hl7_long_pck.armazena_sql(cursor_atual_w, ar_resultado_atual_w);
				if (current_setting('wheb_exportar_hl7_long_pck.ds_separador_w')::coalesce(varchar(1)::text, '') = '' ) then
					PERFORM set_config('wheb_exportar_hl7_long_pck.ds_separador_w', wheb_exportar_hl7_long_pck.obter_valor_parametro('DS_SEPARADOR',current_setting('wheb_exportar_hl7_long_pck.ar_result_todos_sql_p')::myArray), false);
					PERFORM set_config('wheb_exportar_hl7_long_pck.ds_separador_attr_w', current_setting('wheb_exportar_hl7_long_pck.ds_separador_w')::varchar(1), false);
				end if;

				if (current_setting('wheb_exportar_hl7_long_pck.ds_encoding_w')::coalesce(varchar(10)::text, '') = '' ) then
					PERFORM set_config('wheb_exportar_hl7_long_pck.ds_encoding_w', wheb_exportar_hl7_long_pck.obter_valor_parametro('DS_ENCODING',current_setting('wheb_exportar_hl7_long_pck.ar_result_todos_sql_p')::myArray), false);
					PERFORM set_config('wheb_exportar_hl7_long_pck.ds_sep_comp_w', substr(current_setting('wheb_exportar_hl7_long_pck.ds_encoding_w')::varchar(10),1,1), false);
					PERFORM set_config('wheb_exportar_hl7_long_pck.ds_repeticao_w', substr(current_setting('wheb_exportar_hl7_long_pck.ds_encoding_w')::varchar(10),2,1), false);
					PERFORM set_config('wheb_exportar_hl7_long_pck.ds_escape_w', substr(current_setting('wheb_exportar_hl7_long_pck.ds_encoding_w')::varchar(10),3,1), false);
					PERFORM set_config('wheb_exportar_hl7_long_pck.ds_subcomp_w', substr(current_setting('wheb_exportar_hl7_long_pck.ds_encoding_w')::varchar(10),4,1), false);
				end if;
			EXCEPTION
				WHEN OTHERS THEN
					ds_erro_w := sqlerrm;
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(279585, 'DS_ELEMENTO_P=' || ar_hl7_elemento_w[1].nm_segmento ||
											';NR_SEQUENCIA_P=' || ar_hl7_elemento_w[1].NR_SEQUENCIA ||
											';DS_ERRO_P=' || ds_erro_w);
				END;
				if ( ar_resultado_atual_w.count = 0 ) then
					DBMS_SQL.CLOSE_CURSOR(cursor_atual_w);
					EXIT;
				else
					ds_valor_long_p := wheb_exportar_hl7_long_pck.gerar_hl7_segmento_group(ar_hl7_elemento_w, ar_resultado_atual_w, ds_valor_long_p);
				end if;
			END LOOP;
		elsif ( ar_result_query_sup_p.count > 0 ) then
			ds_valor_long_p := wheb_exportar_hl7_long_pck.gerar_hl7_segmento_group(ar_hl7_elemento_w, ar_result_query_sup_p, ds_valor_long_p);
		else
			ds_valor_long_p := wheb_exportar_hl7_long_pck.gerar_hl7_segmento_group(ar_hl7_elemento_w, ar_resultado_atual_w, ds_valor_long_p);
		end if;
		END LOOP;
		CLOSE c_elemento;
	end;

	/*
	Cada tipo de "segmento" contem particularidades específicas.
	A geração de cada segmento é direcionada a seu tratador.
	*/
$body$
LANGUAGE PLPGSQL
;
-- REVOKE ALL ON PROCEDURE wheb_exportar_hl7_long_pck.gerar_hl7_segmento (nr_seq_segmento_p bigint, ar_result_query_sup_p myArray, nr_seq_atrib_superior_p bigint, ds_valor_long_p INOUT DBMS_SQL.VARCHAR2A) FROM PUBLIC;
