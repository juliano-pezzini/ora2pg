-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_ame_pck.adicionar_benef_lib_debito ( nr_seq_lote_rem_p pls_ame_lote_remessa.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, dt_rescisao_p timestamp) AS $body$
DECLARE


current_setting('pls_ame_pck.nr_seq_segurado_w')::pls_segurado.nr_sequencia%type		pls_segurado.nr_sequencia%type;
current_setting('pls_ame_pck.qt_registros_w')::bigint			bigint;
index_w				bigint;
nr_seq_item_w			pls_mensalidade_seg_item.nr_sequencia%type;
current_setting('pls_ame_pck.vl_item_w')::double			pls_mensalidade_seg_item.vl_item%type;
dt_mesano_referencia_w		timestamp;
qt_sca_benef_w			bigint;
nm_beneficiario_w		pessoa_fisica.nm_pessoa_fisica%type;
current_setting('pls_ame_pck.dt_rescisao_w')::timestamp			timestamp;

C00 CURSOR FOR
	SELECT	nr_sequencia nr_seq_segurado,
		CASE WHEN coalesce(nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END  ie_titular,
		dt_rescisao
	from	pls_segurado
	where	((nr_sequencia	= nr_seq_segurado_p) or (nr_seq_titular = nr_seq_segurado_p))
	and	((coalesce(dt_rescisao::text, '') = '') or (trunc(to_date(dt_rescisao_p),'dd') >= trunc(dt_rescisao,'dd')));

current_setting('pls_ame_pck.c01')::CURSOR( CURSOR FOR
	SELECT	a.vl_coparticipacao,
		a.nr_seq_conta,
		a.nr_seq_conta_proc,
		a.nr_seq_conta_mat,
		a.nr_sequencia nr_seq_conta_coparticipacao,
		(SELECT coalesce(sum(mic.vl_item), 0)
		from 	pls_mensalidade_item_conta mic,
			pls_mensalidade_seg_item msi,
			pls_mensalidade_segurado ms,
			pls_mensalidade m
		where 	msi.nr_sequencia 	= mic.nr_seq_item
		and	ms.nr_sequencia		= msi.nr_seq_mensalidade_seg
		and	m.nr_sequencia		= ms.nr_seq_mensalidade
		and	mic.nr_seq_conta_copartic = a.nr_sequencia
		and	coalesce(m.ie_cancelamento::text, '') = '') vl_baixa,
		(select coalesce(nr_seq_prestador_exec, nr_seq_prestador)
		from	pls_conta x
		where	x.nr_sequencia = a.nr_seq_conta) nr_seq_prestador
	from	pls_conta_coparticipacao		a
	where	a.nr_seq_segurado			= current_setting('pls_ame_pck.nr_seq_segurado_w')::pls_segurado.nr_sequencia%type
	and	coalesce(a.ie_status_mensalidade,'L')	= 'L'
	and	coalesce(a.ie_status_coparticipacao,'S')	= 'S'
	and	coalesce(a.ie_gerar_mensalidade,'S')		= 'S'
	and	coalesce(a.nr_seq_mensalidade_seg::text, '') = '';

current_setting('pls_ame_pck.c02')::CURSOR( CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_conta_co,
		a.nr_seq_conta,
		a.vl_beneficiario,
		(SELECT coalesce(sum(mic.vl_item), 0)
		from 	pls_mensalidade_item_conta mic,
			pls_mensalidade_seg_item msi,
			pls_mensalidade_segurado ms,
			pls_mensalidade m
		where 	msi.nr_sequencia 	= mic.nr_seq_item
		and	ms.nr_sequencia		= msi.nr_seq_mensalidade_seg
		and	m.nr_sequencia		= ms.nr_seq_mensalidade
		and	mic.nr_seq_conta_co 	= a.nr_sequencia
		and	coalesce(m.ie_cancelamento::text, '') = '') vl_baixa,
		(select coalesce(nr_seq_prestador_exec, nr_seq_prestador)
		from	pls_conta x
		where	x.nr_sequencia = a.nr_seq_conta) nr_seq_prestador
	from	pls_conta_co	a
	where	a.nr_seq_segurado	= current_setting('pls_ame_pck.nr_seq_segurado_w')::pls_segurado.nr_sequencia%type
	and	a.ie_cobrar_mensalidade	= 'S'
	and	coalesce(a.nr_seq_mensalidade_seg::text, '') = '';


C03 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_conta_pos_estab,
		a.nr_seq_conta,
		a.vl_beneficiario,
		(SELECT coalesce(sum(mic.vl_item), 0)
		from 	pls_mensalidade_item_conta mic,
			pls_mensalidade_seg_item msi,
			pls_mensalidade_segurado ms,
			pls_mensalidade m
		where 	msi.nr_sequencia 	= mic.nr_seq_item
		and	ms.nr_sequencia		= msi.nr_seq_mensalidade_seg
		and	m.nr_sequencia		= ms.nr_seq_mensalidade
		and	mic.nr_seq_conta_pos_estab = a.nr_sequencia
		and	coalesce(m.ie_cancelamento::text, '') = '') vl_baixa,
		(select coalesce(nr_seq_prestador_exec, nr_seq_prestador)
		from	pls_conta x
		where	x.nr_sequencia = a.nr_seq_conta) nr_seq_prestador
	from	pls_conta_pos_estabelecido a
	where	a.nr_seq_segurado	= current_setting('pls_ame_pck.nr_seq_segurado_w')::pls_segurado.nr_sequencia%type
	and	a.ie_situacao = 'A'
	and	a.ie_cobrar_mensalidade	= 'S'
	and	coalesce(a.nr_seq_mensalidade_seg::text, '') = ''
	and	coalesce(a.nr_seq_sca::text, '') = '';

BEGIN

select	count(1)
into STRICT	current_setting('pls_ame_pck.qt_registros_w')::bigint
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_p
and	(nr_seq_titular IS NOT NULL AND nr_seq_titular::text <> '');

current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v.delete;

/*Nao pode ser incluido beneficiario dependente na liberacao de debito!*/


if (current_setting('pls_ame_pck.qt_registros_w')::bigint > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(317227);
end if;

select	count(1)
into STRICT	current_setting('pls_ame_pck.qt_registros_w')::bigint
from	pls_ame_lote_rem_destino 	a,
	pls_ame_lote_rem_arquivo	b,
	pls_ame_lote_rem_valor		c
where	a.nr_sequencia 		= b.nr_seq_lote_rem_dest
and	b.nr_sequencia 		= c.nr_seq_lote_rem_arq
and	c.nr_seq_segurado 	= nr_seq_segurado_p
and	a.nr_seq_lote_rem 	= nr_seq_lote_rem_p;

if (current_setting('pls_ame_pck.qt_registros_w')::bigint > 0) then

	select	pls_obter_dados_segurado(c.nr_seq_segurado, 'N')
	into STRICT	nm_beneficiario_w
	from	pls_ame_lote_rem_destino 	a,
		pls_ame_lote_rem_arquivo	b,
		pls_ame_lote_rem_valor		c
	where	a.nr_sequencia 		= b.nr_seq_lote_rem_dest
	and	b.nr_sequencia 		= c.nr_seq_lote_rem_arq
	and	c.nr_seq_segurado 	= nr_seq_segurado_p
	and	a.nr_seq_lote_rem 	= nr_seq_lote_rem_p;
	
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1071821, 'NM_BENEFICIARIO=' || nm_beneficiario_w || ';NR_SEQ_LOTE=' || nr_seq_lote_rem_p);
end if;

select	dt_ref_mensalidade
into STRICT	dt_mesano_referencia_w
from	pls_ame_lote_remessa
where	nr_sequencia	= nr_seq_lote_rem_p;

for r_c00_w in C00 loop
	begin
	PERFORM set_config('pls_ame_pck.dt_rescisao_w', r_c00_w.dt_rescisao, false);
	
	PERFORM set_config('pls_ame_pck.nr_seq_segurado_w', r_c00_w.nr_seq_segurado, false);

	nr_seq_item_w	:= pls_obter_seg_preco_ativo(current_setting('pls_ame_pck.nr_seq_segurado_w')::pls_segurado.nr_sequencia%type, dt_mesano_referencia_w);
	
	if (nr_seq_item_w IS NOT NULL AND nr_seq_item_w::text <> '') then
		select	vl_preco_atual
		into STRICT	current_setting('pls_ame_pck.vl_item_w')::double
		from	pls_segurado_preco
		where	nr_sequencia	= nr_seq_item_w;

		index_w	:= current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v.count+1;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_segurado	:= current_setting('pls_ame_pck.nr_seq_segurado_w')::pls_segurado.nr_sequencia%type;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_segurado_preco	:= nr_seq_item_w;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].ie_titular		:= r_c00_w.ie_titular;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].dt_rescisao		:= coalesce(current_setting('pls_ame_pck.dt_rescisao_w')::timestamp,dt_rescisao_p);
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_conta		:= null;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_conta_proc	:= null;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_conta_mat	:= null;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].ie_tipo_item		:= '1';
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].vl_item		:= current_setting('pls_ame_pck.vl_item_w')::double;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_prestador	:= null;
	else
		select	count(*)
		into STRICT	qt_sca_benef_w
		from	pls_sca_vinculo
		where	nr_seq_segurado = current_setting('pls_ame_pck.nr_seq_segurado_w')::pls_segurado.nr_sequencia%type;

		if (qt_sca_benef_w > 0)	then
			PERFORM set_config('pls_ame_pck.vl_item_w', pls_obter_vl_total_sca_benef(current_setting('pls_ame_pck.nr_seq_segurado_w')::pls_segurado.nr_sequencia%type), false);
			
			index_w	:= current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v.count+1;
			current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_segurado	:= current_setting('pls_ame_pck.nr_seq_segurado_w')::pls_segurado.nr_sequencia%type;
			current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_segurado_preco	:= null;
			current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].ie_titular		:= r_c00_w.ie_titular;
			current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].dt_rescisao		:= coalesce(current_setting('pls_ame_pck.dt_rescisao_w')::timestamp,dt_rescisao_p);
			current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_conta		:= null;
			current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_conta_proc	:= null;
			current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_conta_mat	:= null;
			current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].ie_tipo_item		:= '15';
			current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].vl_item		:= current_setting('pls_ame_pck.vl_item_w')::double;
			current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_prestador	:= null;
		end if;
	end if;

	for r_c01_w in current_setting('pls_ame_pck.c01')::CURSOR( loop
		begin
		PERFORM set_config('pls_ame_pck.vl_item_w', r_c01_w.vl_coparticipacao - r_c01_w.vl_baixa, false);

		index_w	:= current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v.count+1;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_segurado	:= current_setting('pls_ame_pck.nr_seq_segurado_w')::pls_segurado.nr_sequencia%type;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_segurado_preco	:= null;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].ie_titular		:= r_c00_w.ie_titular;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].dt_rescisao		:= coalesce(current_setting('pls_ame_pck.dt_rescisao_w')::timestamp,dt_rescisao_p);
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_conta		:= r_c01_w.nr_seq_conta;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_conta_proc	:= r_c01_w.nr_seq_conta_proc;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_conta_mat	:= r_c01_w.nr_seq_conta_mat;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].ie_tipo_item		:= '3';
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].vl_item		:= current_setting('pls_ame_pck.vl_item_w')::double;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_prestador	:= r_c01_w.nr_seq_prestador;
		end;
	end loop;

	for r_c02_w in current_setting('pls_ame_pck.c02')::CURSOR( loop
		begin

		PERFORM set_config('pls_ame_pck.vl_item_w', r_c02_w.vl_beneficiario - r_c02_w.vl_baixa, false);

		index_w	:= current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v.count+1;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_segurado	:= current_setting('pls_ame_pck.nr_seq_segurado_w')::pls_segurado.nr_sequencia%type;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_segurado_preco	:= null;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].ie_titular		:= r_c00_w.ie_titular;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].dt_rescisao		:= coalesce(current_setting('pls_ame_pck.dt_rescisao_w')::timestamp,dt_rescisao_p);
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_conta		:= r_c02_w.nr_seq_conta;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_conta_proc	:= null;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_conta_mat	:= null;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].ie_tipo_item		:= '13';
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].vl_item		:= current_setting('pls_ame_pck.vl_item_w')::double;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_prestador	:= r_c02_w.nr_seq_prestador;
		end;
	end loop;

	for r_c03_w in c03 loop
		begin
		PERFORM set_config('pls_ame_pck.vl_item_w', r_c03_w.vl_beneficiario - r_c03_w.vl_baixa, false);

		index_w	:= current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v.count+1;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_segurado	:= current_setting('pls_ame_pck.nr_seq_segurado_w')::pls_segurado.nr_sequencia%type;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_segurado_preco	:= null;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].ie_titular		:= r_c00_w.ie_titular;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].dt_rescisao		:= coalesce(current_setting('pls_ame_pck.dt_rescisao_w')::timestamp,dt_rescisao_p);
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_conta		:= r_c03_w.nr_seq_conta;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_conta_proc	:= null;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_conta_mat	:= null;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].ie_tipo_item		:= '6';
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].vl_item		:= current_setting('pls_ame_pck.vl_item_w')::double;
		current_setting('pls_ame_pck.reg_itens_benef_debito_w')::reg_itens_benef_debito_v[index_w].nr_seq_prestador	:= r_c03_w.nr_seq_prestador;
		end;
	end loop;
	end;
end loop;

PERFORM set_config('pls_ame_pck.is_liberacao_debito_w', true, false);

CALL pls_ame_pck.inicia_processo_geracao_lote(nr_seq_lote_rem_p);

PERFORM set_config('pls_ame_pck.is_liberacao_debito_w', false, false);

end;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ame_pck.adicionar_benef_lib_debito ( nr_seq_lote_rem_p pls_ame_lote_remessa.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, dt_rescisao_p timestamp) FROM PUBLIC;
