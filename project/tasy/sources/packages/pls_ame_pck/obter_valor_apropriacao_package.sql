-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_ame_pck.obter_valor_apropriacao ( nr_seq_regra_ger_arq_p pls_ame_regra_ger_arq.nr_sequencia%type, ie_tipo_item_p text, nr_seq_item_p bigint, nr_seq_mensalidade_seg_p bigint, nr_seq_conta_coparticipacao_p bigint, vl_item_p bigint, nr_seq_tipo_lanc_p bigint, nr_seq_segurado_preco_p bigint, nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nr_seq_conta_pos_estab_p bigint) RETURNS bigint AS $body$
DECLARE


nr_seq_centro_apropriacao_w		pls_ame_regra_ger_item_apr.nr_seq_centro_apropriacao%type;
current_setting('pls_ame_pck.vl_item_w')::double				double precision;
vl_item_aux_w				double precision;
ie_consid_zerado_w			pls_ame_regra_ger_item.ie_consid_zerado%type;

current_setting('pls_ame_pck.c01')::CURSOR( CURSOR FOR
	SELECT	distinct y.nr_seq_centro_apropriacao,
		x.ie_consid_zerado
	from	pls_ame_regra_ger_item		x,
		pls_ame_regra_ger_item_apr	y
	where	y.nr_seq_regra_item		= x.nr_sequencia
	and	x.nr_seq_regra_ger_arq		= nr_seq_regra_ger_arq_p
	and	x.ie_regra_excecao		= 'N'
	and	((x.ie_tipo_item_mens		= ie_tipo_item_p) or (coalesce(x.ie_tipo_item_mens::text, '') = ''))
	and	((x.nr_seq_tipo_lanc		= nr_seq_tipo_lanc_p) or (coalesce(x.nr_seq_tipo_lanc::text, '') = ''));


BEGIN
/*Coloca o valor atual*/


PERFORM set_config('pls_ame_pck.vl_item_w', vl_item_p, false);

open current_setting('pls_ame_pck.c01')::CURSOR(;
loop
fetch current_setting('pls_ame_pck.c01')::CURSOR( into
	nr_seq_centro_apropriacao_w,
	ie_consid_zerado_w;
EXIT WHEN NOT FOUND; /* apply on current_setting('pls_ame_pck.c01')::CURSOR( */
	begin

	/*Se tiver regra de apropriacao, entao zera na primeira vez que entrar no cursor a variavel*/


	if	(current_setting('pls_ame_pck.c01')::CURSOR(%rowCount = 1) then
		PERFORM set_config('pls_ame_pck.vl_item_w', 0, false);
	end if;
	if (current_setting('pls_ame_pck.is_liberacao_debito_w')::boolean) then
		if (ie_tipo_item_p = '1') then
			select	coalesce(sum(vl_apropriacao),0)
			into STRICT	vl_item_aux_w
			from	pls_segurado_preco_aprop
			where	nr_seq_segurado_preco		= nr_seq_segurado_preco_p
			and	nr_seq_centro_apropriacao	= nr_seq_centro_apropriacao_w;
		else
			select	coalesce(sum(vl_apropriacao),0)
			into STRICT	vl_item_aux_w
			from	pls_conta_copartic_aprop	c,
				pls_conta_coparticipacao	b
			where	c.nr_seq_conta_coparticipacao	= b.nr_sequencia
			and	b.nr_seq_conta			= nr_seq_conta_p
			and	((b.nr_seq_conta_proc		= nr_seq_conta_proc_p) or (coalesce(nr_seq_conta_proc_p::text, '') = ''))
			and	((b.nr_seq_conta_mat		= nr_seq_conta_mat_p) or (coalesce(nr_seq_conta_mat_p::text, '') = ''))
			and	c.nr_seq_centro_apropriacao	= nr_seq_centro_apropriacao_w
			and	coalesce(b.nr_seq_mensalidade_seg::text, '') = '';
		end if;
	else
		if (ie_tipo_item_p = '3') then
			if (nr_seq_conta_coparticipacao_p IS NOT NULL AND nr_seq_conta_coparticipacao_p::text <> '') then
				select  coalesce(sum(a.vl_apropriacao),0)
				into STRICT	vl_item_aux_w
				from  	pls_mens_item_conta_aprop 	a,
					pls_mensalidade_item_conta 	b,
					pls_mensalidade_seg_item 	c
				where 	c.nr_Sequencia 		= b.nr_seq_item
				and   	b.nr_sequencia 		= a.nr_seq_mens_item_conta
				and 	b.nr_seq_conta_copartic	= nr_seq_conta_coparticipacao_p
				and	c.nr_seq_conta		= nr_seq_conta_p
				and	c.ie_tipo_item		= '3'
				and   	c.nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_p
				and   	a.nr_seq_centro_apropriacao = nr_seq_centro_apropriacao_w;
			else
				select  coalesce(sum(a.vl_apropriacao),0)
				into STRICT	vl_item_aux_w
				from  	pls_mens_item_conta_aprop 	a,
					pls_mensalidade_item_conta 	b,
					pls_mensalidade_seg_item 	c
				where 	c.nr_Sequencia 		= b.nr_seq_item
				and   	b.nr_sequencia 		= a.nr_seq_mens_item_conta
				and	c.nr_seq_conta		= nr_seq_conta_p
				and	c.ie_tipo_item		= '3'
				and   	c.nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_p
				and   	a.nr_seq_centro_apropriacao = nr_seq_centro_apropriacao_w;
			end if;
		elsif (ie_tipo_item_p in ('6','7')) then
			if (nr_seq_conta_pos_estab_p IS NOT NULL AND nr_seq_conta_pos_estab_p::text <> '') then
				select  coalesce(sum(a.vl_apropriacao),0)
				into STRICT	vl_item_aux_w
				from  	pls_mens_item_conta_aprop 	a,
					pls_mensalidade_item_conta 	b,
					pls_mensalidade_seg_item 	c
				where 	c.nr_Sequencia 		= b.nr_seq_item
				and   	b.nr_sequencia 		= a.nr_seq_mens_item_conta
				and 	b.nr_seq_conta_pos_estab = nr_seq_conta_pos_estab_p
				and	c.nr_seq_conta		= nr_seq_conta_p
				and	c.ie_tipo_item	in ('6','7')
				and   	c.nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_p
				and   	a.nr_seq_centro_apropriacao = nr_seq_centro_apropriacao_w;
			else
				select  coalesce(sum(a.vl_apropriacao),0)
				into STRICT	vl_item_aux_w
				from  	pls_mens_item_conta_aprop 	a,
					pls_mensalidade_item_conta 	b,
					pls_mensalidade_seg_item 	c
				where 	c.nr_Sequencia 		= b.nr_seq_item
				and   	b.nr_sequencia 		= a.nr_seq_mens_item_conta
				and	c.nr_seq_conta		= nr_seq_conta_p
				and	c.ie_tipo_item	in ('6','7')
				and   	c.nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_p
				and   	a.nr_seq_centro_apropriacao = nr_seq_centro_apropriacao_w;
			end if;
		else
			/*Busca o valor da apropriacao conforme o centro de custo*/


			select	coalesce(sum(vl_apropriacao),0)
			into STRICT	vl_item_aux_w
			from	pls_mens_seg_item_aprop
			where	nr_seq_item			= nr_seq_item_p
			and	nr_seq_centro_apropriacao	= nr_seq_centro_apropriacao_w;
		end if;
	end if;

	PERFORM set_config('pls_ame_pck.vl_item_w', current_setting('pls_ame_pck.vl_item_w')::double + vl_item_aux_w, false);
	end;
end loop;
close current_setting('pls_ame_pck.c01')::CURSOR(;

if (ie_consid_zerado_w = 'N') and (current_setting('pls_ame_pck.vl_item_w')::double = 0) then
	return null;
end if;

return current_setting('pls_ame_pck.vl_item_w')::double;
end;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_ame_pck.obter_valor_apropriacao ( nr_seq_regra_ger_arq_p pls_ame_regra_ger_arq.nr_sequencia%type, ie_tipo_item_p text, nr_seq_item_p bigint, nr_seq_mensalidade_seg_p bigint, nr_seq_conta_coparticipacao_p bigint, vl_item_p bigint, nr_seq_tipo_lanc_p bigint, nr_seq_segurado_preco_p bigint, nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nr_seq_conta_pos_estab_p bigint) FROM PUBLIC;
