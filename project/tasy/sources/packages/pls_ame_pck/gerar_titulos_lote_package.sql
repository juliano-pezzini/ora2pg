-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_ame_pck.gerar_titulos_lote ( nr_seq_lote_retorno_p pls_ame_lote_retorno.nr_sequencia%type) AS $body$
DECLARE

beneficiarios_lote_ret_c CURSOR FOR
	SELECT	nr_seq_segurado
	from	pls_ame_lote_ret_valor
	where	nr_seq_lote_ret	= nr_seq_lote_retorno_p;

type benef_lote_ret_type is table of beneficiarios_lote_ret_c%rowtype;

beneficiarios_lote_ret_table	benef_lote_ret_type;
current_setting('pls_ame_pck.nr_seq_ame_empresa_w')::pls_ame_empresa.nr_sequencia%type		pls_ame_regra_retorno.nr_seq_ame_empresa%type;
current_setting('pls_ame_pck.nr_seq_ame_subsidiaria_w')::pls_ame_subsidiaria.nr_sequencia%type	pls_ame_regra_retorno.nr_seq_ame_subsidiaria%type;
cd_tipo_recebimento_w		pls_ame_regra_baixa_tit.cd_tipo_recebimento%type;
nr_seq_trans_fin_baixa_w	pls_ame_regra_baixa_tit.nr_seq_trans_fin_baixa%type;
dt_lote_w			pls_ame_lote_retorno.dt_lote%type;
nr_titulo_w			titulo_receber.nr_titulo%type;
vl_saldo_titulo_w		titulo_receber.vl_saldo_titulo%type;
nr_seq_conta_banco_w		pls_ame_regra_tit_novo.nr_seq_conta_banco%type;
nr_seq_banco_carteira_w		pls_ame_regra_tit_novo.nr_seq_banco_carteira%type;
nr_seq_trans_fin_contab_w	pls_ame_regra_tit_novo.nr_seq_trans_fin_contab%type;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
current_setting('pls_ame_pck.nr_seq_mensalidade_w')::pls_mensalidade_segurado.nr_seq_mensalidade%type		pls_mensalidade_segurado.nr_seq_mensalidade%type;
cd_cgc_w			pessoa_juridica.cd_cgc%type;
dt_vencimento_w			pls_mensalidade.dt_vencimento%type;
vl_mensalidade_w		pls_mensalidade.vl_mensalidade%type;
cd_moeda_w			titulo_receber.cd_moeda%type;
nr_seq_mensalidade_seg_w	pls_mensalidade_segurado.nr_sequencia%type;
cd_tipo_taxa_juro_par_w		parametro_contas_receber.cd_tipo_taxa_juro%type;
cd_tipo_taxa_multa_par_w	parametro_contas_receber.cd_tipo_taxa_multa%type;
pr_juro_padrao_par_w		parametro_contas_receber.pr_juro_padrao%type;
pr_multa_padrao_par_w		parametro_contas_receber.pr_multa_padrao%type;
cd_tipo_portador_w		parametro_contas_receber.cd_tipo_portador%type;
cd_portador_w			parametro_contas_receber.cd_portador%type;
cd_tipo_taxa_juros_w		pls_parametros.cd_tipo_taxa_juro%type;
tx_juros_w			pls_parametros.pr_juro_padrao%type;
cd_tipo_taxa_multa_w		pls_parametros.cd_tipo_taxa_multa%type;
tx_multa_w			pls_parametros.pr_multa_padrao%type;
nr_seq_pagador_fin_w		bigint;
nr_seq_pagador_w		bigint;
cd_estab_financeiro_w		bigint;

BEGIN

select	trunc(a.dt_lote,'month'),
	b.nr_seq_ame_empresa,
	b.nr_seq_ame_subsidiaria
into STRICT	dt_lote_w,
	current_setting('pls_ame_pck.nr_seq_ame_empresa_w')::pls_ame_empresa.nr_sequencia%type,
	current_setting('pls_ame_pck.nr_seq_ame_subsidiaria_w')::pls_ame_subsidiaria.nr_sequencia%type
from	pls_ame_lote_retorno	a,
	pls_ame_regra_retorno	b
where	a.nr_seq_regra_retorno	= b.nr_sequencia
and	a.nr_sequencia		= nr_seq_lote_retorno_p;

begin
select	cd_tipo_recebimento,
	nr_seq_trans_fin_baixa
into STRICT	cd_tipo_recebimento_w,
	nr_seq_trans_fin_baixa_w
from	pls_ame_regra_baixa_tit
where (nr_seq_ame_empresa	= current_setting('pls_ame_pck.nr_seq_ame_empresa_w')::pls_ame_empresa.nr_sequencia%type or coalesce(nr_seq_ame_empresa::text, '') = '')
and (nr_seq_ame_subsidiaria	= current_setting('pls_ame_pck.nr_seq_ame_subsidiaria_w')::pls_ame_subsidiaria.nr_sequencia%type or coalesce(nr_seq_ame_subsidiaria::text, '') = '');
exception
	when no_data_found then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(285944);
end;

begin
select	nr_seq_conta_banco,
	nr_seq_banco_carteira,
	nr_seq_trans_fin_contab
into STRICT	nr_seq_conta_banco_w,
	nr_seq_banco_carteira_w,
	nr_seq_trans_fin_contab_w
from	pls_ame_regra_tit_novo
where (nr_seq_ame_empresa	= current_setting('pls_ame_pck.nr_seq_ame_empresa_w')::pls_ame_empresa.nr_sequencia%type or coalesce(nr_seq_ame_empresa::text, '') = '')
and (nr_seq_ame_subsidiaria	= current_setting('pls_ame_pck.nr_seq_ame_subsidiaria_w')::pls_ame_subsidiaria.nr_sequencia%type or coalesce(nr_seq_ame_subsidiaria::text, '') = '');
exception
	when no_data_found then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(285964);
end;

select	coalesce(cd_estab_financeiro, cd_estabelecimento)
into STRICT	cd_estab_financeiro_w
from	estabelecimento
where	cd_estabelecimento	= pls_ame_pck.get_cd_estabelecimento();

select	cd_tipo_taxa_juro,
	cd_tipo_taxa_multa,
	pr_juro_padrao,
	pr_multa_padrao
into STRICT	cd_tipo_taxa_juro_par_w,
	cd_tipo_taxa_multa_par_w,
	pr_juro_padrao_par_w,
	pr_multa_padrao_par_w
from	parametro_contas_receber
where	cd_estabelecimento = pls_ame_pck.get_cd_estabelecimento();

select	cd_tipo_taxa_juro,
	pr_juro_padrao,
	cd_tipo_taxa_multa,
	pr_multa_padrao
into STRICT	cd_tipo_taxa_juros_w,
	tx_juros_w,
	cd_tipo_taxa_multa_w,
	tx_multa_w
from	pls_parametros
where	cd_estabelecimento = pls_ame_pck.get_cd_estabelecimento();

open beneficiarios_lote_ret_c;
fetch beneficiarios_lote_ret_c bulk collect into beneficiarios_lote_ret_table;
close beneficiarios_lote_ret_c;

if (beneficiarios_lote_ret_table.count <> 0) then
	for i in beneficiarios_lote_ret_table.first .. beneficiarios_lote_ret_table.last loop
		begin
		select	a.nr_titulo,
			a.vl_saldo_titulo,
			b.nr_seq_mensalidade,
			b.nr_sequencia,
			c.vl_mensalidade,
			c.nr_seq_pagador_fin,
			C.nr_seq_pagador
		into STRICT	nr_titulo_w,
			vl_saldo_titulo_w,
			current_setting('pls_ame_pck.nr_seq_mensalidade_w')::pls_mensalidade_segurado.nr_seq_mensalidade%type,
			nr_seq_mensalidade_seg_w,
			vl_mensalidade_w,
			nr_seq_pagador_fin_w,
			nr_seq_pagador_w
		from	titulo_receber			a,
			pls_mensalidade_segurado	b,
			pls_mensalidade			c
		where	a.nr_seq_mensalidade	= c.nr_sequencia
		and	b.nr_seq_mensalidade	= c.nr_sequencia
		and	b.nr_seq_segurado	= beneficiarios_lote_ret_table[i].nr_seq_segurado
		and	trunc(b.dt_mesano_referencia,'month')	= dt_lote_w
		and	coalesce(a.dt_liquidacao::text, '') = '';
		exception
			when others then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(286248,	'NM_BENEFICIARIO=' || pls_obter_dados_segurado(beneficiarios_lote_ret_table[i].nr_seq_segurado,'N') ||
										';DT_MES_REFERENCIA=' || to_char(dt_lote_w,'dd/mm/yyyy'));
		end;

		CALL baixa_titulo_receber(	get_cd_estabelecimento,
					cd_tipo_recebimento_w,
					nr_titulo_w,
					nr_seq_trans_fin_baixa_w,
					vl_saldo_titulo_w,
					clock_timestamp(),
					get_nm_usuario,
					0,
					null,
					null,
					0,
					0);

		CALL Atualizar_Saldo_Tit_Rec(nr_titulo_w,get_nm_usuario);

		select	cd_tipo_portador,
			cd_portador
		into STRICT	cd_tipo_portador_w,
			cd_portador_w
		from	pls_contrato_pagador_fin
		where	nr_sequencia	= nr_seq_pagador_fin_w;

		select	a.cd_pessoa_fisica,
			a.cd_cgc,
			trunc(b.dt_vencimento,'dd')
		into STRICT	cd_pessoa_fisica_w,
			cd_cgc_w,
			dt_vencimento_w
		from	pls_contrato_pagador	a,
			pls_mensalidade		b
		where	b.nr_seq_pagador	= a.nr_sequencia
		and	b.nr_sequencia		= current_setting('pls_ame_pck.nr_seq_mensalidade_w')::pls_mensalidade_segurado.nr_seq_mensalidade%type;

		select	nextval('titulo_seq')
		into STRICT	nr_titulo_w
		;

		cd_moeda_w := obter_moeda_padrao(get_cd_estabelecimento,'R');

		insert	into	titulo_receber(	nr_titulo,cd_pessoa_fisica,cd_cgc,dt_atualizacao,nm_usuario,
				cd_estabelecimento,dt_emissao,dt_vencimento,dt_pagamento_previsto,vl_titulo,
				vl_saldo_titulo,vl_saldo_juros,vl_saldo_multa,cd_tipo_taxa_juro,cd_tipo_taxa_multa,
				cd_moeda,tx_desc_antecipacao,tx_juros,tx_multa,cd_tipo_portador,
				cd_portador,ie_tipo_inclusao,ie_tipo_titulo,ie_origem_titulo,ie_tipo_emissao_titulo,
				ie_situacao,nr_lote_contabil,nr_seq_mensalidade,nr_seq_mens_segurado,nr_seq_conta_banco,
				ie_pls,ds_observacao_titulo,nm_usuario_orig,dt_inclusao,nr_seq_trans_fin_contab,
				nr_seq_pagador,cd_estab_financeiro,nr_seq_carteira_cobr)
		values (	nr_titulo_w,cd_pessoa_fisica_w,cd_cgc_w,clock_timestamp(),get_nm_usuario,
				get_cd_estabelecimento,clock_timestamp(),dt_vencimento_w,dt_vencimento_w,vl_mensalidade_w,
				vl_mensalidade_w,0,0,coalesce(cd_tipo_taxa_juros_w,cd_tipo_taxa_juro_par_w),coalesce(cd_tipo_taxa_multa_w,cd_tipo_taxa_multa_par_w),
				cd_moeda_w,0,coalesce(tx_juros_w,pr_juro_padrao_par_w),coalesce(tx_multa_w,pr_multa_padrao_par_w),cd_tipo_portador_w,
				cd_portador_w,'2','1','3',2,
				'1',0,null,nr_seq_mensalidade_seg_w,nr_seq_conta_banco_w,
				'S','',get_nm_usuario,clock_timestamp(),nr_seq_trans_fin_contab_w,
				nr_seq_pagador_w,cd_estab_financeiro_w,nr_seq_banco_carteira_w);

		CALL Gerar_Bloqueto_Tit_Rec(nr_titulo_w, 'OPSMS');
		CALL Atualizar_Saldo_Tit_Rec(nr_titulo_w, get_nm_usuario);
	end loop;
end if;

update	pls_ame_lote_retorno
set	dt_geracao_titulos	= clock_timestamp()
where	nr_sequencia		= nr_seq_lote_retorno_p;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ame_pck.gerar_titulos_lote ( nr_seq_lote_retorno_p pls_ame_lote_retorno.nr_sequencia%type) FROM PUBLIC;
