-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


CREATE TYPE segurados_mensalidade_record AS (	nr_seq_mensalidade_segurado	pls_mensalidade_segurado.nr_sequencia%type,
							nr_seq_segurado			pls_segurado.nr_sequencia%type,
							qt_dependente			pls_ame_lote_rem_valor.qt_dependente%type,
							dt_rescisao			pls_segurado.dt_rescisao%type,
							ie_devolucao_mens		varchar(1));


CREATE OR REPLACE PROCEDURE pls_ame_pck.gerar_beneficiarios_arquivo ( nr_seq_regra_ger_arq_p pls_ame_regra_ger_arq.nr_sequencia%type, nr_seq_lote_rem_arq_p pls_ame_lote_rem_arquivo.nr_sequencia%type, cd_cgc_estipulante_p pessoa_juridica.cd_cgc%type, qt_max_titular_p pls_ame_regra_ger_arq.qt_max_titular%type, ie_nm_arquivo_div_p pls_ame_regra_ger_arq.ie_nm_arquivo_div%type) AS $body$
DECLARE


	regras_contrato CURSOR FOR
		SELECT	nr_seq_contrato,
			nr_seq_contrato_principal,
			ie_regra_excecao,
			nr_seq_pagador,
			nr_seq_classif_itens
		from	pls_ame_regra_ger_contrato
		where	nr_seq_regra_ger_arq	= nr_seq_regra_ger_arq_p;

	type regras_contrato_table is table of regras_contrato%rowtype index by integer;

	regras_contrato_w regras_contrato_table;
	dt_lote_w				pls_ame_lote_remessa.dt_lote%type;
		
	regras_titular CURSOR FOR
		SELECT	ie_preco_produto,
			ie_regulamentacao,
			ie_acomodacao_padrao,
			nr_seq_produto,
			ie_regra_excecao,
			ie_tipo_pessoa_pagador,
			nr_seq_forma_cobranca,
			cd_matricula_estipulante
		from	pls_ame_regra_ger_titular
		where	nr_seq_regra_ger_arq	= nr_seq_regra_ger_arq_p
		and 	dt_lote_w between trunc(coalesce(dt_inicio_vigencia,dt_lote_w),'dd') and fim_dia(coalesce(dt_fim_vigencia,dt_lote_w));
		
	type regras_titular_table is table of regras_titular%rowtype index by integer;

	regras_titular_w		regras_titular_table;
		
	sql_base_w	text;
	sql_base_ww	text;

	type segurados_mensalidade_table is table of segurados_mensalidade_record index by integer;
	segurados_mensalidade_w		segurados_mensalidade_table;
	

	retorno_segurados_mens_w REFCURSOR;
	nr_seq_lote_rem_valor_w		pls_ame_lote_rem_valor.nr_sequencia%type;
	nr_seq_lote_rem_arq_w		pls_ame_lote_rem_arquivo.nr_sequencia%type	:= nr_seq_lote_rem_arq_p;
	qt_titulares_arquivo_w		integer	:= 0;
	nr_seq_lote_rem_dest_w		integer	:= 0;
	nm_arquivo_w			pls_ame_lote_rem_arquivo.nm_arquivo%type;
	indice_arquivos_w		integer	:= 1;
	nr_seq_titular_w		pls_segurado.nr_seq_titular%type;
	nr_seq_lote_rem_valor_dep_w	pls_ame_lote_rem_valor.nr_sequencia%type;
	nr_seq_mensalidade_w		pls_mensalidade.nr_sequencia%type;

	current_setting('pls_ame_pck.c01')::CURSOR( CURSOR(	ie_devolucao_mens_pc		text) FOR
		SELECT	nr_seq_lote_rem_arq_w		nr_seq_lote_rem_arq,
			b.nr_sequencia			nr_seq_segurado,
			a.nr_sequencia			nr_seq_mensalidade_seg,
			b.nr_seq_titular		nr_seq_titular
		from	pls_mensalidade_segurado	a,
			pls_segurado			b,
			pls_mensalidade			c
		where	a.nr_seq_segurado	= b.nr_sequencia
		and	c.dt_referencia		= current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade
		and	current_setting('pls_ame_pck.ie_data_origem_mensalidade_w')::varchar(1) = 'C'
		and	b.nr_seq_titular	= nr_seq_titular_w
		and	c.nr_sequencia		= a.nr_seq_mensalidade
		and	coalesce(c.ie_cancelamento::text, '') = ''
		and	((exists (SELECT	1
				from	titulo_receber x
				where	x.nr_seq_mensalidade	= c.nr_sequencia
				and	((coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_gerar_sem_titulo,'N') = 'G') or (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_gerar_sem_titulo,'N') = 'N' and coalesce(x.dt_liquidacao::text, '') = '') or (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_gerar_sem_titulo,'N') = 'L' and (x.dt_liquidacao IS NOT NULL AND x.dt_liquidacao::text <> ''))))) or (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_gerar_sem_titulo,'N') = 'S'))
		and	current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_liberacao_debito = 'N'
		and	coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_origem_informacao, '1') = '1'
		and	not exists (	select	1
					from	pls_ame_lote_rem_valor_det	y,
						pls_ame_lote_rem_valor		x
					where	x.nr_sequencia			= y.nr_seq_lote_rem_valor
					and	y.nr_seq_mensalidade_seg	= a.nr_sequencia
					and	x.nr_seq_lote_rem_arq		= nr_seq_lote_rem_arq_p)
		and	ie_devolucao_mens_pc = 'N'
		and	((current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_origem_cnpj <> 'P') or
			((current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_origem_cnpj = 'P')  and (	select	max(p.cd_cgc)
											from	pls_contrato_pagador p
											where	c.nr_seq_pagador = p.nr_sequencia) = cd_cgc_estipulante_p))
		
union all

		select	nr_seq_lote_rem_arq_w		nr_seq_lote_rem_arq,
			b.nr_sequencia			nr_seq_segurado,
			a.nr_sequencia			nr_seq_mensalidade_seg,
			b.nr_seq_titular		nr_seq_titular
		from	pls_mensalidade_segurado	a,
			pls_segurado			b,
			pls_mensalidade			c
		where	a.nr_seq_segurado	= b.nr_sequencia
		and	trunc(c.dt_vencimento, 'mm')	= current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade
		and	current_setting('pls_ame_pck.ie_data_origem_mensalidade_w')::varchar(1) = 'V'
		and	b.nr_seq_titular	= nr_seq_titular_w
		and	c.nr_sequencia		= a.nr_seq_mensalidade
		and	coalesce(c.ie_cancelamento::text, '') = ''
		and	((exists (select	1
				from	titulo_receber x
				where	x.nr_seq_mensalidade	= c.nr_sequencia
				and	((coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_gerar_sem_titulo,'N') = 'G') or (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_gerar_sem_titulo,'N') = 'N' and coalesce(x.dt_liquidacao::text, '') = '') or (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_gerar_sem_titulo,'N') = 'L' and (x.dt_liquidacao IS NOT NULL AND x.dt_liquidacao::text <> ''))))) or (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_gerar_sem_titulo,'N') = 'S'))
		and	current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_liberacao_debito = 'N'
		and	coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_origem_informacao, '1') = '1'
		and	not exists (	select	1
					from	pls_ame_lote_rem_valor_det	y,
						pls_ame_lote_rem_valor		x
					where	x.nr_sequencia			= y.nr_seq_lote_rem_valor
					and	y.nr_seq_mensalidade_seg	= a.nr_sequencia
					and	x.nr_seq_lote_rem_arq		= nr_seq_lote_rem_arq_p)
		and	ie_devolucao_mens_pc = 'N'
		and	((current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_origem_cnpj <> 'P') or
			((current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_origem_cnpj = 'P')  and (	select	max(p.cd_cgc)
											from	pls_contrato_pagador p
											where	c.nr_seq_pagador = p.nr_sequencia) = cd_cgc_estipulante_p))
		
union all

		select	nr_seq_lote_rem_arq_w		nr_seq_lote_rem_arq,
			b.nr_sequencia			nr_seq_segurado,
			null				nr_seq_mensalidade_seg,
			b.nr_seq_titular		nr_seq_titular
		from	table(pls_ame_pck.imprimir_benef_lib_debito())	a,
			pls_segurado			b
		where	a.nr_seq_segurado	= b.nr_sequencia
		and	b.nr_seq_titular	= nr_seq_titular_w
		and	current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_liberacao_debito = 'S'
		and	coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_origem_informacao, '1') = '1'
		and	ie_devolucao_mens_pc = 'N'
		group by
			b.nr_sequencia, b.nr_seq_titular
		
union all

		select	nr_seq_lote_rem_arq_w		nr_seq_lote_rem_arq,
			c.nr_sequencia			nr_seq_segurado,
			null				nr_seq_mensalidade_seg,
			c.nr_seq_titular		nr_seq_titular
		from	pls_segurado		c,
			pls_lib_coparticipacao	b,
			pls_lote_coparticipacao a
		where	a.nr_sequencia			= b.nr_seq_lote
		and	c.nr_sequencia			= b.nr_seq_segurado
		and	c.nr_seq_titular		= nr_seq_titular_w
		and	trunc(a.dt_competencia,'mm') 	= current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade
		and	current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_liberacao_debito = 'N'
		and	coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_origem_informacao, '1') = '2'
		and	ie_devolucao_mens_pc = 'N'
		group by c.nr_sequencia,c.nr_seq_titular
		
union

		select	nr_seq_lote_rem_arq_w		nr_seq_lote_rem_arq,
			c.nr_sequencia			nr_seq_segurado,
			null				nr_seq_mensalidade_seg,
			c.nr_seq_titular		nr_seq_titular
		from	pls_segurado		c,
			pls_lib_taxa_atend	b,
			pls_lote_taxa_atend	a
		where	a.nr_sequencia			= b.nr_seq_lote
		and	c.nr_sequencia			= b.nr_seq_segurado
		and	c.nr_seq_titular		= nr_seq_titular_w
		and	trunc(a.dt_competencia,'mm')	= current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade
		and	current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_liberacao_debito = 'N'
		and	coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_origem_informacao, '1') = '2'
		and	ie_devolucao_mens_pc = 'N'
		group by c.nr_sequencia,c.nr_seq_titular;

	regras_contrato_ww			varchar(4000)	:= '';
	regras_contrato_principal_w		varchar(4000)	:= '';
	regras_preco_produto_w			varchar(4000)	:= '';
	regras_regulamentacao_w			varchar(4000)	:= '';
	regras_acomodacao_w			varchar(4000)	:= '';
	regras_nr_seq_plano_w			varchar(4000)	:= '';
	regras_pagador_w			varchar(4000)	:= '';
	regras_classif_itens_pag_w		varchar(4000)	:= '';
	
	nr_seq_regra_ger_arquivo_w		pls_ame_lote_rem_arquivo.nr_seq_regra_ger_arquivo%type;

	qt_titulares_lote_w			bigint;
	qt_valor_det_w				bigint	:= 0;
	qt_valor_w				bigint	:= 0;
	qt_registros_dep_w			bigint;
	qt_dep_tit_w				bigint;

	current_setting('pls_ame_pck.qt_registros_w')::bigint				integer;
	qt_benef_mens_w				integer;
	qt_devolucao_mens_w			integer;
	qt_depend_sem_tit_w			integer;
	qt_lote_copartic_w			integer;
	x					integer;


BEGIN
	select	a.nr_seq_lote_rem_dest,
		a.nm_arquivo,
		c.dt_lote
	into STRICT	nr_seq_lote_rem_dest_w,
		nm_arquivo_w,
		dt_lote_w
	from	pls_ame_lote_rem_arquivo a,
		pls_ame_lote_rem_destino b,
		pls_ame_lote_remessa c
	where	a.nr_sequencia = nr_seq_lote_rem_arq_p
	and 	a.nr_seq_lote_rem_dest = b.nr_sequencia
	and	b.nr_seq_lote_rem = c.nr_sequencia;

	PERFORM set_config('pls_ame_pck.dt_lote_ww', dt_lote_w, false);
	
	open regras_contrato;
	fetch regras_contrato bulk collect into regras_contrato_w;
	close regras_contrato;

	x := 1;
	qt_devolucao_mens_w := 0;
	qt_depend_sem_tit_w := 0;

	if (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_liberacao_debito,'N') = 'N') and (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_origem_informacao, '1') = '1') then
		if (current_setting('pls_ame_pck.ie_data_origem_mensalidade_w')::varchar(1) = 'C') then
			select	count(1)
			into STRICT	qt_devolucao_mens_w
			
			where 	exists (SELECT	1
					from	pls_lancamento_mensalidade	i,
						pls_mensalidade_seg_item	h,
						pls_mensalidade_segurado	a,
						pls_segurado			b,
						pls_mensalidade			e
					where	a.nr_seq_segurado	= b.nr_sequencia
					and	e.nr_sequencia		= a.nr_seq_mensalidade
					and	a.nr_sequencia		= h.nr_seq_mensalidade_seg
					and	i.nr_sequencia		= h.nr_seq_lancamento_mens
					and	i.nr_seq_seg_rescisao	<> b.nr_sequencia
					and	e.dt_referencia		= current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade
					and	coalesce(b.nr_seq_titular::text, '') = ''
					and	coalesce(e.ie_cancelamento::text, '') = '');

			x := x + qt_devolucao_mens_w;

			select	count(1)
			into STRICT	qt_depend_sem_tit_w
			
			where	exists (SELECT	1
					from	pls_segurado			a,
						pls_mensalidade_segurado	b,
						pls_mensalidade			c
					where	a.nr_sequencia = b.nr_seq_segurado
					and	c.nr_sequencia = b.nr_seq_mensalidade
					and	(a.nr_seq_titular IS NOT NULL AND a.nr_seq_titular::text <> '')
					and	c.dt_referencia = current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade
					and	not exists (	select	1
								from	pls_segurado			x,
									pls_mensalidade_segurado	y,
									pls_mensalidade			z
								where	x.nr_sequencia = a.nr_seq_titular
								and	x.nr_sequencia = y.nr_Seq_segurado
								and	z.nr_sequencia = y.nr_seq_mensalidade
								and	z.dt_referencia = current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade));

			x := x + qt_depend_sem_tit_w;
		elsif (current_setting('pls_ame_pck.ie_data_origem_mensalidade_w')::varchar(1) = 'V') then
			select	count(1)
			into STRICT	qt_devolucao_mens_w
			
			where 	exists (SELECT	1
					from	pls_lancamento_mensalidade	i,
						pls_mensalidade_seg_item	h,
						pls_mensalidade_segurado	a,
						pls_segurado			b,
						pls_mensalidade			e
					where	a.nr_seq_segurado	= b.nr_sequencia
					and	e.nr_sequencia		= a.nr_seq_mensalidade
					and	a.nr_sequencia		= h.nr_seq_mensalidade_seg
					and	i.nr_sequencia		= h.nr_seq_lancamento_mens
					and	i.nr_seq_seg_rescisao	<> b.nr_sequencia
					and	trunc(e.dt_vencimento, 'mm') = current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade
					and	coalesce(b.nr_seq_titular::text, '') = ''
					and	coalesce(e.ie_cancelamento::text, '') = '');

			x := x + qt_devolucao_mens_w;

			select	count(1)
			into STRICT	qt_depend_sem_tit_w
			
			where	exists (SELECT	1
					from	pls_segurado			a,
						pls_mensalidade_segurado	b,
						pls_mensalidade			c
					where	a.nr_sequencia = b.nr_seq_segurado
					and	c.nr_sequencia = b.nr_seq_mensalidade
					and	(a.nr_seq_titular IS NOT NULL AND a.nr_seq_titular::text <> '')
					and	trunc(c.dt_vencimento, 'mm') = current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade
					and	not exists (	select	1
								from	pls_segurado			x,
									pls_mensalidade_segurado	y,
									pls_mensalidade			z
								where	x.nr_sequencia = a.nr_seq_titular
								and	x.nr_sequencia = y.nr_Seq_segurado
								and	z.nr_sequencia = y.nr_seq_mensalidade
								and	trunc(z.dt_vencimento, 'mm') = current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade));

			x := x + qt_depend_sem_tit_w;
		end if;
	elsif	((coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_origem_informacao, '1') = '2') and (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_liberacao_debito,'N') = 'N')) then
		x := 2;
	end if;

	/* Adicionar as restricoes para cada union */


	for z in 1..x loop
		sql_base_w := null;

		if	((coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_origem_informacao, '1') = '2') and (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_liberacao_debito,'N') = 'N')) then
			if (z = 1) then
				sql_base_w :=	'select	null, ' ||
						'	nvl(b.nr_seq_titular, b.nr_sequencia) nr_seq_segurado,										' ||
						'	(select	count(1)														' ||
						'	 from	pls_segurado x														' ||
						'	 where	x.nr_seq_titular = nvl(b.nr_seq_titular, b.nr_sequencia)) qt_dependente,						' ||
						'	null dt_rescisao,														' ||
						'	''N'' ie_devolucao_mens 													' ||
						'from	pls_plano			d,												' ||
						'	pls_contrato			c,												' ||
						'	pls_segurado			b,												' ||
						'	pls_lote_coparticipacao 	y,												' ||
						'	pls_lib_coparticipacao 		z,												' ||
						'	pls_conta_coparticipacao	x,												' ||
						'	pls_contrato_pagador		f												' ||
						'where	d.nr_sequencia	= b.nr_seq_plano												' ||
						'and	c.nr_sequencia	= b.nr_seq_contrato												' ||
						'and	y.nr_sequencia	= z.nr_seq_lote													' ||
						'and	f.nr_sequencia	= x.nr_seq_pagador												' ||
						'and	x.nr_sequencia	= z.nr_seq_conta_coparticipacao											' ||
						'and	b.nr_sequencia	= z.nr_seq_segurado												' ||
						'and	y.dt_liberacao is not null													' ||
						'and	trunc(y.dt_competencia, ''mm'')	= ''' || current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade || '''						';
			elsif (z = 2) then
				sql_base_w :=	'union '||
						'select	null, ' ||
						'	nvl(b.nr_seq_titular, b.nr_sequencia) nr_seq_segurado,										' ||
						'	(select	count(1)														' ||
						'	 from	pls_segurado x														' ||
						'	 where	x.nr_seq_titular = nvl(b.nr_seq_titular, b.nr_sequencia)) qt_dependente,						' ||
						'	null dt_rescisao,														' ||
						'	''N'' ie_devolucao_mens														' ||
						'from	pls_contrato_pagador	f,													' ||
						'	pls_plano		d,													' ||
						'	pls_contrato		c,													' ||
						'	pls_segurado		b,													' ||
						'	pls_lote_taxa_atend	y													' ||
						'where	f.nr_sequencia		= b.nr_seq_pagador											' ||
						'and	d.nr_sequencia		= b.nr_seq_plano											' ||
						'and	c.nr_sequencia		= b.nr_seq_contrato											' ||
						'and	exists(select	1														' ||
						'		from	pls_lib_taxa_atend z												' ||
						'		where	y.nr_sequencia		= z.nr_seq_lote 									' ||
						'		and	b.nr_sequencia		= z.nr_seq_segurado )									' ||
						'and	y.dt_liberacao is not null													' ||
						'and	(b.nr_seq_titular is null or													' ||
						'	not exists (	select	1													' ||
						'			from	pls_lib_taxa_atend z											' ||
						'			where	y.nr_sequencia = z.nr_seq_lote										' ||
						'			and	z.nr_seq_segurado = b.nr_seq_titular))									' ||
						'and	trunc(y.dt_competencia, ''mm'')	= ''' || current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade || ''' 					';
			end if;
		elsif 	((coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_liberacao_debito,'N') = 'N') and (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_origem_informacao, '1') = '1')) then
			if (z = 1) then
				if (current_setting('pls_ame_pck.ie_data_origem_mensalidade_w')::varchar(1) = 'C') then
					sql_base_w	:=	'select	a.nr_sequencia,														' ||
								'	b.nr_sequencia nr_seq_segurado,												' ||
								'	(select	count(1)													' ||
								'	 from	pls_segurado x													' ||
								'	 where	x.nr_seq_titular = b.nr_sequencia) qt_dependente,								' ||
								'	null dt_rescisao,													' ||
								'	''N'' ie_devolucao_mens													' ||
								'from	pls_mensalidade_segurado	a,											' ||
								'	pls_segurado			b,											' ||
								'	pls_contrato			c,											' ||
								'	pls_plano			d,											' ||
								'	pls_mensalidade			e,											' ||
								'	pls_contrato_pagador		f											' ||
								'where	a.nr_seq_segurado	= b.nr_sequencia										' ||
								'and	c.nr_sequencia		= b.nr_seq_contrato										' ||
								'and	d.nr_sequencia		= a.nr_seq_plano										' ||
								'and	e.nr_sequencia		= a.nr_seq_mensalidade										' ||
								'and	f.nr_sequencia		= e.nr_seq_pagador										' ||
								'and	b.nr_seq_titular is null												' ||
								'and	e.ie_cancelamento is null												' ||
								'and	e.dt_referencia	= ''' || current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade || '''							';
				elsif (current_setting('pls_ame_pck.ie_data_origem_mensalidade_w')::varchar(1) = 'V') then
					sql_base_w	:=	'select	a.nr_sequencia,														' ||
								'	b.nr_sequencia nr_seq_segurado,												' ||
								'	(select	count(1)													' ||
								'	 from	pls_segurado x													' ||
								'	 where	x.nr_seq_titular = b.nr_sequencia) qt_dependente,								' ||
								'	null dt_rescisao,													' ||
								'	''N'' ie_devolucao_mens													' ||
								'from	pls_mensalidade_segurado	a,											' ||
								'	pls_segurado			b,											' ||
								'	pls_contrato			c,											' ||
								'	pls_plano			d,											' ||
								'	pls_mensalidade			e,											' ||
								'	pls_contrato_pagador		f											' ||
								'where	a.nr_seq_segurado	= b.nr_sequencia										' ||
								'and	c.nr_sequencia		= b.nr_seq_contrato										' ||
								'and	d.nr_sequencia		= a.nr_seq_plano										' ||
								'and	e.nr_sequencia		= a.nr_seq_mensalidade										' ||
								'and	f.nr_sequencia		= e.nr_seq_pagador										' ||
								'and	b.nr_seq_titular is null												' ||
								'and	e.ie_cancelamento is null												' ||
								'and	trunc(e.dt_vencimento, ''mm'')	= ''' || current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade || '''					';
				end if;
			elsif (z = 3) or
				(z = 2 AND qt_devolucao_mens_w = 0) then
				if (current_setting('pls_ame_pck.ie_data_origem_mensalidade_w')::varchar(1) = 'C') then
					sql_base_w	:=	chr(13) ||
								'union ' ||
								'select	null,																		' ||
								'	b.nr_sequencia nr_seq_segurado,															' ||
								'	(select	count(1)																' ||
								'	 from	pls_segurado x																' ||
								'	 where	x.nr_seq_titular = b.nr_sequencia) qt_dependente,											' ||
								'	null dt_rescisao,																' ||
								'	''N'' ie_devolucao_mens																' ||
								'from	pls_segurado			b,														' ||
								'	pls_contrato			c,														' ||
								'	pls_plano			d,														' ||
								'	pls_contrato_pagador		f,														' ||
								'	pls_segurado_pagador		g														' ||
								'where	c.nr_sequencia	= b.nr_seq_contrato														' ||
								'and	d.nr_sequencia	= b.nr_seq_plano														' ||
								'and	b.nr_sequencia	= g.nr_seq_segurado														' ||
								'and	f.nr_sequencia	= g.nr_seq_pagador														' ||
								'and	b.nr_seq_titular is null															' ||
								'and	'''|| current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade ||''' between 											' ||
								'		nvl(g.dt_inicio_vigencia,'''||current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade||''') and								' ||
								'		nvl(g.dt_fim_vigencia,'''||current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade||''')								' ||
								'and	not exists (	select 	1															' ||
								'			from	pls_mensalidade_segurado	a,											' ||
								'				pls_mensalidade			e											' ||
								'			where	e.nr_sequencia		= a.nr_seq_mensalidade										' ||
								'			and	b.nr_sequencia		= a.nr_seq_segurado										' ||
								'			and	e.ie_cancelamento is null												' ||
								'			and	e.dt_referencia	= ''' || current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade || ''')						' ||
								'and (	select	count(1)																' ||
								'	from	pls_segurado			x,													' ||
								'		pls_mensalidade_segurado	y,													' ||
								'		pls_mensalidade			z													' ||
								'	where	x.nr_sequencia	= y.nr_seq_segurado													' ||
								'	and	z.nr_sequencia	= y.nr_seq_mensalidade													' ||
								'	and	x.nr_seq_titular = b.nr_sequencia													' ||
								'	and	z.dt_referencia	= ''' || current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade || ''') > 0 								';
				elsif (current_setting('pls_ame_pck.ie_data_origem_mensalidade_w')::varchar(1) = 'V') then
					sql_base_w	:=	chr(13) ||
								'union ' ||
								'select	null,																		' ||
								'	b.nr_sequencia nr_seq_segurado,															' ||
								'	(select	count(1)																' ||
								'	 from	pls_segurado x																' ||
								'	 where	x.nr_seq_titular = b.nr_sequencia) qt_dependente,											' ||
								'	null dt_rescisao,																' ||
								'	''N'' ie_devolucao_mens																' ||
								'from	pls_segurado			b,														' ||
								'	pls_contrato			c,														' ||
								'	pls_plano			d,														' ||
								'	pls_contrato_pagador		f,														' ||
								'	pls_segurado_pagador		g														' ||
								'where	c.nr_sequencia	= b.nr_seq_contrato														' ||
								'and	d.nr_sequencia	= b.nr_seq_plano														' ||
								'and	b.nr_sequencia	= g.nr_seq_segurado														' ||
								'and	f.nr_sequencia	= g.nr_seq_pagador														' ||
								'and	b.nr_seq_titular is null															' ||
								'and	''' || current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade || ''' between 											' ||
								'		nvl(g.dt_inicio_vigencia,''' || current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade || ''') and							' ||
								'		nvl(g.dt_fim_vigencia,''' || current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade || ''')								' ||
								'and	not exists (	select 	1															' ||
								'			from	pls_mensalidade_segurado	a,											' ||
								'				pls_mensalidade			e											' ||
								'			where	e.nr_sequencia		= a.nr_seq_mensalidade										' ||
								'			and	b.nr_sequencia		= a.nr_seq_segurado										' ||
								'			and	e.ie_cancelamento is null												' ||
								'			and	trunc(e.dt_vencimento, ''mm'')	= ''' || current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade || ''')				' ||
								'and (	select	count(1)																' ||
								'	from	pls_segurado			x,													' ||
								'		pls_mensalidade_segurado	y,													' ||
								'		pls_mensalidade			z													' ||
								'	where	x.nr_sequencia	= y.nr_seq_segurado													' ||
								'	and	z.nr_sequencia	= y.nr_seq_mensalidade													' ||
								'	and	x.nr_seq_titular = b.nr_sequencia													' ||
								'	and	trunc(z.dt_vencimento, ''mm'') = ''' || current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade || ''') > 0 						';
				end if;
			end if;

			if (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_gerar_sem_titulo,'N') in ('G','N','L')) and
				((z = 1) or (z = 2 AND qt_devolucao_mens_w > 0)) then
				sql_base_w 	:= sql_base_w ||	' and	exists (select	1 ' ||
									'		from	titulo_receber ' ||
									'		where	nr_seq_mensalidade	= e.nr_sequencia ';
				if (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_gerar_sem_titulo,'N') = 'N') then --Somente em aberto
					sql_base_w	:= sql_base_w ||'		and	dt_liquidacao is null ';
				elsif (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_gerar_sem_titulo,'N') = 'L') then --Somente liquidado
					sql_base_w	:= sql_base_w ||'		and	dt_liquidacao is not null ';
				end if;
				sql_base_w	:= sql_base_w ||			' ) ';
			end if;
		else
			sql_base_w	:=	'select	null nr_sequencia,  ' ||
						'	b.nr_sequencia,  ' ||
						'	(select	count(1) ' ||
						'	 from	pls_segurado x' ||
						'	 where	x.nr_seq_titular = b.nr_sequencia) qt_dependente, ' ||
						'	a.dt_rescisao dt_rescisao, ' ||
						'	''N'' ie_devolucao_mens '  ||
						'from	table(pls_ame_pck.imprimir_benef_lib_debito())	a, ' ||
						'	pls_segurado			b, ' ||
						'	pls_contrato			c, ' ||
						'	pls_plano			d, ' ||
						'	pls_contrato_pagador		f  ' ||
						'where	a.nr_seq_segurado	= b.nr_sequencia ' ||
						'and	c.nr_sequencia		= b.nr_seq_contrato ' ||
						'and	d.nr_sequencia		= b.nr_seq_plano ' ||
						'and	f.nr_sequencia		= b.nr_seq_pagador ' ||
						'and 	a.ie_titular		= ''T''	' ||
						'and	b.nr_seq_titular is null ';
		end if;

		if (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_origem_cnpj,'E') = 'E') then
			sql_base_w := sql_base_w ||'and	c.cd_cgc_estipulante	= ''' || cd_cgc_estipulante_p || ''' ';
		elsif (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_origem_cnpj,'E') = 'P') then
			sql_base_w := sql_base_w ||'and	f.cd_cgc = ''' || cd_cgc_estipulante_p || ''' ';
		elsif (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_origem_cnpj,'E') = 'S') then
		
			sql_base_w := sql_base_w ||'and	b.nr_seq_subestipulante in (	select	x.nr_sequencia
											from	pls_sub_estipulante x
											where	x.nr_seq_contrato = b.nr_seq_contrato
											and	x.cd_cgc = ''' || cd_cgc_estipulante_p || ''' ) ';
			
		elsif (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_origem_cnpj,'E') = 'N') then
			select	count(1)
			into STRICT	current_setting('pls_ame_pck.qt_registros_w')::bigint
			
			where	exists (SELECT	1
					from	pls_ame_regra_ger_contrato
					where	nr_seq_regra_ger_arq 	= nr_seq_regra_ger_arq_p
					and	ie_regra_excecao 	= 'N');

			if (current_setting('pls_ame_pck.qt_registros_w')::bigint = 0) then
				-- Nao ha regra de contratos incidentes informado para esta regra de geracao. Favor cadastrar contratos incidentes ou verificar a origem CNPJ da regra de geracao.

				CALL wheb_mensagem_pck.exibir_mensagem_abort(320760);
			end if;
		end if;

		if (regras_contrato_w.count > 0)  then
			for i in regras_contrato_w.first .. regras_contrato_w.last loop
				begin
				if (regras_contrato_w[i].ie_regra_excecao = 'S') then
					if (regras_contrato_w[i](.nr_seq_contrato IS NOT NULL AND .nr_seq_contrato::text <> '')) then
						sql_base_w := sql_base_w || ' and c.nr_sequencia <> ' || regras_contrato_w[i].nr_seq_contrato;
					end if;

					if (regras_contrato_w[i](.nr_seq_contrato_principal IS NOT NULL AND .nr_seq_contrato_principal::text <> '')) then
						sql_base_w := sql_base_w || ' and c.nr_sequencia <> ' || regras_contrato_w[i].nr_seq_contrato_principal;
						sql_base_w := sql_base_w || ' and c.nr_contrato_principal <> ' || regras_contrato_w[i].nr_seq_contrato_principal;
					end if;
					
					if (regras_contrato_w[i](.nr_seq_pagador IS NOT NULL AND .nr_seq_pagador::text <> '')) then
						sql_base_w := sql_base_w || ' and f.nr_sequencia <> ' || regras_contrato_w[i].nr_seq_pagador;
					end if;
					
					if (regras_contrato_w[i](.nr_seq_classif_itens IS NOT NULL AND .nr_seq_classif_itens::text <> '')) then
						sql_base_w := sql_base_w || ' and f.nr_seq_classif_itens <> ' || regras_contrato_w[i].nr_seq_classif_itens;
					end if;
				elsif (regras_contrato_w[i].ie_regra_excecao = 'N') then
					if (regras_contrato_w[i](.nr_seq_contrato IS NOT NULL AND .nr_seq_contrato::text <> '')) then
						regras_contrato_ww := regras_contrato_ww || regras_contrato_w[i].nr_seq_contrato || ',';
					end if;

					if (regras_contrato_w[i](.nr_seq_contrato_principal IS NOT NULL AND .nr_seq_contrato_principal::text <> '')) then
						regras_contrato_ww := regras_contrato_ww || regras_contrato_w[i].nr_seq_contrato_principal || ',';
						regras_contrato_principal_w := regras_contrato_principal_w || regras_contrato_w[i].nr_seq_contrato_principal || ',';
					end if;
					
					if (regras_contrato_w[i](.nr_seq_pagador IS NOT NULL AND .nr_seq_pagador::text <> '')) then
						regras_pagador_w := regras_pagador_w || regras_contrato_w[i].nr_seq_pagador || ',';
					end if;
					
					if (regras_contrato_w[i](.nr_seq_classif_itens IS NOT NULL AND .nr_seq_classif_itens::text <> '')) then
						regras_classif_itens_pag_w := regras_classif_itens_pag_w || regras_contrato_w[i].nr_seq_classif_itens || ',';
					end if;
				end if;
				end;
			end loop;
		end if;

		regras_contrato_w.delete;
		open regras_titular;
		fetch regras_titular bulk collect into regras_titular_w;
		close regras_titular;

		if (regras_titular_w.count > 0) then
			for i in regras_titular_w.first .. regras_titular_w.last loop
				begin
				if (regras_titular_w[i].ie_regra_excecao = 'S') then
					if (regras_titular_w[i](.ie_preco_produto IS NOT NULL AND .ie_preco_produto::text <> '')) then
						sql_base_w := sql_base_w || ' and d.ie_preco <> ''' || regras_titular_w[i].ie_preco_produto || '''';
					end if;

					if (regras_titular_w[i](.ie_regulamentacao IS NOT NULL AND .ie_regulamentacao::text <> '')) then
						sql_base_w := sql_base_w || ' and d.ie_regulamentacao <> ''' || regras_titular_w[i].ie_regulamentacao || '''';
					end if;

					if (regras_titular_w[i](.ie_acomodacao_padrao IS NOT NULL AND .ie_acomodacao_padrao::text <> '')) then
						if (regras_titular_w[i].ie_acomodacao_padrao = 'T') then
							sql_base_w := sql_base_w || ' and 1 = 2';
						elsif (regras_titular_w[i].ie_acomodacao_padrao <> 'N') then
							sql_base_w := sql_base_w || ' and d.ie_acomodacao <> ''' || regras_titular_w[i].ie_acomodacao_padrao || '''';
						end if;
					end if;

					if (regras_titular_w[i](.nr_seq_produto IS NOT NULL AND .nr_seq_produto::text <> '')) then
						sql_base_w := sql_base_w || ' and d.nr_sequencia <> '|| regras_titular_w[i].nr_seq_produto;
					end if;

					if (regras_titular_w[i].ie_tipo_pessoa_pagador = 'PJ') then
						sql_base_w := sql_base_w || 'and f.cd_cgc is null ';
					elsif (regras_titular_w[i].ie_tipo_pessoa_pagador = 'PF') then
						sql_base_w := sql_base_w || 'and f.cd_pessoa_fisica is null ';
					end if;

					if (regras_titular_w[i](.nr_seq_forma_cobranca IS NOT NULL AND .nr_seq_forma_cobranca::text <> '')) then
						if (current_setting('pls_ame_pck.ie_data_origem_mensalidade_w')::varchar(1) = 'C') then
							sql_base_w := sql_base_w ||	'and		exists(	select	1															' ||
											'			from	pls_segurado			x,											' ||
											'				pls_mensalidade_segurado	y,											' ||
											'				pls_mensalidade			z											' ||
											'			where	x.nr_sequencia	= y.nr_seq_segurado											' ||
											'			and	z.nr_sequencia	= y.nr_seq_mensalidade											' ||
											'			and	x.nr_sequencia  = b.nr_sequencia											' ||
											'			and	z.nr_seq_forma_cobranca <> ' || regras_titular_w[i].nr_seq_forma_cobranca ||
											'			and	z.dt_referencia	= ''' || current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade || ''')							';
						elsif (current_setting('pls_ame_pck.ie_data_origem_mensalidade_w')::varchar(1) = 'V') then
							sql_base_w := sql_base_w ||	'and		exists(	select	1															' ||
											'			from	pls_segurado			x,											' ||
											'				pls_mensalidade_segurado	y,											' ||
											'				pls_mensalidade			z											' ||
											'			where	x.nr_sequencia	= y.nr_seq_segurado											' ||
											'			and	z.nr_sequencia	= y.nr_seq_mensalidade											' ||
											'			and	x.nr_sequencia  = b.nr_sequencia											' ||
											'			and	z.nr_seq_forma_cobranca <> ' || regras_titular_w[i].nr_seq_forma_cobranca ||
											'			and	trunc(z.dt_vencimento, ''mm'') = ''' || current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade || ''')					';
						end if;
					end if;
					
					if (regras_titular_w[i](.cd_matricula_estipulante IS NOT NULL AND .cd_matricula_estipulante::text <> '')) then
						sql_base_w := sql_base_w || ' and (b.cd_matricula_estipulante <> ' || regras_titular_w[i].cd_matricula_estipulante || ' or b.cd_matricula_estipulante is null) ';
					end if;
				elsif (regras_titular_w[i].ie_regra_excecao = 'N') then
					if (regras_titular_w[i](.ie_preco_produto IS NOT NULL AND .ie_preco_produto::text <> '')) then
						regras_preco_produto_w := regras_preco_produto_w || '''' || regras_titular_w[i].ie_preco_produto || ''',';
					end if;

					if (regras_titular_w[i](.ie_regulamentacao IS NOT NULL AND .ie_regulamentacao::text <> '')) then
						regras_regulamentacao_w := regras_regulamentacao_w || '''' || regras_titular_w[i].ie_regulamentacao || ''',';
					end if;

					if (regras_titular_w[i](.ie_acomodacao_padrao IS NOT NULL AND .ie_acomodacao_padrao::text <> '')) then
						if (regras_titular_w[i].ie_acomodacao_padrao = 'N') then
							sql_base_w := sql_base_w || ' and 1 = 2';
						elsif (regras_titular_w[i].ie_acomodacao_padrao <> 'T') then
							regras_acomodacao_w := regras_acomodacao_w || '''' || regras_titular_w[i].ie_acomodacao_padrao || ''',';
						end if;
					end if;

					if (regras_titular_w[i](.nr_seq_produto IS NOT NULL AND .nr_seq_produto::text <> '')) then
						regras_nr_seq_plano_w := regras_nr_seq_plano_w || regras_titular_w[i].nr_seq_produto || ',';
					end if;

					if (regras_titular_w[i].ie_tipo_pessoa_pagador = 'PJ') then
						sql_base_w := sql_base_w || 'and f.cd_cgc is not null ';
					elsif (regras_titular_w[i].ie_tipo_pessoa_pagador = 'PF') then
						sql_base_w := sql_base_w || 'and f.cd_pessoa_fisica is not null ';
					end if;

					if (regras_titular_w[i](.nr_seq_forma_cobranca IS NOT NULL AND .nr_seq_forma_cobranca::text <> '')) then
						if (current_setting('pls_ame_pck.ie_data_origem_mensalidade_w')::varchar(1) = 'C') then
							sql_base_w := sql_base_w || 	'and	exists	(	select	1															' ||
											'			from	pls_segurado		x,	 											' ||
											'				pls_mensalidade_segurado	y,											' ||
											'				pls_mensalidade			z											' ||
											'			where	x.nr_sequencia	= y.nr_seq_segurado											' ||
											'			and	z.nr_sequencia	= y.nr_seq_mensalidade											' ||
											'			and	x.nr_sequencia  = b.nr_sequencia											' ||
											'			and	z.nr_seq_forma_cobranca = ' || regras_titular_w[i].nr_seq_forma_cobranca ||
											'			and	z.dt_referencia	= ''' || current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade || ''' )							';
						elsif (current_setting('pls_ame_pck.ie_data_origem_mensalidade_w')::varchar(1) = 'V') then
							sql_base_w := sql_base_w || 	'and	exists	(	select	1															' ||
											'			from	pls_segurado		x,	 											' ||
											'				pls_mensalidade_segurado	y,											' ||
											'				pls_mensalidade			z											' ||
											'			where	x.nr_sequencia	= y.nr_seq_segurado											' ||
											'			and	z.nr_sequencia	= y.nr_seq_mensalidade											' ||
											'			and	x.nr_sequencia  = b.nr_sequencia											' ||
											'			and	z.nr_seq_forma_cobranca = ' || regras_titular_w[i].nr_seq_forma_cobranca ||
											'			and	trunc(z.dt_vencimento, ''mm'') = ''' || current_setting('pls_ame_pck.dados_lote_remessa_w')::pls_ame_lote_remessa%rowtype.dt_ref_mensalidade || ''')					';
						end if;
					end if;

					if (regras_titular_w[i](.cd_matricula_estipulante IS NOT NULL AND .cd_matricula_estipulante::text <> '')) then
						sql_base_w := sql_base_w || ' and b.cd_matricula_estipulante  = ' || regras_titular_w[i].cd_matricula_estipulante;
					end if;
				end if;
				end;
			end loop;
		end if;

		if (regras_contrato_ww IS NOT NULL AND regras_contrato_ww::text <> '') then
			sql_base_w := sql_base_w || ' and c.nr_sequencia in (' || substr(regras_contrato_ww,1,length(regras_contrato_ww) - 1) || ')';
		end if;

		if (regras_contrato_principal_w IS NOT NULL AND regras_contrato_principal_w::text <> '') then
			sql_base_w := sql_base_w ||  ' and c.nr_contrato_principal in (' || substr(regras_contrato_principal_w,1,length(regras_contrato_principal_w) - 1) || ')';
		end if;

		if (regras_classif_itens_pag_w IS NOT NULL AND regras_classif_itens_pag_w::text <> '') then
			sql_base_w := sql_base_w || ' and f.nr_seq_classif_itens in (' || substr(regras_classif_itens_pag_w,1,length(regras_classif_itens_pag_w) - 1) || ') ';
		end if;
		
		if (regras_pagador_w IS NOT NULL AND regras_pagador_w::text <> '') then
			sql_base_w := sql_base_w || ' and f.nr_sequencia in (' || substr(regras_pagador_w,1,length(regras_pagador_w) - 1) || ') ';
		end if;
		
		if (regras_preco_produto_w IS NOT NULL AND regras_preco_produto_w::text <> '') then
			sql_base_w := sql_base_w || ' and d.ie_preco in(' || substr(regras_preco_produto_w,1,length(regras_preco_produto_w) - 1) || ')';
		end if;

		if (regras_regulamentacao_w IS NOT NULL AND regras_regulamentacao_w::text <> '') then
			sql_base_w := sql_base_w || ' and d.ie_regulamentacao in(' || substr(regras_regulamentacao_w,1,length(regras_regulamentacao_w) - 1) || ')';
		end if;

		if (regras_acomodacao_w IS NOT NULL AND regras_acomodacao_w::text <> '') then
			sql_base_w := sql_base_w || ' and d.ie_acomodacao in(' || substr(regras_acomodacao_w,1,length(regras_acomodacao_w) - 1) || ')';
		end if;

		if (regras_nr_seq_plano_w IS NOT NULL AND regras_nr_seq_plano_w::text <> '') then
			sql_base_w := sql_base_w || ' and d.nr_sequencia in(' || substr(regras_nr_seq_plano_w,1,length(regras_nr_seq_plano_w) - 1) || ')';
		end if;

		if (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_liberacao_debito,'N') = 'S') then
			sql_base_w	:= sql_base_w||' group by b.nr_sequencia, a.dt_rescisao ';
		elsif (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_origem_informacao, '1') = '2') then
			sql_base_w := sql_base_w || ' group by nvl(b.nr_seq_titular, b.nr_sequencia) ';
		end if;

		sql_base_ww := sql_base_ww || sql_base_w;
		
	end loop;

	if (sql_base_ww IS NOT NULL AND sql_base_ww::text <> '') then
		open retorno_segurados_mens_w for EXECUTE sql_base_ww;
		fetch retorno_segurados_mens_w bulk collect into segurados_mensalidade_w;
		close retorno_segurados_mens_w;

		if (segurados_mensalidade_w.count > 0) then
			select	nr_seq_regra_ger_arquivo
			into STRICT	nr_seq_regra_ger_arquivo_w
			from	pls_ame_lote_rem_arquivo
			where	nr_sequencia	= nr_seq_lote_rem_arq_p;

			for i in segurados_mensalidade_w.first .. segurados_mensalidade_w.last loop
				begin
	
				if (coalesce(qt_max_titular_p,0) > 0) then
					qt_titulares_arquivo_w	:= qt_titulares_arquivo_w + 1;

					if	((qt_max_titular_p = qt_titulares_arquivo_w and nr_seq_lote_rem_arq_p <> nr_seq_lote_rem_arq_w) or
						 (qt_max_titular_p = (qt_titulares_arquivo_w - 1) and nr_seq_lote_rem_arq_p = nr_seq_lote_rem_arq_w)) then

						select	nextval('pls_ame_lote_rem_arquivo_seq')
						into STRICT	nr_seq_lote_rem_arq_w
						;

						indice_arquivos_w	:= indice_arquivos_w + 1;

						if 	((nr_seq_lote_rem_arq_w -1) = nr_seq_lote_rem_arq_p) then
							update	pls_ame_lote_rem_arquivo
							set	nm_arquivo	= pls_ame_pck.retorna_nome_arquivo_ajustado(nm_arquivo, 1, ie_nm_arquivo_div_p)
							where	nr_sequencia	= nr_seq_lote_rem_arq_p;
						end if;

						insert into pls_ame_lote_rem_arquivo(	nr_sequencia, dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
											nr_seq_lote_rem_dest,nm_arquivo,vl_total,
											nr_seq_regra_ger_arquivo,dt_inicio_geracao)
									values (	nr_seq_lote_rem_arq_w,clock_timestamp(),get_nm_usuario,clock_timestamp(),get_nm_usuario,
											nr_seq_lote_rem_dest_w,pls_ame_pck.retorna_nome_arquivo_ajustado(nm_arquivo_w, indice_arquivos_w, ie_nm_arquivo_div_p),0,
											nr_seq_regra_ger_arquivo_w,clock_timestamp());

						select	count(1)
						into STRICT	current_setting('pls_ame_pck.qt_registros_w')::bigint
						from	pls_ame_lote_rem_arquivo
						where	nr_sequencia	= nr_seq_lote_rem_arq_w	 - 1;

						if (current_setting('pls_ame_pck.qt_registros_w')::bigint	> 0) then
							update	pls_ame_lote_rem_arquivo
							set	dt_fim_geracao	= clock_timestamp()
							where	nr_sequencia	= nr_seq_lote_rem_arq_w	 - 1;
						end if;

						qt_titulares_arquivo_w	:= 0;
					end if;
				end if;

				nr_seq_titular_w	:= segurados_mensalidade_w[i].nr_seq_segurado;

				select	coalesce(a.nr_seq_titular,a.nr_sequencia)
				into STRICT	nr_seq_titular_w
				from	pls_segurado a
				where	a.nr_sequencia = nr_seq_titular_w;

				select	count(1)
				into STRICT	qt_titulares_lote_w
				from	pls_ame_lote_rem_valor
				where	nr_seq_lote_rem_arq	= nr_seq_lote_rem_arq_w
				and	nr_seq_segurado		= nr_seq_titular_w;

				select	count(1)
				into STRICT	qt_benef_mens_w
				from	pls_mensalidade_segurado a
				where	a.nr_sequencia = segurados_mensalidade_w[i].nr_seq_mensalidade_segurado
				and	a.nr_seq_segurado <> nr_seq_titular_w;

				if (qt_titulares_lote_w >= 0) or (qt_benef_mens_w > 0) or (segurados_mensalidade_w[i].ie_devolucao_mens = 'S') then
					if (qt_titulares_lote_w = 0) then
						select	nextval('pls_ame_lote_rem_valor_seq')
						into STRICT	nr_seq_lote_rem_valor_w
						;

						insert into pls_ame_lote_rem_valor(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
								nr_seq_lote_rem_arq,nr_seq_segurado,nr_seq_mensalidade_seg,qt_dependente,vl_total,
								dt_rescisao_lib_deb)
						values (	nr_seq_lote_rem_valor_w,clock_timestamp(),get_nm_usuario,clock_timestamp(),get_nm_usuario,
								nr_seq_lote_rem_arq_w,nr_seq_titular_w,segurados_mensalidade_w[i].nr_seq_mensalidade_segurado,segurados_mensalidade_w[i].qt_dependente,0,
								segurados_mensalidade_w[i].dt_rescisao);
					else
						select	nr_sequencia
						into STRICT	nr_seq_lote_rem_valor_w
						from	pls_ame_lote_rem_valor
						where	nr_seq_lote_rem_arq	= nr_seq_lote_rem_arq_w
						and	nr_seq_segurado		= nr_seq_titular_w;
					end if;

					if (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_liberacao_debito,'N') = 'N') or (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_origem_informacao, '1') = '2') then
						gerar_detalhe_beneficiario(nr_seq_regra_ger_arq_p, nr_seq_lote_rem_valor_w, segurados_mensalidade_w[i].nr_seq_mensalidade_segurado, segurados_mensalidade_w[i].nr_seq_segurado, coalesce(segurados_mensalidade_w[i].ie_devolucao_mens, 'N'), cd_cgc_estipulante_p);
					else
						CALL pls_ame_pck.incluir_benef_lib_debito(nr_seq_regra_ger_arq_p,nr_seq_titular_w,nr_seq_lote_rem_valor_w);
					end if;

					qt_valor_w	:= 0;
					qt_registros_dep_w	:= 0;

					for r_c01_w in current_setting('pls_ame_pck.c01')::CURSOR((	coalesce(segurados_mensalidade_w[i].ie_devolucao_mens, 'N')) loop
						select	count(1)
						into STRICT	qt_titulares_lote_w
						from	pls_ame_lote_rem_valor
						where	nr_seq_lote_rem_arq	= r_c01_w.nr_seq_lote_rem_arq
						and	nr_seq_segurado		= r_c01_w.nr_seq_segurado;

						qt_registros_dep_w	:= qt_registros_dep_w + 1;

						if (qt_titulares_lote_w = 0) then
							select	nextval('pls_ame_lote_rem_valor_seq')
							into STRICT	nr_seq_lote_rem_valor_dep_w
							;

							insert into pls_ame_lote_rem_valor(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
									nr_seq_lote_rem_arq,nr_seq_segurado,nr_seq_mensalidade_seg,nr_seq_titular,vl_total,
									dt_rescisao_lib_deb)
							values (	nr_seq_lote_rem_valor_dep_w,clock_timestamp(),get_nm_usuario,clock_timestamp(),get_nm_usuario,
									r_c01_w.nr_seq_lote_rem_arq,r_c01_w.nr_seq_segurado,r_c01_w.nr_seq_mensalidade_seg,r_c01_w.nr_seq_titular,0,
									segurados_mensalidade_w[i].dt_rescisao);
						else
							select	max(nr_sequencia)
							into STRICT	nr_seq_lote_rem_valor_dep_w
							from	pls_ame_lote_rem_valor
							where	nr_seq_lote_rem_arq	= r_c01_w.nr_seq_lote_rem_arq
							and	nr_seq_segurado		= r_c01_w.nr_seq_segurado;
						end if;

						if (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_liberacao_debito,'N') = 'N') then
							if (coalesce(segurados_mensalidade_w[i].ie_devolucao_mens, 'N') = 'S') or (coalesce(current_setting('pls_ame_pck.dados_regra_geracao_lote_rem_w')::pls_ame_regra_geracao%rowtype.ie_origem_informacao, '1') = '2') then
								gerar_detalhe_beneficiario(nr_seq_regra_ger_arq_p, nr_seq_lote_rem_valor_dep_w, r_c01_w.nr_seq_mensalidade_seg, r_c01_w.nr_seq_segurado, coalesce(segurados_mensalidade_w[i].ie_devolucao_mens, 'N'), cd_cgc_estipulante_p);
							else
								gerar_detalhe_beneficiario(nr_seq_regra_ger_arq_p, nr_seq_lote_rem_valor_dep_w, r_c01_w.nr_seq_mensalidade_seg, null, coalesce(segurados_mensalidade_w[i].ie_devolucao_mens, 'N'), cd_cgc_estipulante_p);
							end if;
						else
							CALL pls_ame_pck.incluir_benef_lib_debito(nr_seq_regra_ger_arq_p,r_c01_w.nr_seq_segurado,nr_seq_lote_rem_valor_dep_w);
						end if;

						select	count(1)
						into STRICT	qt_valor_det_w
						from	pls_ame_lote_rem_valor_det
						where	nr_seq_lote_rem_valor	= nr_seq_lote_rem_valor_dep_w;

						if (qt_valor_det_w = 0) then
							delete	FROM pls_ame_lote_rem_valor
							where	nr_sequencia = nr_seq_lote_rem_valor_dep_w;
							qt_valor_w	:= qt_valor_w + 1;
						end if;
					end loop;

					select	count(1)
					into STRICT	qt_valor_det_w
					from	pls_ame_lote_rem_valor_det
					where	nr_seq_lote_rem_valor	= nr_seq_lote_rem_valor_w;

					select	count(1)
					into STRICT	qt_dep_tit_w
					from   	pls_ame_lote_rem_valor_det a,
						pls_ame_lote_rem_valor b
					where  	b.nr_sequencia = a.nr_seq_lote_rem_valor
					and	b.nr_seq_lote_rem_arq = nr_seq_lote_rem_arq_p
					and	nr_seq_titular = nr_seq_titular_w;

					if (qt_valor_det_w = 0) then
						if 	(((qt_registros_dep_w = 0) or (qt_registros_dep_w <> 0 and
							qt_registros_dep_w = qt_valor_w)) and (qt_dep_tit_w = 0)) then

							delete	FROM pls_ame_lote_rem_valor
							where	nr_sequencia = nr_seq_lote_rem_valor_w;
						end if;
					end if;
				end if;
				end;
			end loop;
		end if;
		segurados_mensalidade_w.delete;
		if (nr_seq_lote_rem_valor_w IS NOT NULL AND nr_seq_lote_rem_valor_w::text <> '') then
			update	pls_ame_lote_rem_arquivo
			set	dt_fim_geracao	= clock_timestamp()
			where	nr_sequencia	= nr_seq_lote_rem_arq_w	 - 1
			and	coalesce(dt_fim_geracao::text, '') = '';
		end if;
	end if;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ame_pck.gerar_beneficiarios_arquivo ( nr_seq_regra_ger_arq_p pls_ame_regra_ger_arq.nr_sequencia%type, nr_seq_lote_rem_arq_p pls_ame_lote_rem_arquivo.nr_sequencia%type, cd_cgc_estipulante_p pessoa_juridica.cd_cgc%type, qt_max_titular_p pls_ame_regra_ger_arq.qt_max_titular%type, ie_nm_arquivo_div_p pls_ame_regra_ger_arq.ie_nm_arquivo_div%type) FROM PUBLIC;
