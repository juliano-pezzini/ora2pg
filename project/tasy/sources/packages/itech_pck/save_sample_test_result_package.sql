-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE itech_pck.save_sample_test_result () AS $body$
DECLARE

	ie_reading_w    boolean := true;
	ds_files_w      varchar(4000);
	ds_file_line_w  varchar(32000);
	ds_file_line_wW  varchar(32000);
	ds_report_classification_w varchar(1);
	dt_collection_date_time_w timestamp;
	ds_request_classification_w  varchar(1);
	ds_order_number_w varchar(15);
	ds_dialysis_classif_w varchar(1);
	ds_material_code_w  varchar(3);
	ds_test_items_count_w varchar(5);
	ds_determination_flag_w varchar(1);
	ds_test_item_code_w EXAME_LABORATORIO.CD_EXAME_INTEGRACAO%type;
	ds_test_material_code_w varchar(4000);
	ds_result_w varchar(4000);
	ds_abnormal_value_classif_w varchar(1);
	ds_file_w varchar(255);
	ds_log_w varchar(4000);
	nr_item_count_w smallint;
	counter smallint;
	ds_erro_w  varchar(32767) := ' ';
	nr_atendimento_w bigint;
	ds_resultado_w varchar(4000) :=  null;
	ie_formato_resultado_w varchar(20);
	nm_exame_w varchar(255);
	ds_unidade_medida_w varchar(15);
	nr_ref_min_value_w double precision;
	nr_ref_max_value_w double precision;
	nr_seq_result_w bigint;
	nr_seq_result_pdf_w bigint;
	nr_prescricao_w bigint;
	nr_prescricao_ww bigint;
	nr_seq_interno_w bigint;
	nr_seq_prescr_w integer;
	event_index_code_w  integer;
	event_data_code_w  integer;
	event_data_ok_code_w  integer;
	event_index_ok_code_w  integer;
	event_data_error_code_w integer;
	current_setting('itech_pck.event_index_error_code_w')::varchar(5) integer;
	event_log_code_w integer;
	cd_comment_ext_w varchar(4000) := null;
	ie_report_classif_w varchar(3) := null;
    nr_report_classif_w bigint;
    nr_patient_mrn_w    bigint;
    cd_pessoa_fisica_w  bigint;
	nr_req_classif_w	smallint;
	nm_usuario_p		varchar(50);
	ds_horarios_w		varchar(50);
	is_urgent_w			varchar(10);
	nr_compl_seq_w      bigint;
	is_pat_prof_w    	varchar(1);
	cd_professional_w 	varchar(10);
	cd_external_presc_w varchar(15);
    is_item_present_w   varchar(1);
    is_lab_item_upd_w   varchar(1);
    ds_item_erro_w      varchar(32767) := ' ';
    ie_status_w			integration_call_log.ie_status%type;
    ie_message_type_w	integration_call_log.ie_message_type%type := 'R';
	current_setting('itech_pck.nr_seq_evento_int_w')::integration_call_log.nr_seq_evento_int%type integration_call_log.nr_seq_evento_int%type	:=	null;
    current_setting('itech_pck.log_sequence_number_w')::integration_message_log.nr_seq_int_call_log%type integration_message_log.nr_seq_int_call_log%type := 0;
    nr_com_seq_w        cpoe_std_comment.nr_sequencia%type;
    ds_other_comment_w  varchar(100);
    nr_seq_proc_cpoe_w  prescr_procedimento.nr_seq_proc_cpoe%type;
    nr_seq_prescr_ww    prescr_procedimento.nr_sequencia%type;
    ds_res_com_w        varchar(100);
    nr_seq_proc_cpoe_ww prescr_procedimento.nr_seq_proc_cpoe%type;
    is_adic_pres_w      varchar(1);
    is_com_exist_w      varchar(1);
    nr_cond_w           integer := 2;
    cpoe_proced_seq_w   cpoe_procedimento.nr_sequencia%type;
    nr_order_seq_w      cpoe_order_unit.nr_sequencia%type;

	c09 CURSOR FOR
		SELECT *
		from table(lista_pck.obter_lista_char(ds_files_w,','));

	
BEGIN

    select  itech_pck.get_directory_event_code('22')
    into STRICT  current_setting('itech_pck.cd_integartion_event_w')::philips_json
;

    event_index_code_w := current_setting('itech_pck.cd_integartion_event_w')::philips_json.get['cd_event_index'].value_of();
    event_data_code_w := current_setting('itech_pck.cd_integartion_event_w')::philips_json.get['cd_event_data'].value_of();
    event_data_ok_code_w := current_setting('itech_pck.cd_integartion_event_w')::philips_json.get['cd_event_data_ok'].value_of();
    event_index_ok_code_w := current_setting('itech_pck.cd_integartion_event_w')::philips_json.get['cd_event_index_ok'].value_of();
    event_data_error_code_w := current_setting('itech_pck.cd_integartion_event_w')::philips_json.get['cd_event_data_error'].value_of();
    PERFORM set_config('itech_pck.event_index_error_code_w', current_setting('itech_pck.cd_integartion_event_w')::philips_json.get['cd_event_index_error'].value_of(), false);
    event_log_code_w := current_setting('itech_pck.cd_integartion_event_w')::philips_json.get['cd_event_log'].value_of();

    begin
    ds_files_w	:= file_list_pck.list(itech_pck.get_file_path(event_index_code_w),'.dat');
    exception when others then
    ds_erro_w := ds_erro_w||' Error occurred while extracting files from directory ' || sqlerrm;
    end;

    for r_c09 in c09
    loop
        ds_file_w := r_c09.cd_registro;
		if (ds_file_w like 'HBIAB22%') then
        begin
			ds_file_line_w := null;
			CALL pls_utl_file_pck.nova_leitura(event_data_code_w, ds_file_w); --read the file
			while(ie_reading_w and ds_file_w like 'HBIAB22%')
			loop --for each row of the file
				SELECT * FROM pls_utl_file_pck.ler(ds_file_line_ww, ie_reading_w) INTO STRICT ds_file_line_ww, ie_reading_w;
				if (ie_reading_w) then
					ds_file_line_w := ds_file_line_w || ds_file_line_ww ||  chr(13) || chr(10);
				end if;
			end loop;
            select encode(ds_file_line_w::bytea, 'hex')::bytea
            into STRICT ds_file_line_w
;
			nr_item_count_w := (utl_i18n.raw_to_char(utl_raw.substr(ds_file_line_w,426,5), 'JA16SJIS'))::numeric;
			cd_external_presc_w := trim(both utl_i18n.raw_to_char(utl_raw.substr(ds_file_line_w,332,15),'JA16SJIS'));
			dt_collection_date_time_w := to_date(trim(both utl_i18n.raw_to_char(utl_raw.substr(ds_file_line_w,317,14), 'JA16SJIS')), 'YYYYmmDDHH24miSS');
			nr_req_classif_w := (utl_i18n.raw_to_char(utl_raw.substr(ds_file_line_w,331,1), 'JA16SJIS'))::numeric;
			nr_seq_interno_w := (utl_i18n.raw_to_char(utl_raw.substr(ds_file_line_w,97,10), 'JA16SJIS'))::numeric;
			nr_report_classif_w := (utl_i18n.raw_to_char(utl_raw.substr(ds_file_line_w,316,1), 'JA16SJIS'))::numeric;
			nr_patient_mrn_w := (utl_i18n.raw_to_char(utl_raw.substr(ds_file_line_w,221,10), 'JA16SJIS'))::numeric;
			ds_horarios_w := to_char(dt_collection_date_time_w, 'hh24:mm');
            ds_res_com_w  := trim(both utl_i18n.raw_to_char(utl_raw.substr(ds_file_line_w,381,40),'JA16SJIS'));

            select coalesce(max(cd_pessoa_fisica), 0)
			into STRICT   cd_pessoa_fisica_w
			from   pessoa_fisica
			where  nr_prontuario = nr_patient_mrn_w;


			if cd_pessoa_fisica_w <> 0 then

				select  coalesce(max(nr_prescricao), 0)
				into STRICT    nr_prescricao_w
				from    prescr_medica
				where   nr_controle_lab = cd_external_presc_w;

                if nr_prescricao_w = 0 then
                    select coalesce(max(nr_sequencia), 0)
                    into STRICT   nr_order_seq_w
                    from   cpoe_order_unit
                    where  nr_order_unit = cd_external_presc_w;

                    select coalesce(max(nr_sequencia), 0)
                    into STRICT   cpoe_proced_seq_w
                    from   cpoe_procedimento
                    where  nr_seq_cpoe_order_unit = nr_order_seq_w;

                    select coalesce(max(nr_prescricao), 0)
                    into STRICT   nr_prescricao_w
                    from   prescr_procedimento
                    where  nr_seq_proc_cpoe = cpoe_proced_seq_w;
                end if;

                if nr_req_classif_w = 1 and nr_prescricao_w = 0 then
                    select	nextval('prescr_medica_seq')
                    into STRICT	nr_prescricao_ww
;
                    nr_cond_w := 1;
                end if;

            if  nr_prescricao_w <> 0 and nr_atendimento_w <> 0 then

				select   coalesce(max(nr_atendimento), 0)
				into STRICT     nr_atendimento_w
				from     prescr_medica
				where    nr_prescricao = nr_prescricao_w;

				select	coalesce(max(nr_seq_proc_compl), 0)
				into STRICT    nr_compl_seq_w
				from    prescr_procedimento
				where   nr_prescricao = nr_prescricao_w
				and 	nr_seq_interno = nr_seq_interno_w;

				if nr_report_classif_w = 0 and nr_compl_seq_w <> 0 then

					update prescr_procedimento_compl
					set  ie_status_report = '5'
					where nr_sequencia = nr_compl_seq_w;

				elsif nr_report_classif_w = 1 and nr_compl_seq_w <> 0 then

					update  prescr_procedimento_compl
					set  	ie_status_report = '4'
					where 	nr_sequencia = nr_compl_seq_w;

				elsif nr_report_classif_w = 2 and nr_compl_seq_w <> 0 then

					update prescr_procedimento_compl
					set  ie_status_report = '6'
					where nr_sequencia = nr_compl_seq_w;

				end if;
            end if;
				for counter in 0 .. (nr_item_count_w - 1)
					loop
						begin
						select  utl_i18n.raw_to_char(utl_raw.substr(ds_file_line_w,633 + (49 * counter),7), 'JA16SJIS') test_item_code,
								utl_i18n.raw_to_char(utl_raw.substr(ds_file_line_w,640 + (49 * counter),3), 'JA16SJIS') test_material_code,
								trim(utl_i18n.raw_to_char(utl_raw.substr(ds_file_line_w,648 + (49 * counter),8),'JA16SJIS')) result,
								trim(utl_i18n.raw_to_char(utl_raw.substr(ds_file_line_w,656 + (49 * counter),3), 'JA16SJIS')) comment_code,
                                trim(utl_i18n.raw_to_char(utl_raw.substr(ds_file_line_w,659 + (49 * counter),20), 'JA16SJIS')) other_comments
                        into STRICT  	ds_test_item_code_w,
								ds_test_material_code_w,
								ds_result_w,
								cd_comment_ext_w,
                                ds_other_comment_w
						;
						exception
						when others then
						ds_erro_w := ds_erro_w ||'Error occurred while retriving test result. ' || sqlerrm;
						end;
						ds_test_item_code_w := trim(both ds_test_item_code_w);
						select CASE WHEN count(*)=1 THEN 'S'  ELSE 'N' END
						into STRICT   is_item_present_w
						from   exame_laboratorio el
						where   coalesce(el.cd_exame_integracao, el.cd_exame) = ds_test_item_code_w;
					if is_item_present_w = 'S' then
					begin
                        if nr_cond_w = 1 then

                            select	max(nr_atendimento)
                            into STRICT	nr_atendimento_w
                            from	atendimento_paciente
                            where	cd_pessoa_fisica = cd_pessoa_fisica_w;

                            if (wheb_usuario_pck.get_nm_usuario IS NOT NULL AND wheb_usuario_pck.get_nm_usuario::text <> '') then
                                nm_usuario_p := wheb_usuario_pck.get_nm_usuario;
                            else
                                nm_usuario_p := 'itech';
                            end if;
                            jpn_insert_dummy_proced_data(nr_atendimento_w, null, clock_timestamp(),ds_test_item_code_w, null, null, null, nm_usuario_p, nr_prescricao_ww, nr_seq_prescr_ww, null, ds_horarios_w, ds_res_com_w, cd_external_presc_w);
                            nr_prescricao_w := nr_prescricao_ww;
                            nr_seq_prescr_w := nr_seq_prescr_ww;
                            select nr_seq_interno,
                                   nr_seq_proc_cpoe
                            into STRICT   nr_seq_interno_w,
                                   nr_seq_proc_cpoe_w
                            from   prescr_procedimento
                            where  nr_prescricao = nr_prescricao_w
                            and    nr_sequencia = nr_seq_prescr_w;

                        begin
                        select  coalesce(max(nr_sequencia), 0)
                        into STRICT    nr_com_seq_w
                        from    cpoe_std_comment
                        where   cd_external = cd_comment_ext_w
                        and     ie_situacao = 'A';
                        if  nr_com_seq_w <> 0 then
                            insert into cpoe_comment_linkage(
                                        nr_sequencia,
                                        dt_atualizacao,
                                        nm_usuario,
                                        dt_atualizacao_nrec,
                                        nr_seq_std_comment,
                                        nr_seq_cpoe_material_tmp,
                                        nr_seq_cpoe_proced_tmp,
                                        nr_seq_cpoe_nutricao_tmp,
                                        nr_seq_cpoe_recomend_tmp,
                                        nr_seq_cpoe_dialise_tmp,
                                        nr_seq_cpoe_anat_pat_tmp,
                                        nr_seq_cpoe_gasoterapia_tmp,
                                        nr_seq_cpoe_hemoterapia_tmp,
                                        nr_seq_cpoe_just_item_tmp,
                                        nr_seq_cpoe_just_inter_tmp,
                                        si_validation_type,
                                        nr_seq_cpoe_order_unit_tmp,
                                        nr_seq_cpoe_rp_tmp,
                                        ie_tipo_item_just,
                                        ds_additional_text,
                                        nr_seq_cpoe_proced
                                    ) VALUES (
                                        nextval('cpoe_comment_linkage_seq'),
                                        clock_timestamp(),
                                        'ITECH',
                                        clock_timestamp(),
                                        nr_com_seq_w,
                                        null,
                                        null,
                                        null,
                                        null,
                                        null,
                                        null,
                                        null,
                                        null,
                                        null,
                                        null,
                                        null,
                                        null,
                                        null,
                                        null,
                                        ds_other_comment_w,
                                        nr_seq_proc_cpoe_w
                                    );
                            commit;
                        end if;
						exception
						when others then
						ds_erro_w := ds_erro_w ||'Error occurred while linking comment. ' || sqlerrm;
                        end;
                        elsif nr_cond_w = 2  then

                            select coalesce(max(nr_atendimento), 0)
                            into STRICT   nr_atendimento_w
                            from   prescr_medica
                            where  nr_prescricao = nr_prescricao_w;

                            if (wheb_usuario_pck.get_nm_usuario IS NOT NULL AND wheb_usuario_pck.get_nm_usuario::text <> '') then
                                nm_usuario_p := wheb_usuario_pck.get_nm_usuario;
                            else
                                nm_usuario_p := 'itech';
                            end if;

                            if nr_atendimento_w <> 0 then
                                select coalesce(max(nr_sequencia),0),
                                       coalesce(max(nr_seq_proc_cpoe), 0)
                                into STRICT   nr_seq_prescr_w,
                                       nr_seq_proc_cpoe_ww
                                from   prescr_procedimento
                                where  nr_seq_exame = (SELECT coalesce(max(nr_seq_exame), 0)
                                                       from   exame_laboratorio
                                                       where  coalesce(cd_exame_integracao, cd_exame) = ds_test_item_code_w)
                                and    nr_prescricao = nr_prescricao_w;
                            end if;

                            select  CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
                            into STRICT    is_adic_pres_w
                            from    prescr_proced_inf_adic
                            where   nr_prescricao = nr_prescricao_w
                            and     ie_situacao = 'A';

                            if is_adic_pres_w = 'N' then
                                insert into prescr_proced_inf_adic(nr_sequencia,
                                                                     dt_atualizacao,
                                                                     nm_usuario,
                                                                     dt_atualizacao_nrec,
                                                                     nm_usuario_nrec,
                                                                     dt_registro,
                                                                     nr_prescricao,
                                                                     ds_informacao,
                                                                     cd_pessoa_fisica,
                                                                     ie_situacao,
                                                                     dt_liberacao,
                                                                     nr_seq_laudo,
                                                                     ie_achado_critico)
                                                    values ( nextval('prescr_proced_inf_adic_seq'),
                                                            clock_timestamp(),
                                                            'ITECH',
                                                            clock_timestamp(),
                                                            'ITECH',
                                                            clock_timestamp(),
                                                            nr_prescricao_w,
                                                            ds_res_com_w,
                                                            cd_pessoa_fisica_w,
                                                            'A',
                                                            clock_timestamp(),
                                                            null,
                                                            null
                                                            );
                        elsif is_adic_pres_w = 'S' then
                            update prescr_proced_inf_adic
                            set    ds_informacao = ds_res_com_w,
                                   dt_liberacao = clock_timestamp(),
                                   dt_atualizacao = clock_timestamp()
                            where  nr_prescricao = nr_prescricao_w;
                        end if;
                        begin
                        select  coalesce(max(nr_sequencia), 0)
                        into STRICT    nr_com_seq_w
                        from    cpoe_std_comment
                        where   cd_external = cd_comment_ext_w
                        and     ie_situacao = 'A';

                        select  CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
                        into STRICT    is_com_exist_w
                        from    cpoe_comment_linkage
                        where   nr_seq_cpoe_proced = nr_seq_proc_cpoe_ww;

                        if  nr_com_seq_w <> 0 and is_com_exist_w = 'N' then
                            insert into cpoe_comment_linkage(
                                        nr_sequencia,
                                        dt_atualizacao,
                                        nm_usuario,
                                        dt_atualizacao_nrec,
                                        nr_seq_std_comment,
                                        nr_seq_cpoe_material_tmp,
                                        nr_seq_cpoe_proced_tmp,
                                        nr_seq_cpoe_nutricao_tmp,
                                        nr_seq_cpoe_recomend_tmp,
                                        nr_seq_cpoe_dialise_tmp,
                                        nr_seq_cpoe_anat_pat_tmp,
                                        nr_seq_cpoe_gasoterapia_tmp,
                                        nr_seq_cpoe_hemoterapia_tmp,
                                        nr_seq_cpoe_just_item_tmp,
                                        nr_seq_cpoe_just_inter_tmp,
                                        si_validation_type,
                                        nr_seq_cpoe_order_unit_tmp,
                                        nr_seq_cpoe_rp_tmp,
                                        ie_tipo_item_just,
                                        ds_additional_text,
                                        nr_seq_cpoe_proced
                                    ) values (
                                        nextval('cpoe_comment_linkage_seq'),
                                        clock_timestamp(),
                                        'ITECH',
                                        clock_timestamp(),
                                        nr_com_seq_w,
                                        null,
                                        null,
                                        null,
                                        null,
                                        null,
                                        null,
                                        null,
                                        null,
                                        null,
                                        null,
                                        null,
                                        null,
                                        null,
                                        null,
                                        ds_other_comment_w,
                                        nr_seq_proc_cpoe_ww
                                    );
                        elsif nr_com_seq_w <> 0 and is_com_exist_w = 'S' then
                            update cpoe_comment_linkage
                            set    dt_atualizacao = clock_timestamp(),
                                   ds_additional_text = ds_other_comment_w
                            where  nr_seq_cpoe_proced = nr_seq_proc_cpoe_ww;
                        end if;
						exception
						when others then
						ds_erro_w := ds_erro_w ||'Error occurred while linking comment. ' || sqlerrm;
                        end;
						end if;
						begin
							select  nm_exame,
									coalesce(ds_unidade_medida, ' '),
									coalesce(lab_obter_valor_referencia(nr_prescricao_w, null, nr_seq_exame, 1), null),
									coalesce(lab_obter_valor_referencia(nr_prescricao_w, null, nr_seq_exame, 2), null)
							into STRICT    nm_exame_w,
									ds_unidade_medida_w,
									nr_ref_min_value_w,
									nr_ref_max_value_w
							from    exame_laboratorio el
							where   coalesce(el.cd_exame_integracao, el.cd_exame) = ds_test_item_code_w;
						exception when others then
							ds_unidade_medida_w := ' ';
							nr_ref_min_value_w := null;
							nr_ref_max_value_w := null;
						end;
						ds_resultado_w := ds_resultado_w || chr(32) ||  nm_exame_w || chr(32) || ds_result_w || chr(32) ||  ds_unidade_medida_w  || chr(32) ||  nr_ref_min_value_w || chr(32) || chr(116) || chr(111) || chr(32) || nr_ref_max_value_w;
                        bft_insert_lab_result_item(nr_prescricao_w,  nr_seq_prescr_w, ds_test_item_code_w, ds_result_w, 'itech', dt_collection_date_time_w, null, null, dt_collection_date_time_w, ds_erro_w, null, nr_atendimento_w, cd_comment_ext_w, null);
                    exception
					when others then
						ds_erro_w := ds_erro_w ||' Error occurred while inserting lab test result. ' || nr_prescricao_w || ds_test_item_code_w || sqlerrm;
					end;
                    begin
                        bft_insert_result_laboratorio(nr_atendimento_w, nr_prescricao_w, nr_seq_prescr_w, 1,  ds_resultado_w, null, null,  'itech', nr_seq_result_w, nr_seq_result_pdf_w, dt_collection_date_time_w, null);
                    exception
                    when others then
                        ds_erro_w := ds_erro_w ||' Error occurred while inserting test result. ' || sqlerrm;
                    end;
					begin
						select CASE WHEN max(ie_master_type)='ID' THEN  'I' WHEN max(ie_master_type)='BT' THEN  'B'  ELSE 'N' END
						into STRICT  is_pat_prof_w
						from  jpn_lab_test_master
						where cd_test_item = ds_test_item_code_w;

					if is_pat_prof_w = 'I' then
						CALL itech_pck.update_infection_profile(ds_test_item_code_w, cd_pessoa_fisica_w, cd_pessoa_fisica_w, ds_result_w, dt_collection_date_time_w);
					elsif is_pat_prof_w = 'B' then
						CALL itech_pck.update_blood_results(ds_result_w, ds_test_item_code_w, cd_pessoa_fisica_w, dt_collection_date_time_w);
					end if;
					exception
					when others then
						ds_erro_w := ds_erro_w||' Error occurred while updating patient profile ' || sqlerrm;
					end;
                elsif is_item_present_w = 'N' then
                    ds_item_erro_w := ds_item_erro_w || 'The item code ' || ds_test_item_code_w || 'is not present or duplicated in TASY';
				end if;
                cd_comment_ext_w := null;
                ds_other_comment_w := null;
				end loop;
			else
				ds_erro_w := ds_erro_w ||' Error occurred the patient is not registered with TASY' || sqlerrm;
			end if;
            exception when others then
                ds_erro_w := ds_erro_w ||'Error occurred while processing the file ' || sqlerrm;
            end;

            if ds_item_erro_w <> ' ' then
                ds_erro_w := ds_erro_w || ds_item_erro_w;
            end if;
			if (coalesce(ds_erro_w::text, '') = '') then
				CALL pls_utl_file_pck.copiar_arquivo(event_data_code_w,ds_file_w,event_data_ok_code_w,ds_file_w,1,6);
				CALL pls_utl_file_pck.copiar_arquivo(event_index_code_w,ds_file_w,event_index_ok_code_w,ds_file_w,1,6);
                PERFORM set_config('itech_pck.ds_log_message_w', 'File Name = '||ds_file_w||', '|| 'Interface Message Code = '||'22'||', '|| 'Date of Transmission = '||to_char(clock_timestamp(),'dd/mm/yyyy')||', '|| 'Time of Transmission = '||to_char(clock_timestamp(),'hh24:mi:ss')||', '|| 'Own System Code = '||'AB'||', '|| 'Counterpart System code = '||'BI'||', '|| 'Log Message = information updated successfully', false);
                ie_status_w := 'S';
			else
				CALL pls_utl_file_pck.copiar_arquivo(event_data_code_w,ds_file_w,event_data_error_code_w,ds_file_w,1,6);
				CALL pls_utl_file_pck.copiar_arquivo(event_index_code_w,ds_file_w,current_setting('itech_pck.event_index_error_code_w')::varchar(5),ds_file_w,1,6);
				PERFORM set_config('itech_pck.ds_log_message_w', 'File Name = '||ds_file_w||', '|| 'Interface Message Code = '||'22'||', '|| 'Date of Transmission = '||to_char(clock_timestamp(),'dd/mm/yyyy')||', '|| 'Time of Transmission = '||to_char(clock_timestamp(),'hh24:mi:ss')||', '|| 'Own System Code = '||'AB'||', '|| 'Counterpart System code = '||'BI'||', '|| 'Log Message = ERROR, ' || ds_erro_w, false);
                ie_status_w := 'E';
			end if;
			CALL CALL itech_pck.save_log(event_log_code_w, current_setting('itech_pck.log_file_name_ww')::varchar(255), current_setting('itech_pck.ds_log_message_w')::varchar(32767));
			CALL pls_utl_file_pck.excluir_arquivo(event_data_code_w,ds_file_w);
			CALL pls_utl_file_pck.excluir_arquivo(event_index_code_w,ds_file_w);
			record_integration_call_log('ITECH', 'ITECH', clock_timestamp(), 'Sample Test Result Information', 'Sample Test Result Information' , ie_status_w, ie_message_type_w , null, 'Integration Performed Successfully', current_setting('itech_pck.ds_log_message_w')::varchar(32767), 'Sample Test Result Information', ds_file_w, current_setting('itech_pck.log_sequence_number_w')::integration_message_log.nr_seq_int_call_log%type, cd_external_presc_w, current_setting('itech_pck.nr_seq_evento_int_w')::integration_call_log.nr_seq_evento_int%type);
			ie_reading_w := true;
	end if;
	end loop;
	commit;
  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE itech_pck.save_sample_test_result () FROM PUBLIC;
