-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE itech_pck.save_arrival_confirmation () AS $body$
DECLARE


    ie_reading_w         boolean := true;
    ds_file_line_w       varchar(32000);
    ds_file_line_ww      varchar(32000);
    date_of_collection_w timestamp;
    time_of_collection_w varchar(6);
    request_number_w     varchar(15);
    date_of_reception_w  varchar(8);
    time_of_reception_w  varchar(6);
    order_number_w       varchar(15);
    ds_file_w            varchar(255);
    ds_erro_w            varchar(4000);
    ds_files_w           varchar(4000);
    ie_status_w					integration_call_log.ie_status%type;
    ie_message_type_w		integration_call_log.ie_message_type%type := 'R';
    event_index_code_w  integer;
    event_data_code_w  integer;
    event_data_ok_code_w  integer;
    event_index_ok_code_w  integer;
    event_data_error_code_w integer;
    current_setting('itech_pck.event_index_error_code_w')::varchar(5) integer;
    event_log_code_w integer;
    file_like_w varchar(20) :='HBIAB21';
    current_setting('itech_pck.nr_seq_evento_int_w')::integration_call_log.nr_seq_evento_int%type integration_call_log.nr_seq_evento_int%type	:=	null;
    current_setting('itech_pck.log_sequence_number_w')::integration_message_log.nr_seq_int_call_log%type integration_message_log.nr_seq_int_call_log%type := 0;
    nr_seq_interno_w prescr_procedimento.nr_seq_interno%type;
    nr_prescricao_w prescr_medica.nr_prescricao%type;
    nr_processing_class_w   varchar(1) := '1';
    nr_seq_proc_compl_w prescr_procedimento.nr_seq_proc_compl%type;
    qt_exams_requested_w    integer:=0;
    qt_exams_partially_w    integer:=0;
    qt_exam_w   integer:=0;
    qt_not_received_w   integer:=0;
    qt_received_w   integer:=0;

    c09 CURSOR FOR
      SELECT *
      from table(lista_pck.obter_lista_char(ds_files_w,','));

BEGIN

    select  itech_pck.get_directory_event_code('21')
    into STRICT  current_setting('itech_pck.cd_integartion_event_w')::philips_json
;

    event_index_code_w := current_setting('itech_pck.cd_integartion_event_w')::philips_json.get['cd_event_index'].value_of();
    event_data_code_w := current_setting('itech_pck.cd_integartion_event_w')::philips_json.get['cd_event_data'].value_of();
    event_data_ok_code_w := current_setting('itech_pck.cd_integartion_event_w')::philips_json.get['cd_event_data_ok'].value_of();
    event_index_ok_code_w := current_setting('itech_pck.cd_integartion_event_w')::philips_json.get['cd_event_index_ok'].value_of();
    event_data_error_code_w := current_setting('itech_pck.cd_integartion_event_w')::philips_json.get['cd_event_data_error'].value_of();
    PERFORM set_config('itech_pck.event_index_error_code_w', current_setting('itech_pck.cd_integartion_event_w')::philips_json.get['cd_event_index_error'].value_of(), false);
    event_log_code_w := current_setting('itech_pck.cd_integartion_event_w')::philips_json.get['cd_event_log'].value_of();
    ds_files_w	:= file_list_pck.list(itech_pck.get_file_path(event_index_code_w),'.dat');

	for r_c09 in c09
    loop
		begin
			ds_file_w      := r_c09.cd_registro;
			if (ds_file_w like file_like_w||'%') then
				ds_file_line_w := null;
				ds_erro_w := null;
				CALL pls_utl_file_pck.nova_leitura(event_data_code_w, ds_file_w);
				while(ie_reading_w)
				loop
					SELECT * FROM pls_utl_file_pck.ler( ds_file_line_ww, ie_reading_w) INTO STRICT  ds_file_line_ww, ie_reading_w;
					if (ie_reading_w) then
					  ds_file_line_w := ds_file_line_w || ds_file_line_ww || chr(13) || chr(10);
					end if;
				end loop;
			
				select  encode(ds_file_line_w::bytea, 'hex')::bytea
				into STRICT    ds_file_line_w
				;
			
				begin
			
					select  utl_i18n.raw_to_char(utl_raw.substr(ds_file_line_w,29,1), 'JA16SJIS') processing_classification,
							to_date(to_char(utl_i18n.raw_to_char(utl_raw.substr(ds_file_line_w,316,14), 'JA16SJIS')),'YYYYMMDDHH24MISS') date_of_collection,
							utl_i18n.raw_to_char(utl_raw.substr(ds_file_line_w,324,6), 'JA16SJIS') time_of_collection,
							trim(both utl_i18n.raw_to_char(utl_raw.substr(ds_file_line_w,330,15), 'JA16SJIS')) request_number,
							utl_i18n.raw_to_char(utl_raw.substr(ds_file_line_w,345,8), 'JA16SJIS') date_of_reception,
							utl_i18n.raw_to_char(utl_raw.substr(ds_file_line_w,353,6), 'JA16SJIS') time_of_reception,
							trim(both utl_i18n.raw_to_char(utl_raw.substr(ds_file_line_w,359,15), 'JA16SJIS')) order_number
					into STRICT    nr_processing_class_w,
							date_of_collection_w,
							time_of_collection_w,
							request_number_w,
							date_of_reception_w,
							time_of_reception_w,
							order_number_w
					;
					
				exception
				when others then
					ds_erro_w := sqlerrm||' Error occurred while retriving arrival confirmation. ';
				end;
				
				begin
					select  a.nr_prescricao,
							b.nr_seq_interno
					into STRICT    nr_prescricao_w,
							nr_seq_interno_w
					from    prescr_medica a,
							prescr_procedimento b
					where   a.nr_prescricao = b.nr_prescricao
					and     b.nr_seq_lab_ext = request_number_w;

					select  coalesce(max(nr_seq_proc_compl),0)
					into STRICT    nr_seq_proc_compl_w
					from    prescr_procedimento
					where   nr_seq_interno = nr_seq_interno_w;

					if (nr_processing_class_w = '1') then

						update prescr_procedimento
						set dt_coleta      = date_of_collection_w,
						  ie_amostra       = 'S',
						  nm_usuario       = 'ITECH',
						  dt_atualizacao   = clock_timestamp(),
						  ie_status_atend  = 20
						where coalesce(dt_coleta::text, '') = ''
						and nr_seq_interno = nr_seq_interno_w;

						update prescr_procedimento_compl
						set    ie_status_report = 2
						where  nr_sequencia = nr_seq_proc_compl_w;

						select  max(qt_exams_requested),
								max(qt_exams_partially)
						into STRICT    qt_exams_requested_w,
								qt_exams_partially_w
						from (
						SELECT  count(*) qt_exams_requested,
								null qt_exams_partially
						from    prescr_procedimento_compl a,
								prescr_procedimento b
						where   b.nr_prescricao = nr_prescricao_w
						and     b.nr_seq_proc_compl = a.nr_sequencia
						
union all

						SELECT  null,
								count(*)
						from    prescr_procedimento_compl a,
								prescr_procedimento b
						where   b.nr_prescricao = nr_prescricao_w
						and     b.nr_seq_proc_compl = a.nr_sequencia
						and     a.ie_status_report = 2) alias4;

						if (qt_exams_partially_w = qt_exams_requested_w) then
							update prescr_procedimento_compl
							set    ie_status_report = 3
							where  nr_sequencia in (SELECT x.nr_seq_proc_compl from prescr_procedimento x where x.nr_prescricao = nr_prescricao_w);
						end if;
					else

						update prescr_procedimento
						set dt_coleta       = NULL,
						  ie_amostra       = 'N',
						  nm_usuario       = 'ITECH',
						  dt_atualizacao   = clock_timestamp(),
						  ie_status_atend  = 10
						where (dt_coleta IS NOT NULL AND dt_coleta::text <> '')
						and nr_seq_interno = nr_seq_interno_w;

						select  max(qt_exam),
								max(qt_not_received),
								max(qt_received)
						into STRICT    qt_exam_w,
								qt_not_received_w,
								qt_received_w
						from (
						SELECT  count(*) qt_exam, -- total exam count
								null qt_not_received,
								null qt_received
						from    prescr_procedimento a
						where   a.nr_prescricao = nr_prescricao_w
						and     coalesce(a.ie_suspenso,'N') = 'N'
						and     (a.nr_seq_exame IS NOT NULL AND a.nr_seq_exame::text <> '')
						
union all

						SELECT  null,
								count(*), -- not delivered
								null        
						from    prescr_procedimento a
						where   a.nr_prescricao = nr_prescricao_w 
						and     coalesce(a.ie_suspenso,'N') = 'N'
						and     (a.nr_seq_exame IS NOT NULL AND a.nr_seq_exame::text <> '')
						and     a.ie_amostra = 'N'
						
union all

						select  null,
								null,
								count(*) -- delivered
						from    prescr_procedimento a
						where   a.nr_prescricao = nr_prescricao_w 
						and     coalesce(a.ie_suspenso,'N') = 'N'
						and     (a.nr_seq_exame IS NOT NULL AND a.nr_seq_exame::text <> '')
						and     a.ie_amostra = 'S') alias12;

						if (qt_exam_w = qt_received_w) then
							ie_status_w := 3;
						elsif (qt_exam_w = qt_not_received_w) then
							ie_status_w := 1;
						else
							ie_status_w := 2;
						end if;

						update prescr_procedimento_compl
						set    ie_status_report = ie_status_w
						where  nr_sequencia in (SELECT x.nr_seq_proc_compl from prescr_procedimento x where x.nr_prescricao = nr_prescricao_w);

					end if;

					commit;
				exception
				when others then
					ds_erro_w := ds_erro_w||' '||sqlerrm||' Error occurred while updating arrival confirmation. ';
				end;
				
				if (coalesce(ds_erro_w::text, '') = '') then
					CALL jpn_utl_file_pck.copy_file(event_data_code_w,ds_file_w,event_data_ok_code_w,ds_file_w,1,6);
					CALL jpn_utl_file_pck.copy_file(event_index_code_w,ds_file_w,event_index_ok_code_w,ds_file_w,1,6);
					PERFORM set_config('itech_pck.ds_log_message_w', 'Log Message = Successfully processed and moved the file'||', '|| 'Request Number = '||request_number_w||', '||'File Name = '||ds_file_w||', '|| 'Time of Transmission = '||to_char(clock_timestamp(),'hh24:mi:ss'), false);
					ie_status_w := 'S';
				else
					CALL jpn_utl_file_pck.copy_file(event_data_code_w,ds_file_w,event_data_error_code_w,ds_file_w,1,6);
					CALL jpn_utl_file_pck.copy_file(event_index_code_w,ds_file_w,current_setting('itech_pck.event_index_error_code_w')::varchar(5),ds_file_w,1,6);
					PERFORM set_config('itech_pck.ds_log_message_w', 'Log Message = '||ds_erro_w||', '|| 'Request Number = '||request_number_w||', '||'File Name = '||ds_file_w||', '|| 'Time of Transmission = '||to_char(clock_timestamp(),'hh24:mi:ss'), false);
					ie_status_w := 'E';
				end if;
				
				CALL jpn_utl_file_pck.delete_file(event_data_code_w,ds_file_w);
				CALL jpn_utl_file_pck.delete_file(event_index_code_w,ds_file_w);
				CALL CALL itech_pck.save_log(event_log_code_w, current_setting('itech_pck.log_file_name_w')::varchar(255), current_setting('itech_pck.ds_log_message_w')::varchar(32767));
				record_integration_call_log('ITECH', 'ITECH', clock_timestamp(), 'Arrival Confirmation Information', 'Arrival Confirmation Information' , ie_status_w, ie_message_type_w, null, current_setting('itech_pck.ds_log_message_w')::varchar(32767), current_setting('itech_pck.ds_log_message_w')::varchar(32767), 'Arrival Confirmation Information', ds_file_w, current_setting('itech_pck.log_sequence_number_w')::integration_message_log.nr_seq_int_call_log%type , request_number_w, current_setting('itech_pck.nr_seq_evento_int_w')::integration_call_log.nr_seq_evento_int%type);
			end if;
        end;
	end loop;
  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE itech_pck.save_arrival_confirmation () FROM PUBLIC;
