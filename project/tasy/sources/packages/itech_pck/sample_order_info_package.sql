-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

  
	-- sample order information starts here
CREATE OR REPLACE PROCEDURE itech_pck.sample_order_info ( cd_classif_p text, cd_pessoa_fisica_p text, nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_interno_p bigint, file_name_p text default null, log_sequence_number_p text default 0, nm_usuario_p text DEFAULT NULL) AS $body$
DECLARE

    filename_w                   varchar(255);
    current_setting('itech_pck.filename_sequence_w')::int_serial_number.nr_serial%type          varchar(255);
	nr_sequencia_w 				 bigint;
	is_record_compl_exis_w  	 varchar(10);
    is_inf_rec_w                 varchar(1);
    nr_order_w                   cpoe_order_unit.nr_order_unit%type;
    nr_seq_proc_cpoe_w           prescr_procedimento.nr_seq_proc_cpoe%type;
    nr_order_unit_seq_w          cpoe_procedimento.nr_seq_cpoe_order_unit%type;
	ds_req_dis_name_w            cid_doenca.ds_doenca_cid%type;
	nr_prontuario_w              pessoa_fisica.nr_prontuario%type;

    c05 CURSOR FOR
      SELECT a.abo_system,
        a.rh_system,
        CASE WHEN coalesce(a.abo_system::text, '') = '' THEN  '0'  ELSE '1' END  blood_type_flag
      from bft_patient_v a
      where patient_id = cd_pessoa_fisica_p  LIMIT 1;

    c06 CURSOR FOR
	SELECT 	a.infection_records infection_records,
            a.infection_group infection_group,
            a.infection_code infection_code,
            to_char(a.date_of_infection , 'YYYYMMDD') date_of_infection,
            a.infection_name infection_name,
            a.current_status  current_status
    from    (
                SELECT  count(*) over () infection_records,
                            a.cd_tipo_infeccao infection_group,
                            a.cd_doenca infection_code,
                            coalesce(a.dt_exame, a.dt_registro) date_of_infection,
                            obter_desc_cid_doenca(a.cd_doenca) infection_name,
                            case
                                when(coalesce(dt_fim::text, '') = '' and a.ie_nega_infeccao  <> 'S') then '+'
                                when ((a.dt_fim IS NOT NULL AND a.dt_fim::text <> '') and (clock_timestamp()  <  a.dt_fim) and a.ie_nega_infeccao  <> 'S') then '-'
                                when(coalesce(a.ie_nega_infeccao, 'N') = 'S') then ' '
                            end  current_status
                from    	historico_infeccao a
                left outer join tipo_infeccao b
                on  	    a.cd_tipo_infeccao = b.nr_sequencia
                where	coalesce(a.dt_inativacao::text, '') = ''
                and     (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
                and     a.cd_pessoa_fisica = cd_pessoa_fisica_p
            ) a;

    c07 CURSOR FOR
      SELECT obter_sinal_vital(a.encounter_id, 'ALTURA') patient_height,
        obter_sinal_vital(a.encounter_id, 'PESO') patient_weight,
        CASE WHEN obter_inf_saude_mulher(a.encounter_id, 'P')='N' THEN  '0' WHEN obter_inf_saude_mulher(a.encounter_id, 'P')='S' THEN  '2' END  patient_pregnant_flag,
        CASE WHEN obter_inf_saude_mulher(a.encounter_id, 'PW')='N' THEN  ' '  ELSE obter_inf_saude_mulher(a.encounter_id, 'PW') END  patient_pregnant_week
      from bft_encounter_v a
      where  a.encounter_id  = nr_atendimento_p;
	
	c08 CURSOR FOR
	  SELECT
       c.dt_liberacao	date_of_collection,
       c.dt_liberacao 	time_of_collection,
       nr_order_w 		order_number,
	   ds_req_dis_name_w requested_disease_name,
       ' ' test_purpose, --unused
       ' ' report_dest_code, --unused
       obter_valor_dominio(136, c.ie_motivo_prescricao) order_comment1,
       obter_valor_dominio(136, c.ie_motivo_prescricao) order_comment2,
       CASE WHEN b.ie_urgencia='S' THEN  1 WHEN b.ie_urgencia='N' THEN  0 END  order_urgency_classif,
       b.cd_intervalo dialysis_classif,
       b.cd_material_exame order_material_code,
       ' ' test_material_comment, -- unused
       ' ' urine_classification, -- unused
       ' ' urine_output, -- unused
       ' ' specific_information  -- unused
	  from prescr_medica c,
		   prescr_procedimento b
	  where c.nr_prescricao = b.nr_prescricao
	  and 	c.nr_prescricao = nr_prescricao_p
	  and 	b.nr_seq_interno = nr_seq_interno_p;
	-- Sample information and test items are yet to be created
	c09 CURSOR FOR
		SELECT 	'00001' sample_record_count,
			'00001'	label_number,
			'0526000200100' request_number,
			'001' collection_code,
			' '	  target_division_code,
			'00'  dose_number,
			'00'  dose_container_seq,
			' ' dose_condition,
			'0' sample_urgency_classif,
			'001' container_code,
			'480' test_material_code,
			'0'	  cancellation_flag
		;
	-- Sample information are yet to be created
	c10 CURSOR FOR
    SELECT  count(*) over () test_record_count,
            CASE WHEN a.ie_urgencia='N' THEN  0 WHEN a.ie_urgencia='S' THEN  1 END  urgency_flag,
            coalesce(f.cd_exame_integracao, f.cd_exame) test_item_code,
            '01' label_number
    from    prescr_procedimento a,
            proc_interno_integracao b,
            proc_interno c,
            procedimento d,
            cpoe_procedimento e,
            exame_laboratorio f
    where     a.nr_prescricao  = nr_prescricao_p
    and       c.nr_sequencia = a.nr_seq_proc_interno
    and       coalesce(b.nr_seq_proc_interno,a.nr_seq_proc_interno) = a.nr_seq_proc_interno
    and       c.cd_procedimento = d.cd_procedimento
    and       c.ie_origem_proced = d.ie_origem_proced
    and       a.nr_seq_exame = f.nr_seq_exame
    and       (c.nr_seq_exame_lab IS NOT NULL AND c.nr_seq_exame_lab::text <> '')
    and       coalesce(b.cd_estabelecimento,coalesce(wheb_usuario_pck.get_cd_estabelecimento,0)) = coalesce(wheb_usuario_pck.get_cd_estabelecimento,0)
    and       coalesce(b.cd_tipo_procedimento,coalesce( d.cd_tipo_procedimento,0)) = coalesce(d.cd_tipo_procedimento,0)
    and       b.nr_seq_sistema_integ = 231
    and       (a.nr_seq_exame IS NOT NULL AND a.nr_seq_exame::text <> '')
    and       e.nr_sequencia = a.nr_seq_proc_cpoe;
	-- Sample test items are yet to be created
	r_count c06%rowtype;
    r_countt c10%rowtype;
	
BEGIN

    PERFORM set_config('itech_pck.log_sequence_number_w', log_sequence_number_p, false);
    PERFORM set_config('itech_pck.ds_line_w', null, false);
    filename_w := null;

    select  nr_prontuario
    into STRICT    nr_prontuario_w
    from    pessoa_fisica
    where   cd_pessoa_fisica = cd_pessoa_fisica_p;

	select  itech_pck.get_directory_event_code('1E')
    into STRICT  current_setting('itech_pck.cd_integartion_event_w')::philips_json
;

    PERFORM set_config('itech_pck.control_code_w', current_setting('itech_pck.cd_integartion_event_w')::philips_json.get['control_code'].value_of(), false);
    PERFORM set_config('itech_pck.log_code_w', current_setting('itech_pck.cd_integartion_event_w')::philips_json.get['cd_event_log'].value_of(), false);
    PERFORM set_config('itech_pck.nr_seq_evento_int_w', current_setting('itech_pck.cd_integartion_event_w')::philips_json.get['integration_event_code'].value_of(), false);
    PERFORM set_config('itech_pck.event_index_error_code_w', current_setting('itech_pck.cd_integartion_event_w')::philips_json.get['cd_event_index_error'].value_of(), false);
    if (log_sequence_number_p > 0) then
      begin
        CALL CALL itech_pck.delete_error_file( file_name_p, current_setting('itech_pck.cd_integartion_event_w')::philips_json.get['cd_event_data_error'].value_of(), current_setting('itech_pck.cd_integartion_event_w')::philips_json.get['cd_event_index_error'].value_of(), current_setting('itech_pck.log_code_w')::varchar(5));
      exception
      when others then
		PERFORM set_config('itech_pck.ds_log_message_w', 'Error occured while deleting the file from error folder  for'
                            || 'Sample Order information'
                            || '.'
                            || current_setting('itech_pck.ds_line_w')::varchar(32767)
                            || 'ITECH - Sample Order information'
                            || current_setting('itech_pck.ds_line_w')::varchar(32767)
                            || 'Time of faliure : '
                            || clock_timestamp()
                            || current_setting('itech_pck.ds_line_w')::varchar(32767)
                            || 'Prescription Number'
                            || nr_prescricao_p
                            || current_setting('itech_pck.ds_line_w')::varchar(32767)
                            || 'file Name'
                            || file_name_p, false);

          record_integration_call_log(nm_usuario_p, nm_usuario_p, clock_timestamp(), 'ITECH', 'Sample Order information',
          'E', 'E', null, 'Error occured while deleting the file from error folder', null,
          current_setting('itech_pck.ds_log_message_w')::varchar(32767), file_name_p, current_setting('itech_pck.log_sequence_number_w')::integration_message_log.nr_seq_int_call_log%type, nr_prescricao_p, current_setting('itech_pck.nr_seq_evento_int_w')::integration_call_log.nr_seq_evento_int%type);
      end;
    end if;

    begin

    select coalesce(max(nr_seq_proc_cpoe), 0)
    into STRICT   nr_seq_proc_cpoe_w
    from   prescr_procedimento
    where  nr_prescricao = nr_prescricao_p
    and    nr_seq_interno = nr_seq_interno_p;

    select  coalesce(max(nr_seq_cpoe_order_unit), 0)
    into STRICT    nr_order_unit_seq_w
    from    cpoe_procedimento
    where   nr_sequencia = nr_seq_proc_cpoe_w;

    select  coalesce(max(nr_order_unit), 0)
    into STRICT    nr_order_w
    from    cpoe_order_unit
    where   nr_sequencia = nr_order_unit_seq_w;
	
    select  coalesce(max(obter_desc_cid_doenca(cd_doenca_cid)), ' ')
    into STRICT    ds_req_dis_name_w
    from    proc_interno_doenca
    where   nr_seq_proc_cpoe = nr_seq_proc_cpoe_w;


    CALL itech_pck.itech_common_header(cd_classif_p, '1E', nr_prescricao_p, nr_atendimento_p,  nr_seq_interno_p, nr_order_w);

    --Append additional patient information
    for r_c05 in c05
    loop
      begin
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c05.abo_system,2,'R');
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c05.rh_system,1,'L');
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c05.blood_type_flag,1,'L');
      end;
    end loop;

    select CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END 
    into STRICT   is_inf_rec_w
    from   historico_infeccao a
    left outer join tipo_infeccao b
    on      a.cd_tipo_infeccao = b.nr_sequencia
    where	coalesce(a.dt_inativacao::text, '') = ''
    and     (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
    and     a.cd_pessoa_fisica = cd_pessoa_fisica_p;

    if is_inf_rec_w = 'N' then
	    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text('00000',5,'L','0');
    else
	open c06;
    fetch c06 into r_count;
    if (c06%NOTFOUND) then
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(0, 5, 'L', '0'); -- ALG_NUM
    else
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_count.infection_records, 5, 'L', '0'); -- ALG_NUM
    end if;
    close c06;
    --Append infection record information
    for r_c06 in c06
    loop
      begin
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c06.infection_group,4,'R',' ');
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c06.infection_code,4,'R',' ');
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c06.date_of_infection,8,'R', ' ');
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c06.infection_name,20,'R',' ');
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c06.current_status,1,'R', ' ');
      end;
    end loop;
    end if;

    --Append additional patient information 2
    for r_c07 in c07
    loop
      begin
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(replace(to_char(r_c07.patient_height), ',', '.'),8,'R',' ');
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(replace(to_char(r_c07.patient_weight),',', '.'),8,'R',' ');
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c07.patient_pregnant_flag,1,'R',' ');
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c07.patient_pregnant_week,2,'R',' ');
      end;
    end loop;
	for r_c08 in c08
    loop
      begin
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(to_char(r_c08.date_of_collection, 'YYYYMMDD'),8,'R',' ');
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(to_char(r_c08.time_of_collection, 'HH24MISS'),6,'R',' ');
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c08.order_number,15,'R',' ');
		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c08.requested_disease_name,60, 'R',' ');
		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c08.test_purpose,60,'R',' ');
		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c08.report_dest_code,4,'R',' ');
		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c08.order_comment1,40,'R',' ');
		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c08.order_comment2,40,'R',' ');
		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c08.order_urgency_classif,1,'R',' ');
		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c08.dialysis_classif,1,'R','0');
		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c08.order_material_code,3,'R',' ');
		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c08.test_material_comment,30,'R',' ');
		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c08.urine_classification,1,'R',' ');
		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c08.urine_output,8,'R',' ');
		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c08.specific_information,50,'R',' ');
      end;
    end loop;
	
	for r_c09 in c09
    loop
	  begin
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c09.sample_record_count,5,'L','0');
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c09.label_number,5,'R',' ');
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c09.request_number,15,'R',' ');
		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c09.collection_code,3, 'R',' ');
		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c09.target_division_code,3,'R',' ');
		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c09.dose_number,2,'R',' ');
		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c09.dose_container_seq,2,'R',' ');
		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c09.dose_condition,16,'R',' ');
		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c09.sample_urgency_classif,1,'R',' ');
		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c09.container_code,3,'R',' ');
		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c09.test_material_code,3,'R',' ');
		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c09.cancellation_flag,1,'R',' ');
      end;
    end loop;
	
	open c10;
    fetch c10 into r_countt;
    if (c10%NOTFOUND) then
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(0, 5, 'L', '0'); -- ALG_NUM
    else
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_countt.test_record_count, 5, 'L', '0'); -- ALG_NUM
    end if;
    close c10;
    --Append infection record information
    for r_c10 in c10
    loop
      begin
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c10.urgency_flag,1,'R',' ');
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c10.test_item_code,7,'R',' ');
		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(r_c10.label_number,2, 'R',' ');	
      end;
    end loop;

    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(chr(13) || chr(10),2, 'R',' ');

    if (file_name_p IS NOT NULL AND file_name_p::text <> '') then
        filename_w := file_name_p;
    else
        generate_int_serial_number(nr_prescricao_p, current_setting('itech_pck.control_code_w')::varchar(5), 1, nm_usuario_p, current_setting('itech_pck.filename_sequence_w')::int_serial_number.nr_serial%type, current_setting('itech_pck.nr_seq_evento_int_w')::integration_call_log.nr_seq_evento_int%type);
        filename_w := 'HABBI'||current_setting('itech_pck.control_code_w')::varchar(5)||to_char(clock_timestamp(),'YYYYMMDD')||to_char(clock_timestamp(),'HH24MISS')||lpad(to_char(current_setting('itech_pck.filename_sequence_w')::int_serial_number.nr_serial%type), 4, '0')||'.dat';
    end if;
    CALL CALL CALL itech_pck.generate_file(current_setting('itech_pck.cd_integartion_event_w')::philips_json.get['cd_event_data'].value_of(), filename_w, current_setting('itech_pck.ds_line_w')::varchar(32767)); --create a data file
    PERFORM set_config('itech_pck.ds_line_w', null, false);
    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL itech_pck.append_text(filename_w,length(filename_w),'L');
    CALL CALL CALL itech_pck.generate_file(current_setting('itech_pck.cd_integartion_event_w')::philips_json.get['cd_event_index'].value_of(), filename_w, current_setting('itech_pck.ds_line_w')::varchar(32767)); --create an index file
    PERFORM set_config('itech_pck.ds_log_message_w', itech_pck.get_log_message(filename_w, current_setting('itech_pck.control_code_w')::varchar(5), 'BI', nr_prontuario_w, nr_prescricao_p, nm_usuario_p), false);
    CALL CALL itech_pck.save_log(current_setting('itech_pck.log_code_w')::varchar(5), current_setting('itech_pck.log_file_name_w')::varchar(255), current_setting('itech_pck.ds_log_message_w')::varchar(32767));
    exception
    when others then
        PERFORM set_config('itech_pck.ds_log_message_w', 'Log Message = File generation failed'||', '
                            ||'Interface Message Code ='|| current_setting('itech_pck.control_code_w')::varchar(5)||', ' 
                            ||'Date of Transmission = '||to_char(clock_timestamp(),'dd/mm/yyyy')||', ' 
                            ||'Time of Transmission = '||to_char(clock_timestamp(),'hh24:mi:ss')||', ' 
                            ||'Own System Code = AB'||', ' 
                            ||'Counterpart System code = ' || 'BI' ||', '
                            ||'Patient MRN = '||to_char(nr_prontuario_w)||', ' 
                            ||'Order No = '||to_char(nr_prescricao_p)||', ' 
                            ||'User ID = '||nm_usuario_p||'' , false);

          record_integration_call_log(nm_usuario_p, nm_usuario_p, clock_timestamp(), 'japan_itech_order_info', 'Sample Order Information',
          'E', 'E', null, 'File generation failed for data and index folder', null,
          current_setting('itech_pck.ds_log_message_w')::varchar(32767), file_name_p, current_setting('itech_pck.log_sequence_number_w')::integration_message_log.nr_seq_int_call_log%type, nr_prescricao_p, current_setting('itech_pck.nr_seq_evento_int_w')::integration_call_log.nr_seq_evento_int%type);
          CALL CALL itech_pck.save_log(current_setting('itech_pck.log_code_w')::varchar(5), current_setting('itech_pck.log_file_name_w')::varchar(255), current_setting('itech_pck.ds_log_message_w')::varchar(32767));
      end;
      -- Updating Tasy Log 
      PERFORM set_config('itech_pck.ds_script_w', 'exec itech_pck.sample_order_info ('|| current_setting('itech_pck.ds_guampa_w')::varchar(10) || cd_pessoa_fisica_p ||current_setting('itech_pck.ds_guampa_w')::varchar(10) || ',' || current_setting('itech_pck.ds_guampa_w')::varchar(10) || nr_atendimento_p ||current_setting('itech_pck.ds_guampa_w')::varchar(10) ||',' ||current_setting('itech_pck.ds_guampa_w')::varchar(10) || nr_prescricao_p || current_setting('itech_pck.ds_guampa_w')::varchar(10) || ',' || current_setting('itech_pck.ds_guampa_w')::varchar(10) || nr_seq_interno_p || current_setting('itech_pck.ds_guampa_w')::varchar(10) || ',' || current_setting('itech_pck.ds_guampa_w')::varchar(10) || nm_usuario_p || current_setting('itech_pck.ds_guampa_w')::varchar(10) || ',' || current_setting('itech_pck.ds_guampa_w')::varchar(10) || ':nr_seq_int_call_log' || ');', false);
      record_integration_call_log(nm_usuario_p, nm_usuario_p, clock_timestamp(), 'japan_itech_order_info', 'Sample Order Information' ,
        'T', 'E', current_setting('itech_pck.ds_script_w')::integration_call_log.ds_resend_script%type, 'Successfully Sent the order message',
        current_setting('itech_pck.ds_log_message_w')::varchar(32767), null, filename_w, current_setting('itech_pck.log_sequence_number_w')::integration_message_log.nr_seq_int_call_log%type);

	  select CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
	  into STRICT   is_record_compl_exis_w
	  from   prescr_procedimento_compl
	  where  nr_sequencia = (SELECT nr_seq_proc_compl
							 from prescr_procedimento
							 where nr_prescricao = nr_prescricao_p
							 and nr_seq_interno = nr_seq_interno_p);

    if is_record_compl_exis_w <> 'S' then

		select nextval('prescr_procedimento_compl_seq')
		into STRICT   nr_sequencia_w
		;

        insert into prescr_procedimento_compl( nr_sequencia,
                                                dt_atualizacao,
                                                nm_usuario,
                                                dt_atualizacao_nrec,
                                                nm_usuario_nrec,
												ie_status_report)
                                    values ( nr_sequencia_w,
                                                clock_timestamp(),
                                                nm_usuario_p,
                                                clock_timestamp(),
                                                nm_usuario_p,
												'1');

            update prescr_procedimento
            set nr_seq_proc_compl = nr_sequencia_w
            where nr_prescricao = nr_prescricao_p
            and nr_seq_interno = nr_seq_interno_p;

            commit;
    end if;
	
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE itech_pck.sample_order_info ( cd_classif_p text, cd_pessoa_fisica_p text, nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_interno_p bigint, file_name_p text default null, log_sequence_number_p text default 0, nm_usuario_p text DEFAULT NULL) FROM PUBLIC;
