-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION data_model_pck.get_info ( data_model_name_p data_model.data_model_description%type, user_name_p usuario.nm_usuario%type) RETURNS SETOF T_DATA_MODEL AS $body$
DECLARE

t_data_model_row_w  t_data_model_row;
nr_seq_data_model_w data_model.nr_sequencia%type;
is_allowed_w        varchar(1);
is_allowed_sensitive_w  varchar(1);

c01 CURSOR FOR
SELECT  atribute_name,
    alias_name,
    ie_sensivel
from    data_model_columns
where   data_model_id   = nr_seq_data_model_w
order by nr_sequencia;

c01_w   c01%rowtype;


BEGIN

if (coalesce(trim(both data_model_name_p)::text, '') = '') or (coalesce(trim(both user_name_p)::text, '') = '') then
    t_data_model_row_w.info_type        := 'ACCESS';
    t_data_model_row_w.info_description := 'BAD REQUEST. DATA MODEL and USER not defined.';
    RETURN NEXT t_data_model_row_w;
else
    begin

    select  'Y',
        b.ie_sensivel,
        a.nr_sequencia,
        a.object_name
    into STRICT    is_allowed_w,
        is_allowed_sensitive_w,
        nr_seq_data_model_w,
        t_data_model_row_w.object_name
    from    data_model a,
        data_model_user b
    where   upper(a.OBJECT_NAME)    = upper(data_model_name_p)
    and a.nr_sequencia          = b.data_model_id
    and lower(b.user_name)         = lower(user_name_p)  LIMIT 1;

    exception
    when others then
        is_allowed_w        := 'N';
        is_allowed_sensitive_w  := 'N';
        nr_seq_data_model_w := null;
    end;

    if (is_allowed_w = 'N') then
        t_data_model_row_w.info_type        := 'ACCESS';
        t_data_model_row_w.info_description := 'UNAUTHORIZED';
        RETURN NEXT t_data_model_row_w;
    else
        t_data_model_row_w.data_model_name  := data_model_name_p;
        t_data_model_row_w.info_type        := 'ACCESS';
        t_data_model_row_w.info_description := 'ALLOWED';
        RETURN NEXT t_data_model_row_w;
        open C01;
        loop
        fetch C01 into
            c01_w;
        EXIT WHEN NOT FOUND; /* apply on C01 */
            begin

            if (c01_w.ie_sensivel = 'N' or is_allowed_sensitive_w = 'S') then
                t_data_model_row_w.info_type        := 'DATA_FIELD';
                t_data_model_row_w.info_description := '';
                t_data_model_row_w.atribute_name    := c01_w.atribute_name;
                t_data_model_row_w.alias        := c01_w.alias_name;
                t_data_model_row_w.is_sensitive     := c01_w.ie_sensivel;
                RETURN NEXT t_data_model_row_w;
            end if;

            end;
        end loop;
        close C01;
    end if;
end if;

end;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION data_model_pck.get_info ( data_model_name_p data_model.data_model_description%type, user_name_p usuario.nm_usuario%type) FROM PUBLIC;
