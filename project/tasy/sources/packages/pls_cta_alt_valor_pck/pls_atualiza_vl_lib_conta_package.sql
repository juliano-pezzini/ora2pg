-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- atualiza todos os valores liberados dos itens se acaso o valor calculado foi modificado
CREATE OR REPLACE PROCEDURE pls_cta_alt_valor_pck.pls_atualiza_vl_lib_conta ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


-- busca os procedimentos que tiveram altera??o no valor calculado
-- e que n?o tiveram altera??o pela fun??o de ajuste de valoriza??o
C01 CURSOR(  nr_seq_lote_pc    pls_lote_protocolo_conta.nr_sequencia%type,
    nr_seq_protocolo_pc  pls_protocolo_conta.nr_sequencia%type,
    nr_seq_lote_processo_pc  pls_cta_lote_processo.nr_sequencia%type,
    nr_seq_conta_pc    pls_conta.nr_sequencia%type) FOR
-- feito com union por motivo de performance, antes era feito em um select s? com OR e em bases grandes apresentava problemas de performance
SELECT  a.nr_seq_conta,
  a.nr_sequencia nr_seq_conta_proc,
  a.ie_valor_base,
  a.ie_glosa
from  pls_conta_proc_v a
where  a.nr_seq_lote_conta   = nr_seq_lote_pc
and  a.ie_status_conta   in ('A', 'F', 'L', 'P', 'U')
and  ((a.ie_tipo_liberacao  != 'AV') or (coalesce(a.ie_tipo_liberacao::text, '') = ''))
and  a.ie_status     in ('L', 'S')
and  a.vl_procedimento   != a.vl_calculado_ant
and  a.ie_origem_conta  != 'I'
and  (a.ie_valor_base IS NOT NULL AND a.ie_valor_base::text <> '')

union all

select  a.nr_seq_conta,
  a.nr_sequencia nr_seq_conta_proc,
  a.ie_valor_base,
  a.ie_glosa
from  pls_conta_proc_v a
where  a.nr_seq_protocolo   = nr_seq_protocolo_pc
and  a.ie_status_conta   in ('A', 'F', 'L', 'P', 'U')
and  ((a.ie_tipo_liberacao  != 'AV') or (coalesce(a.ie_tipo_liberacao::text, '') = ''))
and  a.ie_status     in ('L', 'S')
and  a.vl_procedimento   != a.vl_calculado_ant
and  a.ie_origem_conta  != 'I'
and  (a.ie_valor_base IS NOT NULL AND a.ie_valor_base::text <> '')

union all

select  a.nr_seq_conta,
  a.nr_sequencia nr_seq_conta_proc,
  a.ie_valor_base,
  a.ie_glosa
from  pls_conta_proc_v a
where  a.nr_sequencia     = nr_seq_conta_pc
and  a.ie_status_conta   in ('A', 'F', 'L', 'P', 'U')
and  ((a.ie_tipo_liberacao  != 'AV') or (coalesce(a.ie_tipo_liberacao::text, '') = ''))
and  a.ie_status     in ('L', 'S')
and  a.vl_procedimento   != a.vl_calculado_ant
and  a.ie_origem_conta  != 'I'
and  (a.ie_valor_base IS NOT NULL AND a.ie_valor_base::text <> '')

union all

select  a.nr_seq_conta,
  a.nr_sequencia nr_seq_conta_proc,
  a.ie_valor_base,
  a.ie_glosa
from  pls_conta_proc_v a
where   a.ie_status_conta   in ('A', 'F', 'L', 'P', 'U')
and  ((a.ie_tipo_liberacao  != 'AV') or (coalesce(a.ie_tipo_liberacao::text, '') = ''))
and  a.ie_status     in ('L', 'S')
and  a.vl_procedimento   != a.vl_calculado_ant
and  a.ie_origem_conta  != 'I'
and  (a.ie_valor_base IS NOT NULL AND a.ie_valor_base::text <> '')
and  exists (select  1
    from  pls_cta_lote_proc_conta p
    where  p.nr_seq_lote_processo = nr_seq_lote_processo_pc
    and  p.nr_seq_conta = a.nr_sequencia);

-- busca os materiais que tiveram altera??o no valor calculado
-- e que n?o tiveram altera??o pela fun??o de ajuste de valoriza??o
C02 CURSOR(  nr_seq_lote_pc    pls_lote_protocolo_conta.nr_sequencia%type,
    nr_seq_protocolo_pc  pls_protocolo_conta.nr_sequencia%type,
    nr_seq_lote_processo_pc  pls_cta_lote_processo.nr_sequencia%type,
    nr_seq_conta_pc    pls_conta.nr_sequencia%type) FOR
-- feito com union por motivo de performance, antes era feito em um select s? com OR e em bases grandes apresentava problemas de performance
SELECT  a.nr_seq_conta,
  a.nr_sequencia nr_seq_conta_mat,
  a.ie_valor_base,
  a.ie_glosa
from  pls_conta_mat_v a
where  a.nr_seq_lote_conta   = nr_seq_lote_pc
and  a.ie_status_conta   in ('A', 'F', 'L', 'P', 'U')
and  a.ie_status     in ('L', 'S')
and  a.vl_material     != a.vl_calculado_ant
and  a.ie_origem_conta  != 'I'
and  (a.ie_valor_base IS NOT NULL AND a.ie_valor_base::text <> '')

union all

select  a.nr_seq_conta,
  a.nr_sequencia nr_seq_conta_mat,
  a.ie_valor_base,
  a.ie_glosa
from  pls_conta_mat_v a
where  a.nr_seq_protocolo   = nr_seq_protocolo_pc
and  a.ie_status_conta   in ('A', 'F', 'L', 'P', 'U')
and  a.ie_status     in ('L', 'S')
and  a.vl_material     != a.vl_calculado_ant
and  a.ie_origem_conta  != 'I'
and  (a.ie_valor_base IS NOT NULL AND a.ie_valor_base::text <> '')

union all

select  a.nr_seq_conta,
  a.nr_sequencia nr_seq_conta_mat,
  a.ie_valor_base,
  a.ie_glosa
from  pls_conta_mat_v a
where  a.nr_sequencia     = nr_seq_conta_pc
and  a.ie_status_conta   in ('A', 'F', 'L', 'P', 'U')
and  a.ie_status     in ('L', 'S')
and  a.vl_material     != a.vl_calculado_ant
and  a.ie_origem_conta  != 'I'
and  (a.ie_valor_base IS NOT NULL AND a.ie_valor_base::text <> '')

union all

select  a.nr_seq_conta,
  a.nr_sequencia nr_seq_conta_mat,
  a.ie_valor_base,
  a.ie_glosa
from  pls_conta_mat_v a
where   a.ie_status_conta   in ('A', 'F', 'L', 'P', 'U')
and  a.ie_status     in ('L', 'S')
and  a.vl_material     != a.vl_calculado_ant
and  a.ie_origem_conta  != 'I'
and  (a.ie_valor_base IS NOT NULL AND a.ie_valor_base::text <> '')
and  exists (select  1
    from  pls_cta_lote_proc_conta p
    where  p.nr_seq_lote_processo = nr_seq_lote_processo_pc
    and  p.nr_seq_conta = a.nr_sequencia);
BEGIN
-- tratamento para procedimentos
for r_C01_w in C01(  nr_seq_lote_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p) loop

  if (r_c01_w.ie_glosa = 'N') then
    -- se for o valor apresentado
    if (r_C01_w.ie_valor_base = '1') then
      CALL pls_cta_alt_valor_pck.pls_aceitar_vl_apres_proc(  r_C01_w.nr_seq_conta, r_C01_w.nr_seq_conta_proc, 7, nm_usuario_p);
      CALL CALL pls_cta_alt_valor_pck.pls_atualiza_dados_comp_proc(  r_C01_w.nr_seq_conta_proc, nm_usuario_p);
      commit;
    else
      -- tratamento para valor calculado
      CALL pls_cta_alt_valor_pck.pls_aceitar_vl_calc_proc(  r_C01_w.nr_seq_conta, r_C01_w.nr_seq_conta_proc, 7, nm_usuario_p);
      CALL CALL pls_cta_alt_valor_pck.pls_atualiza_dados_comp_proc(  r_C01_w.nr_seq_conta_proc, nm_usuario_p);
      commit;
    end if;
  end if;
  commit;
end loop;

-- tratamento para materiais
for r_C02_w in C02(  nr_seq_lote_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p) loop
  if (r_c02_w.ie_glosa  = 'N') then
    -- se for o valor apresentado
    if (r_C02_w.ie_valor_base = '1') then
      CALL pls_cta_alt_valor_pck.pls_aceitar_vl_apres_mat(  r_C02_w.nr_seq_conta, r_C02_w.nr_seq_conta_mat, 7, nm_usuario_p);
    else
      -- tratamento para valor calculado
      CALL pls_cta_alt_valor_pck.pls_aceitar_vl_calc_mat(  r_C02_w.nr_seq_conta, r_C02_w.nr_seq_conta_mat, 7, nm_usuario_p);
    end if;
  end if;

  commit;
end loop;


END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cta_alt_valor_pck.pls_atualiza_vl_lib_conta ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
