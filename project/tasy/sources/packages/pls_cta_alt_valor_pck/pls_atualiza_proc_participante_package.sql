-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_cta_alt_valor_pck.pls_atualiza_proc_participante ( nr_seq_conta_proc_p pls_conta_proc_v.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


vl_liberado_partic_w  pls_proc_participante_v.vl_participante%type;
vl_glosa_w    pls_proc_participante_v.vl_glosa%type;
vl_liberado_proc_w  pls_conta_proc.vl_liberado%type;
vl_calc_co_w    pls_conta_proc.vl_calc_co_util%type;
vl_calc_mat_w    pls_conta_proc.vl_calc_mat_util%type;
vl_dif_partic_w    pls_proc_participante.vl_participante%type;
vl_partic_w    pls_proc_participante.vl_participante%type;

C01 CURSOR(nr_seq_conta_proc_p    pls_conta_proc_v.nr_sequencia%type) FOR
  SELECT  a.vl_liberado,
    a.vl_procedimento,
    a.qt_procedimento,
    b.nr_sequencia nr_seq_proc_partic,
    b.vl_calculado,
    a.vl_calc_co_util,
    a.vl_calc_mat_util,
	coalesce(a.vl_calc_hi_util,0) vl_calc_hi_util,
	coalesce(a.vl_liberado_hi,0) vl_liberado_hi,
	( SELECT count(1) from pls_proc_participante where nr_seq_conta_proc = a.nr_sequencia and ie_status <> 'C') qt_partic
  from  pls_conta_proc_v a,
    pls_proc_participante_v b
  where  a.nr_sequencia     = nr_seq_conta_proc_p
  and  b.nr_seq_conta_proc   = a.nr_sequencia
  and  b.ie_status    <> 'C';
BEGIN

for r_C01_w in C01(nr_seq_conta_proc_p) loop

  vl_calc_co_w  := r_C01_w.vl_calc_co_util;
  vl_calc_mat_w  := r_C01_w.vl_calc_mat_util;
  vl_liberado_proc_w  := r_C01_w.vl_liberado; --Ese valor ser? utilizado ao t?rmino para ajustar valor de participante(Arredondamento). Guardo o valor aqui, para n?o ter que fazer um select posteriormente.
  if (r_C01_w.qt_partic = 1 and r_C01_w.vl_liberado_hi > 0) then
	  vl_liberado_partic_w := r_C01_w.vl_liberado_hi;
  elsif ( (r_C01_w.vl_liberado_hi = r_C01_w.vl_calc_hi_util) and (r_C01_w.vl_liberado_hi > 0) and (r_C01_w.vl_calculado <= r_C01_w.vl_liberado )) then
	  vl_liberado_partic_w := r_C01_w.vl_calculado;
  else
	  vl_liberado_partic_w   := dividir((r_C01_w.vl_liberado * r_C01_w.vl_calculado), r_C01_w.vl_procedimento);
	
  end if;
  vl_glosa_w := 0;

  update  pls_proc_participante
  set  vl_participante    = vl_liberado_partic_w,
    -- o campo vl_glosa est? sendo descontinuado, apenas zeramos para n?o gerar mais confus?o
    vl_glosa    = vl_glosa_w,
    -- o campo qt_liberada est? sendo descontinuado, apenas zeramos para n?o gerar mais confus?o
    qt_liberada    = 0,
    ie_status    = 'L',
    ie_status_pagamento  = pls_obter_stat_pag_item(ie_glosa, vl_liberado_partic_w, vl_glosa_w),
    nm_usuario    = nm_usuario_p,
    dt_atualizacao    = clock_timestamp()
  where  nr_sequencia    = r_C01_w.nr_seq_proc_partic;

end loop;


--Aqui verificar se tem vl_calc_co ou vl_calc_mat, nesse caso n?o ? realizado o ajuste, pois ser?
--gerado a linha de pagamento do prestador(Nesse caso, n?o deve equalizar o valor dos participantes com o valor liberado do item)
if (coalesce(vl_calc_co_w,0) = 0  and coalesce(vl_calc_mat_w,0) = 0) then
  --Ajuste final no valor de participantes do procedimento. Pode haver diferen?a devido a arredondamento.
  CALL pls_cta_alt_valor_pck.pls_ajustar_valor_partic(nr_seq_conta_proc_p, vl_liberado_proc_w);
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cta_alt_valor_pck.pls_atualiza_proc_participante ( nr_seq_conta_proc_p pls_conta_proc_v.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
