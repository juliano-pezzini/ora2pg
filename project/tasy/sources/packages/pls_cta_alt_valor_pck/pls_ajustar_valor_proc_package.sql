-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_cta_alt_valor_pck.pls_ajustar_valor_proc ( nr_seq_conta_p pls_conta_v.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc_v.nr_sequencia%type, qt_liberada_p pls_conta_proc_v.qt_procedimento%type, vl_liberado_p pls_conta_proc_v.vl_liberado%type, vl_unitario_p pls_conta_proc_v.vl_unitario%type, vl_liberado_hi_p pls_conta_proc_v.vl_liberado_hi%type, vl_liberado_mat_p pls_conta_proc_v.vl_liberado_material%type, vl_liberado_co_p pls_conta_proc_v.vl_liberado_co%type, vl_lib_taxa_hi_p pls_conta_proc_v.vl_lib_taxa_servico%type, vl_lib_taxa_mat_p pls_conta_proc_v.vl_lib_taxa_material%type, vl_lib_taxa_co_p pls_conta_proc_v.vl_taxa_co%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


ie_tipo_conta_w     pls_conta_v.ie_tipo_conta%type;
ie_tipo_liberacao_w    pls_conta_proc_v.ie_tipo_liberacao%type;
vl_glosa_w      pls_conta_proc_v.vl_glosa%type;
vl_glosa_co_w      pls_conta_proc_v.vl_glosa_co%type;
vl_glosa_hi_w      pls_conta_proc_v.vl_glosa_hi%type;
vl_glosa_material_w    pls_conta_proc_v.vl_glosa_material%type;
vl_glosa_taxa_co_w    pls_conta_proc_v.vl_glosa_taxa_co%type;
vl_glosa_taxa_hi_w    pls_conta_proc_v.vl_glosa_taxa_servico%type;
vl_glosa_taxa_material_w  pls_conta_proc_v.vl_glosa_taxa_material%type;

C01 CURSOR(nr_seq_conta_proc_p    pls_conta_proc_v.nr_sequencia%type) FOR
  SELECT  a.nr_sequencia,
    a.vl_procedimento_imp,
    a.vl_co_ptu_imp,
    a.vl_procedimento_ptu_imp,
    a.vl_material_ptu_imp,
    a.vl_taxa_co_imp,
    a.vl_taxa_servico_imp,
    a.vl_taxa_material_imp
  from  pls_conta_proc_v a
  where  a.nr_sequencia  = nr_seq_conta_proc_p;

BEGIN
-- obt?m o tipo de conta
ie_tipo_conta_w := pls_util_cta_pck.pls_obter_tipo_conta(nr_seq_conta_p);
ie_tipo_liberacao_w := 'AV';

for r_C01_w in C01(nr_seq_conta_proc_p) loop

  -- se  for interc?mbio
  if (ie_tipo_conta_w = 'I') then
    -- c?lculo das glosas
    -- se der valor negativo, a glosa ? sempre zero
    vl_glosa_co_w       := pls_util_cta_pck.pls_obter_vl_glosa(vl_liberado_co_p, r_C01_w.vl_co_ptu_imp);
    vl_glosa_hi_w       := pls_util_cta_pck.pls_obter_vl_glosa(vl_liberado_hi_p, r_C01_w.vl_procedimento_ptu_imp);
    vl_glosa_material_w     := pls_util_cta_pck.pls_obter_vl_glosa(vl_liberado_mat_p, r_C01_w.vl_material_ptu_imp);
    vl_glosa_taxa_co_w     := pls_util_cta_pck.pls_obter_vl_glosa(vl_lib_taxa_co_p, r_C01_w.vl_taxa_co_imp);
    vl_glosa_taxa_hi_w     := pls_util_cta_pck.pls_obter_vl_glosa(vl_lib_taxa_hi_p, r_C01_w.vl_taxa_servico_imp);
    vl_glosa_taxa_material_w   := pls_util_cta_pck.pls_obter_vl_glosa(vl_lib_taxa_mat_p, r_C01_w.vl_taxa_material_imp);
    -- soma tudo
    vl_glosa_w := (  vl_glosa_co_w + vl_glosa_hi_w + vl_glosa_material_w + vl_glosa_taxa_co_w + vl_glosa_taxa_hi_w +
        vl_glosa_taxa_material_w);

    update   pls_conta_proc set
      vl_liberado_co    = vl_liberado_co_p,
      vl_liberado_hi    = vl_liberado_hi_p,
      vl_liberado_material  = vl_liberado_mat_p,
      vl_lib_taxa_co    = vl_lib_taxa_co_p,
      vl_lib_taxa_servico  = vl_lib_taxa_hi_p,
      vl_lib_taxa_material  = vl_lib_taxa_mat_p,
      vl_glosa_co    = vl_glosa_co_w,
      vl_glosa_hi    = vl_glosa_hi_w,
      vl_glosa_material  = vl_glosa_material_w,
      vl_glosa_taxa_co  = vl_glosa_taxa_co_w,
      vl_glosa_taxa_servico  = vl_glosa_taxa_hi_w,
      vl_glosa_taxa_material  = vl_glosa_taxa_material_w,
      vl_liberado     = vl_liberado_p,
      qt_procedimento    = qt_liberada_p,
      ie_tipo_liberacao   = ie_tipo_liberacao_w,
      vl_unitario    = vl_unitario_p,
      vl_glosa    = vl_glosa_w,
      ie_status_pagamento  = pls_obter_stat_pag_item(ie_glosa, vl_liberado_p, vl_glosa_w),
      nm_usuario    = nm_usuario_p,
      dt_atualizacao    = clock_timestamp(),
      ie_status    = 'L'
    where  nr_sequencia    = r_C01_w.nr_sequencia;

  -- para qualquer coisa faz o trabalho somente nos valores totais liberados
  else
    vl_glosa_w := pls_util_cta_pck.pls_obter_vl_glosa(vl_liberado_p, r_C01_w.vl_procedimento_imp);

    update   pls_conta_proc set
      vl_liberado     = vl_liberado_p,
      qt_procedimento    = qt_liberada_p,
      ie_tipo_liberacao   = ie_tipo_liberacao_w,
      vl_unitario    = vl_unitario_p,
      vl_glosa    = vl_glosa_w,
      nm_usuario    = nm_usuario_p,
      dt_atualizacao    = clock_timestamp(),
      ie_status_pagamento  = pls_obter_stat_pag_item(ie_glosa, vl_liberado_p, vl_glosa_w),
      -- os campos abaixo s?o apenas informativos (deveriam existir somente para interc?mbio, por?m pediram para disponibilizar os dados na tela
      vl_liberado_co    = vl_liberado_co_p,
      vl_liberado_hi    = vl_liberado_hi_p,
      vl_liberado_material  = vl_liberado_mat_p,
      -- j? estes campos s?o para seguran?a (n?o ocorrer de ficar com valores inadequados independente da a??o)
      vl_glosa_co    = 0,
      vl_glosa_hi    = 0,
      vl_glosa_material  = 0,
      vl_glosa_taxa_co  = 0,
      vl_glosa_taxa_servico  = 0,
      vl_glosa_taxa_material  = 0,
      ie_status    = 'L'
    where  nr_sequencia    = r_C01_w.nr_sequencia;
  end if;

end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cta_alt_valor_pck.pls_ajustar_valor_proc ( nr_seq_conta_p pls_conta_v.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc_v.nr_sequencia%type, qt_liberada_p pls_conta_proc_v.qt_procedimento%type, vl_liberado_p pls_conta_proc_v.vl_liberado%type, vl_unitario_p pls_conta_proc_v.vl_unitario%type, vl_liberado_hi_p pls_conta_proc_v.vl_liberado_hi%type, vl_liberado_mat_p pls_conta_proc_v.vl_liberado_material%type, vl_liberado_co_p pls_conta_proc_v.vl_liberado_co%type, vl_lib_taxa_hi_p pls_conta_proc_v.vl_lib_taxa_servico%type, vl_lib_taxa_mat_p pls_conta_proc_v.vl_lib_taxa_material%type, vl_lib_taxa_co_p pls_conta_proc_v.vl_taxa_co%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
