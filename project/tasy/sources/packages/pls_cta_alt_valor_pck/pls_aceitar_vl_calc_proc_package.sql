-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_cta_alt_valor_pck.pls_aceitar_vl_calc_proc ( nr_seq_conta_p pls_conta_v.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc_v.nr_sequencia%type, cd_acao_analise_p pls_acao_analise.cd_acao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


ie_tipo_conta_w     pls_conta_v.ie_tipo_conta%type;
ie_tipo_liberacao_w    pls_conta_proc_v.ie_tipo_liberacao%type;
vl_liberado_w      pls_conta_proc_v.vl_liberado%type;
vl_apresentado_w    pls_conta_proc_v.vl_liberado%type;
vl_unitario_w      pls_conta_proc_v.vl_unitario%type;
vl_glosa_w      pls_conta_proc_v.vl_glosa%type;
vl_glosa_co_w      pls_conta_proc_v.vl_glosa_co%type;
vl_glosa_hi_w      pls_conta_proc_v.vl_glosa_hi%type;
vl_glosa_material_w    pls_conta_proc_v.vl_glosa_material%type;
vl_glosa_taxa_co_w    pls_conta_proc_v.vl_glosa_taxa_co%type;
vl_glosa_taxa_hi_w    pls_conta_proc_v.vl_glosa_taxa_servico%type;
vl_glosa_taxa_material_w  pls_conta_proc_v.vl_glosa_taxa_material%type;
dados_intercambio_w     dados_vl_tx_libe;
dados_retorno_w    dados_vl_tx_libe;


C01 CURSOR(nr_seq_conta_proc_p    pls_conta_proc.nr_sequencia%type) FOR
  SELECT  a.nr_sequencia,
    a.qt_procedimento_imp,
    a.vl_procedimento_imp,
    a.vl_procedimento,
    a.vl_co_ptu_imp,
    a.vl_procedimento_ptu_imp,
    a.vl_material_ptu_imp,
    a.vl_taxa_co_imp,
    a.vl_taxa_servico_imp,
    a.vl_taxa_material_imp,
    a.vl_taxa_servico,
    a.vl_taxa_material,
    a.vl_taxa_co,
    a.vl_calc_co_util,
    a.vl_calc_hi_util,
    a.vl_calc_mat_util,
    a.tx_intercambio_imp,
    a.tx_intercambio
  from  pls_conta_proc_v a
  where  a.nr_sequencia  = nr_seq_conta_proc_p;

BEGIN
-- obt?m o tipo de conta
ie_tipo_conta_w := pls_util_cta_pck.pls_obter_tipo_conta(nr_seq_conta_p);
ie_tipo_liberacao_w := 'P';

for r_C01_w in C01(nr_seq_conta_proc_p) loop

  -- se for interc?mbio
  if (ie_tipo_conta_w = 'I') then

    -- calcula os valores em forma de distribui??o para interc?mbio
    dados_intercambio_w := pls_cta_alt_valor_pck.pls_calc_vl_lib_vl_calc( r_C01_w.vl_procedimento_ptu_imp, r_C01_w.vl_material_ptu_imp,
                r_C01_w.vl_co_ptu_imp, r_C01_w.vl_taxa_servico_imp,
                r_C01_w.vl_taxa_material_imp, r_C01_w.vl_taxa_co_imp,
                r_C01_w.vl_calc_hi_util, r_C01_w.vl_calc_mat_util,
                r_C01_w.vl_calc_co_util, r_C01_w.vl_taxa_servico,
                r_C01_w.vl_taxa_material, r_C01_w.vl_taxa_co,
                r_c01_w.tx_intercambio_imp, r_c01_w.tx_intercambio);

    -- soma todos os valores e taxas de interc?mbio
    vl_liberado_w := (dados_intercambio_w.vl_liberado_hi + dados_intercambio_w.vl_liberado_mat +
            dados_intercambio_w.vl_liberado_co + dados_intercambio_w.vl_lib_taxa_hi +
            dados_intercambio_w.vl_lib_taxa_mat + dados_intercambio_w.vl_lib_taxa_co);

    dados_retorno_w  :=  pls_cta_alt_valor_pck.pls_calc_vl_lib_vl_calc(  r_C01_w.vl_procedimento_ptu_imp,  r_C01_w.vl_material_ptu_imp,
                  r_C01_w.vl_co_ptu_imp, r_C01_w.vl_taxa_servico_imp,
                  r_C01_w.vl_taxa_material_imp, r_C01_w.vl_taxa_co_imp,
                  r_C01_w.vl_procedimento_ptu_imp, r_C01_w.vl_material_ptu_imp,
                  r_C01_w.vl_co_ptu_imp, r_C01_w.vl_taxa_servico_imp,
                  r_C01_w.vl_taxa_material_imp, r_C01_w.vl_taxa_co_imp,
                  r_c01_w.tx_intercambio_imp, r_c01_w.tx_intercambio);

    vl_apresentado_w := (dados_retorno_w.vl_liberado_hi + dados_retorno_w.vl_liberado_mat +
            dados_retorno_w.vl_liberado_co + dados_retorno_w.vl_lib_taxa_hi +
            dados_retorno_w.vl_lib_taxa_mat + dados_retorno_w.vl_lib_taxa_co);

    if (vl_liberado_w > vl_apresentado_w) then
      dados_intercambio_w := dados_retorno_w;
      vl_liberado_w := vl_apresentado_w;
    end if;

    -- c?lculo das glosas
    -- se der valor negativo, a glosa ? sempre zero
    vl_glosa_co_w       := pls_util_cta_pck.pls_obter_vl_glosa(dados_intercambio_w.vl_liberado_co, r_C01_w.vl_co_ptu_imp);
    vl_glosa_hi_w       := pls_util_cta_pck.pls_obter_vl_glosa(dados_intercambio_w.vl_liberado_hi, r_C01_w.vl_procedimento_ptu_imp);
    vl_glosa_material_w     := pls_util_cta_pck.pls_obter_vl_glosa(dados_intercambio_w.vl_liberado_mat, r_C01_w.vl_material_ptu_imp);
    vl_glosa_taxa_co_w     := pls_util_cta_pck.pls_obter_vl_glosa(dados_intercambio_w.vl_lib_taxa_co, r_C01_w.vl_taxa_co_imp);
    vl_glosa_taxa_hi_w     := pls_util_cta_pck.pls_obter_vl_glosa(dados_intercambio_w.vl_lib_taxa_hi, r_C01_w.vl_taxa_servico_imp);
    vl_glosa_taxa_material_w   := pls_util_cta_pck.pls_obter_vl_glosa(dados_intercambio_w.vl_lib_taxa_mat, r_C01_w.vl_taxa_material_imp);
    -- soma tudo
    vl_glosa_w := (vl_glosa_co_w + vl_glosa_hi_w + vl_glosa_material_w + vl_glosa_taxa_co_w + vl_glosa_taxa_hi_w +
           vl_glosa_taxa_material_w);
    -- o campo qt_procedimento_imp tem quatro casas de precis?o, por isso ? feito o arredondamento
    vl_unitario_w := round((dividir_sem_round(vl_liberado_w, r_C01_w.qt_procedimento_imp))::numeric, 2);

    -- processo de atualizar pagamento e cobran?a (OPS - Processos de contas m?dicas)
    if (cd_acao_analise_p = 7) then

      update   pls_conta_proc set
        vl_liberado_co    = dados_intercambio_w.vl_liberado_co,
        vl_liberado_hi    = dados_intercambio_w.vl_liberado_hi,
        vl_liberado_material  = dados_intercambio_w.vl_liberado_mat,
        vl_lib_taxa_co    = dados_intercambio_w.vl_lib_taxa_co,
        vl_lib_taxa_servico  = dados_intercambio_w.vl_lib_taxa_hi,
        vl_lib_taxa_material  = dados_intercambio_w.vl_lib_taxa_mat,
        vl_glosa_co    = vl_glosa_co_w,
        vl_glosa_hi    = vl_glosa_hi_w,
        vl_glosa_material  = vl_glosa_material_w,
        vl_glosa_taxa_co  = vl_glosa_taxa_co_w,
        vl_glosa_taxa_servico  = vl_glosa_taxa_hi_w,
        vl_glosa_taxa_material  = vl_glosa_taxa_material_w,
        vl_liberado     = vl_liberado_w,
        qt_procedimento    = r_C01_w.qt_procedimento_imp,
        vl_unitario    = vl_unitario_w,
        vl_glosa    = vl_glosa_w,
        nm_usuario    = nm_usuario_p,
        dt_atualizacao    = clock_timestamp()
      where  nr_sequencia    = r_C01_w.nr_sequencia;
    else
      -- processo padr?o
      update   pls_conta_proc set
        vl_liberado_co    = dados_intercambio_w.vl_liberado_co,
        vl_liberado_hi    = dados_intercambio_w.vl_liberado_hi,
        vl_liberado_material  = dados_intercambio_w.vl_liberado_mat,
        vl_lib_taxa_co    = dados_intercambio_w.vl_lib_taxa_co,
        vl_lib_taxa_servico  = dados_intercambio_w.vl_lib_taxa_hi,
        vl_lib_taxa_material  = dados_intercambio_w.vl_lib_taxa_mat,
        vl_glosa_co    = vl_glosa_co_w,
        vl_glosa_hi    = vl_glosa_hi_w,
        vl_glosa_material  = vl_glosa_material_w,
        vl_glosa_taxa_co  = vl_glosa_taxa_co_w,
        vl_glosa_taxa_servico  = vl_glosa_taxa_hi_w,
        vl_glosa_taxa_material  = vl_glosa_taxa_material_w,
        vl_liberado     = vl_liberado_w,
        qt_procedimento    = r_C01_w.qt_procedimento_imp,
        ie_tipo_liberacao   = ie_tipo_liberacao_w,
        vl_unitario    = vl_unitario_w,
        vl_glosa    = vl_glosa_w,
        ie_status_pagamento  = pls_obter_stat_pag_item(ie_glosa, vl_liberado_w, vl_glosa_w),
        nm_usuario    = nm_usuario_p,
        dt_atualizacao    = clock_timestamp(),
        ie_status    = 'L'
      where  nr_sequencia    = r_C01_w.nr_sequencia;
    end if;

  -- para qualquer coisa faz o trabalho somente nos valores totais liberados
  else
    vl_liberado_w := r_C01_w.vl_procedimento;
    -- o campo qt_procedimento_imp tem quatro casas de precis?o, por isso ? feito o arredondamento
    vl_unitario_w := round((dividir_sem_round(vl_liberado_w, r_C01_w.qt_procedimento_imp))::numeric, 2);
    vl_glosa_w := pls_util_cta_pck.pls_obter_vl_glosa(vl_liberado_w, r_C01_w.vl_procedimento_imp);

    -- processo de atualizar pagamento e cobran?a (OPS - Processos de contas m?dicas)
    if (cd_acao_analise_p = 7) then

      update   pls_conta_proc set
        vl_liberado     = vl_liberado_w,
        qt_procedimento    = r_C01_w.qt_procedimento_imp,
        vl_unitario    = vl_unitario_w,
        vl_glosa    = vl_glosa_w,
        nm_usuario    = nm_usuario_p,
        dt_atualizacao    = clock_timestamp(),
        -- os campos abaixo s?o apenas informativos (deveriam existir somente para interc?mbio, por?m pediram para disponibilizar os dados na tela
        vl_liberado_co    = r_C01_w.vl_calc_co_util,
        vl_liberado_hi    = r_C01_w.vl_calc_hi_util,
        vl_liberado_material  = r_C01_w.vl_calc_mat_util,
        -- j? estes campos s?o para seguran?a (n?o ocorrer de ficar com valores inadequados independente da a??o)
        vl_glosa_co    = 0,
        vl_glosa_hi    = 0,
        vl_glosa_material  = 0,
        vl_glosa_taxa_co  = 0,
        vl_glosa_taxa_servico  = 0,
        vl_glosa_taxa_material  = 0
      where  nr_sequencia    = r_C01_w.nr_sequencia;

    else
      -- processo padr?o
      update   pls_conta_proc set
        vl_liberado     = vl_liberado_w,
        qt_procedimento    = r_C01_w.qt_procedimento_imp,
        ie_tipo_liberacao   = ie_tipo_liberacao_w,
        vl_unitario    = vl_unitario_w,
        vl_glosa    = vl_glosa_w,
        nm_usuario    = nm_usuario_p,
        dt_atualizacao    = clock_timestamp(),
        ie_status_pagamento  = pls_obter_stat_pag_item(ie_glosa, vl_liberado_w, vl_glosa_w),
        -- os campos abaixo s?o apenas informativos (deveriam existir somente para interc?mbio, por?m pediram para disponibilizar os dados na tela
        vl_liberado_co    = r_C01_w.vl_calc_co_util,
        vl_liberado_hi    = r_C01_w.vl_calc_hi_util,
        vl_liberado_material  = r_C01_w.vl_calc_mat_util,
        -- j? estes campos s?o para seguran?a (n?o ocorrer de ficar com valores inadequados independente da a??o)
        vl_glosa_co    = 0,
        vl_glosa_hi    = 0,
        vl_glosa_material  = 0,
        vl_glosa_taxa_co  = 0,
        vl_glosa_taxa_servico  = 0,
        vl_glosa_taxa_material  = 0,
        ie_status    = 'L'
      where  nr_sequencia    = r_C01_w.nr_sequencia;
    end if;
  end if;

end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cta_alt_valor_pck.pls_aceitar_vl_calc_proc ( nr_seq_conta_p pls_conta_v.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc_v.nr_sequencia%type, cd_acao_analise_p pls_acao_analise.cd_acao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
