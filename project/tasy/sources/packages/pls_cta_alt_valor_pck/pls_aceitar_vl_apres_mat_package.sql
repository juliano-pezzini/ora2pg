-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_cta_alt_valor_pck.pls_aceitar_vl_apres_mat ( nr_seq_conta_p pls_conta_v.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat_v.nr_sequencia%type, cd_acao_analise_p pls_acao_analise.cd_acao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


ie_tipo_conta_w    pls_conta_v.ie_tipo_conta%type;

C01 CURSOR(nr_seq_conta_mat_p    pls_conta_mat_v.nr_sequencia%type) FOR
  SELECT  a.nr_sequencia,
    a.vl_material_imp,
    a.qt_material_imp_orig qt_material_imp,
    a.vl_unitario_imp,
    a.vl_taxa_material_imp
  from  pls_conta_mat_v a
  where  a.nr_sequencia  = nr_seq_conta_mat_p;
BEGIN
-- obt?m o tipo de conta
ie_tipo_conta_w := pls_util_cta_pck.pls_obter_tipo_conta(nr_seq_conta_p);

for r_C01_w in C01(nr_seq_conta_mat_p) loop
  if (ie_tipo_conta_w = 'I') then

    -- processo de Atualizar pagamento e cobran?a (OPS - Processos de contas m?dicas)
    if (cd_acao_analise_p = 7) then
      update   pls_conta_mat set
        vl_liberado     = r_C01_w.vl_material_imp,
        qt_material    = r_C01_w.qt_material_imp,
        vl_unitario    = r_C01_w.vl_unitario_imp,
        vl_lib_taxa_material  = r_C01_w.vl_taxa_material_imp,
        nm_usuario    = nm_usuario_p,
        dt_atualizacao    = clock_timestamp(),
        -- os campos abaixo s?o apenas informativos (zeramos por seguran?a)
        vl_glosa    = 0,
        vl_glosa_taxa_material  = 0
      where  nr_sequencia    = r_C01_w.nr_sequencia;
    else
      -- processo padr?o
      update   pls_conta_mat set
        vl_liberado     = r_C01_w.vl_material_imp,
        qt_material    = r_C01_w.qt_material_imp,
        vl_unitario    = r_C01_w.vl_unitario_imp,
        vl_lib_taxa_material  = r_C01_w.vl_taxa_material_imp,
        ie_status_pagamento  = pls_obter_stat_pag_item(ie_glosa, r_C01_w.vl_material_imp, 0),
        nm_usuario    = nm_usuario_p,
        dt_atualizacao    = clock_timestamp(),
        -- os campos abaixo s?o apenas informativos (zeramos por seguran?a)
        vl_glosa    = 0,
        ie_tipo_liberacao  = 'A',
        vl_glosa_taxa_material  = 0,
        ie_status    = 'L'
      where  nr_sequencia    = r_C01_w.nr_sequencia;
    end if;

  else
    -- processo de Atualizar pagamento e cobran?a (OPS - Processos de contas m?dicas)
    if (cd_acao_analise_p = 7) then
      update   pls_conta_mat set
        vl_liberado     = r_C01_w.vl_material_imp,
        qt_material    = r_C01_w.qt_material_imp,
        vl_unitario    = r_C01_w.vl_unitario_imp,
        nm_usuario    = nm_usuario_p,
        dt_atualizacao    = clock_timestamp(),
        -- os campos abaixo s?o apenas informativos (zeramos por seguran?a)
        vl_glosa    = 0,
        vl_glosa_taxa_material  = 0,
        vl_lib_taxa_material  = 0
      where  nr_sequencia    = r_C01_w.nr_sequencia;
    else
      -- processo padr?o
      update   pls_conta_mat set
        vl_liberado     = r_C01_w.vl_material_imp,
        qt_material    = r_C01_w.qt_material_imp,
        vl_unitario    = r_C01_w.vl_unitario_imp,
        ie_status_pagamento  = pls_obter_stat_pag_item(ie_glosa, r_C01_w.vl_material_imp, 0),
        nm_usuario    = nm_usuario_p,
        dt_atualizacao    = clock_timestamp(),
        ie_tipo_liberacao  = 'A',
        -- os campos abaixo s?o apenas informativos (zeramos por seguran?a)
        vl_glosa    = 0,
        vl_glosa_taxa_material  = 0,
        vl_lib_taxa_material  = 0,
        ie_status    = 'L'
      where  nr_sequencia    = r_C01_w.nr_sequencia;

    end if;
  end if;
end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cta_alt_valor_pck.pls_aceitar_vl_apres_mat ( nr_seq_conta_p pls_conta_v.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat_v.nr_sequencia%type, cd_acao_analise_p pls_acao_analise.cd_acao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
