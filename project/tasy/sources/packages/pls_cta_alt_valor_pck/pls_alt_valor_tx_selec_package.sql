-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- Rotina respons?vel por ajustar a taxa quando for mais de um item selecionado, necess?rio utilziar a mesma devido a necessidade das valida??es para os itens
CREATE OR REPLACE PROCEDURE pls_cta_alt_valor_pck.pls_alt_valor_tx_selec ( nr_seq_analise_p pls_conta_v.nr_seq_analise%type, nr_seq_conta_p pls_conta_v.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc_v.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat_v.nr_sequencia%type, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type, pr_taxa_servico_p bigint, pr_taxa_material_p bigint, pr_taxa_co_p bigint, pr_taxa_exc_material_p bigint, ie_apres_calc_p text, nm_usuario_p usuario.nm_usuario%type, nr_id_transacao_p bigint) AS $body$
DECLARE


vl_lib_taxa_servico_w    pls_conta_proc.vl_lib_taxa_servico%type;
vl_lib_taxa_material_w    pls_conta_proc.vl_lib_taxa_material%type;
vl_lib_taxa_co_w    pls_conta_proc.vl_lib_taxa_co%type;
vl_calc_co_util_w    pls_conta_proc.vl_calc_co_util%type;
vl_calc_hi_util_w    pls_conta_proc.vl_calc_hi_util%type;
vl_calc_mat_util_w    pls_conta_proc.vl_calc_mat_util%type;
vl_procedimento_ptu_imp_w  pls_conta_proc.vl_procedimento_ptu_imp%type;
vl_material_ptu_imp_w    pls_conta_proc.vl_material_ptu_imp%type;
vl_co_ptu_imp_w      pls_conta_proc.vl_co_ptu_imp%type;

C01 CURSOR FOR
  SELECT  a.nr_seq_conta,
    a.nr_seq_conta_proc,
    a.nr_seq_conta_mat,
    a.vl_liberado_hi,
    a.vl_liberado_co,
    a.qt_liberado,
    a.vl_liberado,
    a.vl_liberado_material,
    a.vl_taxa_co,
    a.vl_taxa_co_imp,
    a.vl_taxa_material,
    a.vl_taxa_material_imp,
    a.vl_taxa_servico,
    a.vl_taxa_servico_imp
  from  w_pls_analise_item a
  where  a.nr_seq_analise  = nr_seq_analise_p
  and  a.nm_usuario    = nm_usuario_p
  and  a.nr_seq_conta    = nr_seq_conta_p
  and  a.nr_id_transacao  = nr_id_transacao_p
  and  ((coalesce(a.nr_seq_conta_proc::text, '') = '') or (a.nr_seq_conta_proc = nr_seq_conta_proc_p))
  and  ((coalesce(a.nr_seq_conta_mat::text, '') = '') or (a.nr_seq_conta_mat  = nr_seq_conta_mat_p))
  and  coalesce(a.nr_seq_proc_partic::text, '') = '';

ie_glosar_pagamento_ocor_w      pls_ocorrencia.ie_glosar_pagamento%type;

BEGIN

if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
  select  a.vl_calc_hi_util,
    a.vl_calc_mat_util,
    a.vl_calc_co_util,
    a.vl_procedimento_ptu_imp,
    a.vl_material_ptu_imp,
    a.vl_co_ptu_imp
  into STRICT  vl_calc_hi_util_w,
    vl_calc_mat_util_w,
    vl_calc_co_util_w,
    vl_procedimento_ptu_imp_w,
    vl_material_ptu_imp_w,
    vl_co_ptu_imp_w
  from  pls_conta_proc a
  where  a.nr_sequencia  = nr_seq_conta_proc_p;

  /* Calcular os valores indiviais */

  if (coalesce(ie_apres_calc_p,'A') = 'A') then
    vl_lib_taxa_servico_w  := vl_procedimento_ptu_imp_w * (coalesce(pr_taxa_servico_p,0)/100);
    vl_lib_taxa_material_w  := vl_material_ptu_imp_w * (coalesce(pr_taxa_material_p,0)/100);
    vl_lib_taxa_co_w  := vl_co_ptu_imp_w * (coalesce(pr_taxa_co_p,0)/100);
  else
    vl_lib_taxa_servico_w  := vl_calc_hi_util_w * (coalesce(pr_taxa_servico_p,0)/100);
    vl_lib_taxa_material_w  := vl_calc_mat_util_w * (coalesce(pr_taxa_material_p,0)/100);
    vl_lib_taxa_co_w  := vl_calc_co_util_w * (coalesce(pr_taxa_co_p,0)/100);
  end if;

elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then

  /* Calcular os valores indiviais */

  select  a.vl_material_ptu,
    a.vl_material_imp
  into STRICT  vl_calc_mat_util_w,
    vl_material_ptu_imp_w
  from  pls_conta_mat a
  where  a.nr_sequencia  = nr_seq_conta_mat_p;

  /* Calcular os valores indiviais */

  if (coalesce(ie_apres_calc_p,'A') = 'A') then
    vl_lib_taxa_material_w  := vl_material_ptu_imp_w * (coalesce(pr_taxa_exc_material_p,0)/100);
  else
    vl_lib_taxa_material_w  := vl_calc_mat_util_w * (coalesce(pr_taxa_exc_material_p,0)/100);
  end if;
end if;

select  max(coalesce(a.ie_glosar_pagamento,'S'))
into STRICT  ie_glosar_pagamento_ocor_w
from  pls_ocorrencia a
where  a.nr_sequencia  = nr_seq_ocorrencia_p;

-- somente pode alterar valores se o campo for S. Independente disto, a glosa pode ser lan?ada, ou seja, pode-se ter o lan?amento da glosa (tratado em outra rotina), mas o valor n?o pode ter altera??o
-- se n?o tiver ocorr?ncia informada, passa direto
if (ie_glosar_pagamento_ocor_w  = 'S') or (coalesce(nr_seq_ocorrencia_p::text, '') = '') then

  for r_C01_w in C01 loop

    if  ((r_C01_w.nr_seq_conta_proc IS NOT NULL AND r_C01_w.nr_seq_conta_proc::text <> '')  or (r_C01_w.nr_seq_conta_mat IS NOT NULL AND r_C01_w.nr_seq_conta_mat::text <> ''))  then
      --Valida??o da altera??o da taxa de servi?o
      CALL CALL pls_cta_alt_valor_pck.pls_valida_alteracao_valores(  '6', r_C01_w.qt_liberado, r_C01_w.qt_liberado,
              vl_lib_taxa_servico_w, r_C01_w.vl_taxa_servico_imp, r_C01_w.vl_taxa_servico );
      --Valida??o da taxa de material
      CALL CALL pls_cta_alt_valor_pck.pls_valida_alteracao_valores(  '8', r_C01_w.qt_liberado, r_C01_w.qt_liberado,
              vl_lib_taxa_material_w, r_C01_w.vl_taxa_material_imp, r_C01_w.vl_taxa_material );
      --Valida??o da taxa de custo operacional
      CALL CALL pls_cta_alt_valor_pck.pls_valida_alteracao_valores(  '7', r_C01_w.qt_liberado, r_C01_w.qt_liberado,
              vl_lib_taxa_co_w, r_C01_w.vl_taxa_co_imp, r_C01_w.vl_taxa_co );
      --Valida??o da quantidade libeada que deve ser superior a 0 nos casos de altera??o das taxas
      CALL CALL pls_cta_alt_valor_pck.pls_valida_alteracao_valores(  '9',r_C01_w.qt_liberado, r_C01_w.qt_liberado,
              vl_lib_taxa_servico_w, r_C01_w.vl_taxa_servico_imp, r_C01_w.vl_taxa_servico );
      --Rotina respons?vel por alterar os valores das taxas e gravar os devidos pareceres
      CALL pls_cta_alt_valor_pck.pls_analise_altera_tx_item(  r_C01_w.nr_seq_conta, r_C01_w.nr_seq_conta_proc, r_C01_w.nr_seq_conta_mat,
              r_C01_w.qt_liberado, r_C01_w.vl_liberado, r_C01_w.vl_liberado_hi,
              r_C01_w.vl_liberado_material, r_C01_w.vl_liberado_co, vl_lib_taxa_servico_w,
              vl_lib_taxa_material_w, vl_lib_taxa_co_w, nm_usuario_p);
    end if;

  end loop;

end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cta_alt_valor_pck.pls_alt_valor_tx_selec ( nr_seq_analise_p pls_conta_v.nr_seq_analise%type, nr_seq_conta_p pls_conta_v.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc_v.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat_v.nr_sequencia%type, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type, pr_taxa_servico_p bigint, pr_taxa_material_p bigint, pr_taxa_co_p bigint, pr_taxa_exc_material_p bigint, ie_apres_calc_p text, nm_usuario_p usuario.nm_usuario%type, nr_id_transacao_p bigint) FROM PUBLIC;
