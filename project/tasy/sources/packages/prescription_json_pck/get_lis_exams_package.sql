-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION prescription_json_pck.get_lis_exams ( nr_prescricao_p bigint, dt_horario_p timestamp default null, nr_seq_prescr_p bigint default null) RETURNS PHILIPS_JSON_LIST AS $body$
DECLARE

	json_item_w		philips_json;
	json_item_list_w	philips_json_list;
	json_analyte_list_w	philips_json_list;
	
	C01 CURSOR FOR
		SELECT	a.*,
			substr(Lab_obter_amostra_prescr(a.ie_default_sample,a.nr_prescricao,a.lab_sequence_code,a.prescription_item_sequence),1,50) sampleNumber
		from	bft_order_lis_v a
		where	nr_prescricao	= nr_prescricao_p
		and	((coalesce(dt_horario_p::text, '') = '') or (interval_date_time = dt_horario_p))
		and	((coalesce(nr_seq_prescr_p::text, '') = '') or (prescription_item_sequence = nr_seq_prescr_p));
	
	
BEGIN
	json_item_list_w	:= philips_json_list();
	
	for r_c01 in c01 loop
		begin
		json_item_w		:= philips_json();
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'prescriptionNumber', r_c01.prescription_number);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'prescriptionItemSequence', r_c01.prescription_item_sequence);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'procedureCode', r_c01.procedure_code);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'internalProcedureCode', r_c01.internal_procedure_code);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'labSequenceCode', r_c01.lab_sequence_code);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'examProcedureName', r_c01.exam_procedure_name);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'orderingProviderIdNumber', r_c01.ordering_provider_id_number);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'orderingProviderGivenName', r_c01.ordering_provider_given_name);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'orderingProviderLastName', r_c01.ordering_provider_last_name);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'orderingProviderMiddleName', r_c01.ordering_provider_middle_name);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'releasedUserProviderNum', r_c01.released_user_provider_num);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'requestingPhysician', r_c01.requesting_physician);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'diagnosticServiceSectionId', r_c01.diagnostic_service_section_id);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'priority', r_c01.priority);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'requestedDateTime', r_c01.requested_date_time);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'intervalDateTime', r_c01.interval_date_time);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'startDateTime', r_c01.start_date_time);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'internalPrescriptionCode', r_c01.internal_prescription_code);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'relevantClinicalData', r_c01.relevant_clinical_data);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'notes', r_c01.notes);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'sampleCollectionTime', r_c01.sample_collection_time);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'sampleCollectedPersonCode', r_c01.sample_collected_person_code);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'isExternalCollection', r_c01.is_external_collection);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'collectionDepartmentCode', r_c01.collection_department_code);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'piecesQuantityForExam', r_c01.pieces_quantity_for_exam);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'examDepartmentCode', r_c01.exam_department_code);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'notesForCollection', r_c01.notes_for_collection);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'quantityOfSpecimenContainer', r_c01.quantity_of_specimen_container);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'isSuspended', r_c01.is_suspended);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'suspendedTime', r_c01.suspended_time);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'examMaterialCode', r_c01.exam_material_code);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'labExamStatus', r_c01.lab_exam_status);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'ieDefaultSample', r_c01.ie_default_sample);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'integrationExamCode', r_c01.integration_exam_code);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'labExamCode', r_c01.lab_exam_code);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'nrPrescricao', r_c01.nr_prescricao);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'internalPrescriptionTimeId', r_c01.nr_seq_proc_hor);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'nrSeqProcHor', r_c01.nr_seq_proc_hor);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'nrSeqInterno', r_c01.nr_seq_interno);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'dateAcknowledged', r_c01.date_acknowledged);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'userAcknowledged', r_c01.user_acknowledged);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'identifierMaterialCode', r_c01.identifier_material_code);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'materialName', r_c01.material_name);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'sampleNumber', r_c01.sampleNumber);
		json_analyte_list_w	:= prescription_json_pck.get_analyte_exam( r_c01.lab_sequence_code );
		json_item_w.put('examsList',json_analyte_list_w.to_json_value());
		json_item_list_w.append(json_item_w.to_json_value());
		end;
	end loop;
	
	return json_item_list_w;
	
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION prescription_json_pck.get_lis_exams ( nr_prescricao_p bigint, dt_horario_p timestamp default null, nr_seq_prescr_p bigint default null) FROM PUBLIC;
