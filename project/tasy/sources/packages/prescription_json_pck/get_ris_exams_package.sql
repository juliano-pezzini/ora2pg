-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION prescription_json_pck.get_ris_exams ( nr_seq_proc_hor_p bigint) RETURNS PHILIPS_JSON_LIST AS $body$
DECLARE

	json_item_w		philips_json;
	json_item_list_w	philips_json_list;
	C01 CURSOR FOR
		SELECT	*
		from	bft_order_ris_v
		where	nr_seq_proc_hor	= nr_seq_proc_hor_p;
	
	
BEGIN
	
	json_item_list_w	:= philips_json_list();
	
	for r_c01 in c01 loop
		begin
		json_item_w		:= philips_json();
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'prescriptionNumber', r_c01.prescription_number);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'prescriptionItemSequence', r_c01.prescription_item_sequence);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'procedureCode', r_c01.procedure_code);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'internalProcedureCode', r_c01.internal_procedure_code);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'examProcedureName', r_c01.exam_procedure_name);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'orderingProviderIdNumber', r_c01.ordering_provider_id_number);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'orderingProviderGivenName', r_c01.ordering_provider_given_name);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'orderingProviderLastName', r_c01.ordering_provider_last_name);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'orderingProviderMiddleName', r_c01.ordering_provider_middle_name);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'releasedUserProviderNum', r_c01.released_user_provider_num);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'nmMedicoSolicitante', r_c01.nm_medico_solicitante);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'diagnosticServiceSectionId', r_c01.diagnostic_service_section_id);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'priority', r_c01.priority);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'requestedDateTime', r_c01.requested_date_time);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'startDateTime', r_c01.start_date_time);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'internalPrescriptionCode', r_c01.internal_prescription_code);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'relevantClinicalData', r_c01.relevant_clinical_data);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'relevantClinicalInformation', r_c01.relevant_clinical_information);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'entityIdentifier', r_c01.entity_identifier);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'notes', r_c01.notes);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'sideForExam', r_c01.side_for_exam);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'examDepartmentCode', r_c01.exam_department_code);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'isSuspended', r_c01.is_suspended);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'suspendedTime', r_c01.suspended_time);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'imageExamStatus', r_c01.image_exam_status);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'nrPrescricao', r_c01.nr_prescricao);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'nrSeqInterno', r_c01.nr_seq_interno);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'dateAcknowledged', r_c01.date_acknowledged);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'userAcknowledged', r_c01.user_acknowledged);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'interfaceId', r_c01.interface_id);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'procedureTypeId', r_c01.procedure_type_id);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'actualDate', r_c01.actual_date);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'examProcedureCode', r_c01.exam_procedure_code);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'nrSeqProcHor', r_c01.nr_seq_proc_hor);
		json_item_w := prescription_json_pck.add_json_value(json_item_w, 'internalPrescriptionTimeId', r_c01.nr_seq_proc_hor);
		json_item_list_w.append(json_item_w.to_json_value());
		end;
	end loop;
	return json_item_list_w;
	
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION prescription_json_pck.get_ris_exams ( nr_seq_proc_hor_p bigint) FROM PUBLIC;
