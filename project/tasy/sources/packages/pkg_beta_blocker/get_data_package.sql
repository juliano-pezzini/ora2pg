-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pkg_beta_blocker.get_data (dt_inicio timestamp, dt_fim timestamp, ie_adulto bigint) AS $body$
DECLARE

      c1 CURSOR FOR
         SELECT DISTINCT PACIENTE,
                         ID_PACIENTE,
                         IDADE,
                         DT_CIRURGIA,
                         ANESTESISTA,
                         MAX(EM_TERAPIA) EM_TERAPIA,
                         MAX(BLOQ_REQ) BLOQ_REQ,
                         MAX(BLOQ_PROV) BLOQ_PR,
                         PRE_AVALIADOR,
                         CIRURGIAO,
                         NR_ATENDIMENTO
                    FROM (
                          SELECT DISTINCT CASE WHEN                                                  INSTR(pat.nm_pessoa_fisica, ' ', -1)=0 THEN                                                   pat.nm_pessoa_fisica  ELSE SUBSTR(pat.nm_pessoa_fisica, INSTR(pat.nm_pessoa_fisica, ' ', -1) + 1)                                                  ||                                                  ', '                                                  ||                                                  SUBSTR(pat.nm_pessoa_fisica, 1, INSTR(pat.nm_pessoa_fisica, ' ', -1) - 1) END  PACIENTE,
                                          RBB.NR_ATENDIMENTO ID_PACIENTE,
                                          coalesce(OBTER_IDADE_PACIENTE(RBB.NR_ATENDIMENTO),0) IDADE,
                                          RBB.DT_INICIO_CIRURGIA DT_CIRURGIA,
                                          CASE WHEN                                                  INSTR(anest.nm_pessoa_fisica, ' ', -1)=0 THEN                                                   anest.nm_pessoa_fisica  ELSE SUBSTR(anest.nm_pessoa_fisica, INSTR(anest.nm_pessoa_fisica, ' ', -1) + 1)                                                  ||                                                  ', '                                                  ||                                                  SUBSTR(anest.nm_pessoa_fisica, 1, INSTR(anest.nm_pessoa_fisica, ' ', -1) - 1) END  ANESTESISTA,
                                          CASE WHEN UBB.IE_USO = 'S' THEN 1 ELSE 0 END EM_TERAPIA,
                                          CASE WHEN (PAD.NR_SEQUENCIA IS NOT NULL AND PAD.NR_SEQUENCIA::text <> '') THEN 1 ELSE 0 END BLOQ_REQ,
                                          CASE WHEN OBTER_HORA_ENTRE_DATAS(CAO.DT_INICIO_ADM, RBB.DT_INICIO_CIRURGIA) BETWEEN 0 AND 24 THEN 1 ELSE 0 END BLOQ_PROV,
                                          CASE WHEN                                                  INSTR(pre_ava.nm_pessoa_fisica, ' ', -1)=0 THEN                                                   pre_ava.nm_pessoa_fisica  ELSE SUBSTR(pre_ava.nm_pessoa_fisica, INSTR(pre_ava.nm_pessoa_fisica, ' ', -1) + 1)                                                  ||                                                  ', '                                                  ||                                                  SUBSTR(pre_ava.nm_pessoa_fisica, 1, INSTR(pre_ava.nm_pessoa_fisica, ' ', -1) - 1) END  PRE_AVALIADOR,
                                          CASE WHEN                                                  INSTR(cirurg.nm_pessoa_fisica, ' ', -1)=0 THEN                                                   cirurg.nm_pessoa_fisica  ELSE SUBSTR(cirurg.nm_pessoa_fisica, INSTR(cirurg.nm_pessoa_fisica, ' ', -1) + 1)                                                  ||                                                  ', '                                                  ||                                                  SUBSTR(cirurg.nm_pessoa_fisica, 1, INSTR(cirurg.nm_pessoa_fisica, ' ', -1) - 1) END  CIRURGIAO,
                                          RBB.NR_ATENDIMENTO
                                     FROM REL_C_BETA_BLOQUEADOR_V RBB
                                    INNER JOIN REL_U_BETA_BLOQUEADOR_V UBB
                                       ON UBB.NR_ATENDIMENTO = RBB.NR_ATENDIMENTO
                                    INNER JOIN pessoa_fisica pat
                                       ON rbb.CD_PESSOA_FISICA = pat.cd_pessoa_fisica
                                    INNER JOIN cirurgia c
                                       ON rbb.NR_CIRURGIA = c.nr_cirurgia
                                     LEFT JOIN CIRURGIA_AGENTE_ANESTESICO CAA
                                       ON CAA.NR_CIRURGIA = RBB.NR_CIRURGIA
                                     LEFT JOIN CIRURGIA_AGENTE_ANEST_OCOR CAO
                                       ON CAO.NR_SEQ_CIRUR_AGENTE = CAA.NR_SEQUENCIA
                                      AND CAO.IE_SITUACAO = 'A'
                                     LEFT JOIN AVAL_PRE_ANESTESICA APA
                                       ON APA.NR_CIRURGIA = RBB.NR_CIRURGIA
                                      AND APA.CD_PROCEDIMENTO = RBB.CD_PROCEDIMENTO_PRINC
                                     LEFT JOIN AVAL_PRE_ANEST_DIAG PAD
                                       ON PAD.NR_SEQ_AVAL_PRE = APA.NR_SEQUENCIA
                                      AND PAD.NR_SEQ_DIAG = 139
                                     LEFT JOIN pessoa_fisica anest
                                       ON anest.cd_pessoa_fisica = c.cd_pessoa_fisica
                                     LEFT JOIN pessoa_fisica pre_ava
                                       ON pre_ava.cd_pessoa_fisica = apa.cd_avaliador
                                     LEFT JOIN pessoa_fisica cirurg
                                       ON cirurg.cd_pessoa_fisica = rbb.CD_MEDICO_CIRURGIAO
                                    WHERE RBB.DT_INICIO_CIRURGIA BETWEEN DT_INICIO AND fim_dia(DT_FIM)
                                      AND ((coalesce(OBTER_IDADE_PACIENTE(RBB.NR_ATENDIMENTO),0) >= IE_ADULTO) OR (IE_ADULTO = 0))
                                ) alias33
                            WHERE (ANESTESISTA IS NOT NULL AND ANESTESISTA::text <> '')
                            GROUP BY PACIENTE,
                                     ID_PACIENTE,
                                     IDADE,
                                     DT_CIRURGIA, 
                                     ANESTESISTA,
                                     PRE_AVALIADOR, 
                                     CIRURGIAO,
                                     NR_ATENDIMENTO
                            ORDER BY PACIENTE, 
                                     DT_CIRURGIA;
      r1 c1%rowtype;

BEGIN
      --Limpa tabela W
      delete FROM W_BETA_BLOCKER_COMPLIANCE;

      --Abre cursor principal
      open c1;
      loop
         fetch c1
            into r1;
         EXIT WHEN NOT FOUND; /* apply on c1 */


         insert into W_BETA_BLOCKER_COMPLIANCE(NM_PACIENTE,
             CD_PACIENTE,
             QT_IDADE,
             DT_CIRURGIA,
             NM_ANESTESISTA,
             IE_EM_TERAPIA,
             IE_BLOQ_REQ,
             IE_BLOQ_PR,
             NM_PRE_AVALIADOR,
             NM_CIRURGIAO,
             NR_ATENDIMENTO)
         values (r1.PACIENTE,
             r1.ID_PACIENTE,
             r1.IDADE,
             r1.DT_CIRURGIA,
             r1.ANESTESISTA,
             r1.EM_TERAPIA,
             r1.BLOQ_REQ,
             r1.BLOQ_PR,
             r1.PRE_AVALIADOR,
             r1.CIRURGIAO,
             r1.NR_ATENDIMENTO);

      end loop;
      close c1;

      commit;
      --
   END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pkg_beta_blocker.get_data (dt_inicio timestamp, dt_fim timestamp, ie_adulto bigint) FROM PUBLIC;
