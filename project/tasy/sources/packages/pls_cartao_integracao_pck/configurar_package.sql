-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_cartao_integracao_pck.configurar (ambiente_p ambiente_r, merchant_id_p text, merchant_key_p text, nm_usuario_p text, ds_ip_proxy_p text default null, ds_porta_proxy_p text default null, ds_usuario_proxy_p text default null, ds_senha_proxy_p text default null) AS $body$
DECLARE


        c01 CURSOR(cd_dominio_p valor_dominio.cd_dominio%type,
                   vl_dominio_p valor_dominio.vl_dominio%type) FOR
            SELECT cd_exp_valor_dominio,
                   ds_valor_dominio
              from valor_dominio_v vd
             where vd.cd_dominio = cd_dominio_p
               and vd.vl_dominio = vl_dominio_p;

        c02 CURSOR(ds_sistema_p intpd_sistemas.ds_sistema%type) FOR
            SELECT ds_endpoint,
                   ds_host,
                   ds_user_agent,
                   ie_https,
                   ds_content_type,
                   ds_accept_encoding,
                   nr_sequencia,
                   ds_senha_serv_proxy,
                   nm_usuario_serv_proxy,
                   nr_porta_serv_proxy,
                   nr_ip_serv_proxy,
                   ie_situacao
              from intpd_sistemas
             where ds_sistema = ds_sistema_p;

        c03 CURSOR(ie_evento_p intpd_eventos.ie_evento%type) FOR
            SELECT ie_evento,
                   ie_situacao,
                   ie_envia_recebe,
                   nr_seq_classif,
                   nr_sequencia
              from intpd_eventos
             where ie_evento = ie_evento_p;

        c04 CURSOR(nr_seq_sistema_p intpd_sistemas.nr_sequencia%type,
                   nr_seq_evento_p  intpd_eventos.nr_sequencia%type) FOR
            SELECT nr_sequencia
              from intpd_eventos_sistema
             where nr_seq_sistema = nr_seq_sistema_p
               and nr_seq_evento = nr_seq_evento_p;

        c05 CURSOR(nr_seq_evento_sis_p intpd_eventos_sistema.nr_sequencia%type,
                   ds_header_name_p    intpd_eventos_cabecalho.ds_header_name%type) FOR
            SELECT ds_value
              from intpd_eventos_cabecalho iec
             where iec.ds_header_name = ds_header_name_p
               and iec.nr_seq_evento_sis = nr_seq_evento_sis_p;

        c06 CURSOR(ds_projeto_p json_projeto.ds_projeto%type) FOR
            SELECT nr_sequencia from json_projeto where upper(ds_projeto) = upper(ds_projeto_p);

        c07 CURSOR(ie_evento_p intpd_config_eventos.ie_evento%type) FOR
            SELECT nr_seq_proj_json,
                   ie_envia_recebe
              from intpd_config_eventos
             where ie_evento = ie_evento_p;

        type valor_dominio_t is table of valor_dominio%rowtype index by integer;
        type intpd_eventos_t is table of intpd_eventos%rowtype index by integer;
        type intpd_eventos_sistema_t is table of intpd_eventos_sistema%rowtype index by integer;
        type intpd_eventos_cabecalho_t is table of intpd_eventos_cabecalho%rowtype index by integer;
        type intpd_config_eventos_t is table of intpd_config_eventos%rowtype index by integer;

        achou_w              boolean;
        idx_w                integer;
        nm_usuario_w         usuario.nm_usuario%type := nm_usuario_p;
        ds_user_agent_w      intpd_sistemas.ds_user_agent%type := 'Tasy - Integrador';
        ds_accept_encoding_w intpd_sistemas.ds_accept_encoding%type := 'gzip';
        ds_content_type_w    intpd_sistemas.ds_content_type%type := 'application/json';
        cd_dominio_w constant valor_dominio.cd_dominio%type := 8187;

        ds_valor_dominio_w valor_dominio.ds_valor_dominio%type;
        ds_valor_recorrecia_propria_w constant valor_dominio.ds_valor_dominio%type := wheb_mensagem_pck.get_texto(1112572);
        ds_valor_cancelar_transacao_w constant valor_dominio.ds_valor_dominio%type := 'Cancelar transacao';
        ds_valor_capturar_transacao_w constant valor_dominio.ds_valor_dominio%type := 'Capturar transacao';
        cd_exp_valor_dominio_w valor_dominio.cd_exp_valor_dominio%type;
        cd_exp_recorrecia_propria_w constant valor_dominio.cd_exp_valor_dominio%type := 875842; -- Cadastrar
        cd_exp_cancelar_transacao_w constant valor_dominio.cd_exp_valor_dominio%type := 875852; -- Cadastrar
        cd_exp_capturar_transacao_w constant valor_dominio.cd_exp_valor_dominio%type := 875854; -- Cadastrar
        nr_seq_proj_json_pagto_w    json_projeto.nr_sequencia%type := null; --Cadastrar
        nr_seq_proj_json_cancelar_w json_projeto.nr_sequencia%type := null; --Cadastrar
        nr_seq_proj_json_capturar_w json_projeto.nr_sequencia%type := null; --Cadastrar

        intpd_sistemas_w          intpd_sistemas_t;
        valor_dominio_w           valor_dominio_t;
        intpd_eventos_w           intpd_eventos_t;
        intpd_eventos_sistema_w   intpd_eventos_sistema_t;
        intpd_eventos_cabecalho_w intpd_eventos_cabecalho_t;
        intpd_config_eventos_w    intpd_config_eventos_t;

        sistema_w                    c02%rowtype;
        evento_w                     c03%rowtype;
        eventos_sistema_w            c04%rowtype;
        cabecalho_w                  c05%rowtype;
        config_eventos_w             c07%rowtype;
        ds_sistema_w                 intpd_sistemas.ds_sistema%type;
        ds_endpoint_w                intpd_sistemas.ds_endpoint%type;
        nr_seq_evento_pagto_w        intpd_eventos.nr_sequencia%type;
        nr_seq_evento_cancelar_w     intpd_eventos.nr_sequencia%type;
        nr_seq_evento_capturar_w     intpd_eventos.nr_sequencia%type;
        nr_seq_sistema_pagto_w       intpd_sistemas.nr_sequencia%type;
        nr_seq_sistema_cancelar_w    intpd_sistemas.nr_sequencia%type;
        nr_seq_sistema_capturar_w    intpd_sistemas.nr_sequencia%type;
        nr_seq_evento_sis_pagto_w    intpd_eventos_sistema.nr_sequencia%type;
        nr_seq_evento_sis_cancelar_w intpd_eventos_sistema.nr_sequencia%type;
        nr_seq_evento_sis_capturar_w intpd_eventos_sistema.nr_sequencia%type;

    
BEGIN
    
        -- Validar se os projetos JSON estao criados

        open c06(wheb_mensagem_pck.get_texto(1112567));
        fetch c06
            into nr_seq_proj_json_pagto_w;
        achou_w := c06%found;
        close c06;
        if not achou_w then
            CALL wheb_mensagem_pck.exibir_mensagem_abort(1030333); -- 'Nao foi possivel encontrar o projeto JSON "CIELO - Criar Recorrencia Propria", configuracao abortada.'
        end if;

        open c06('CIELO - Capturar Transacao');
        fetch c06
            into nr_seq_proj_json_capturar_w;
        achou_w := c06%found;
        close c06;
        if not achou_w then
            CALL wheb_mensagem_pck.exibir_mensagem_abort(1030334); -- 'Nao foi possivel encontrar o projeto JSON "CIELO - Capturar Transacao", configuracao abortada.'
        end if;

        open c06('CIELO - Cancelar Transacao');
        fetch c06
            into nr_seq_proj_json_cancelar_w;
        achou_w := c06%found;
        close c06;
        if not achou_w then
            CALL wheb_mensagem_pck.exibir_mensagem_abort(1030335); -- 'Nao foi possivel encontrar o projeto JSON "CIELO - Cancelar Transacao", configuracao abortada.'
        end if;

        -- Validar Ambiente

        if coalesce(ambiente_p.api_url::text, '') = '' then
            CALL wheb_mensagem_pck.exibir_mensagem_abort(1030336); -- 'Parametro ambiente invalido.'
        end if;

        -- Validar dominio

        open c01(cd_dominio_w, current_setting('pls_cartao_integracao_pck.ie_evento_recorrencia_propria')::valor_dominio.vl_dominio%type);
        fetch c01
            into cd_exp_valor_dominio_w,
                 ds_valor_dominio_w;
        achou_w := c01%found;
        close c01;
        if not achou_w then
            CALL wheb_mensagem_pck.exibir_mensagem_abort(1030337); -- 'Dominio "Cartao de Credito - Criar Recorrencia Propria" nao cadastrado, configuracao abortada.'
        else
            -- Validar  Cadastro

            CALL CALL pls_cartao_integracao_pck.verificar(cd_exp_recorrecia_propria_w,
                      cd_exp_valor_dominio_w,
                      'Dominio "' || cd_dominio_w || '" com expressao incorreta, esperava "%0" e obteve "%1".');
            CALL CALL pls_cartao_integracao_pck.verificar(ds_valor_recorrecia_propria_w,
                      ds_valor_dominio_w,
                      'Dominio "' || cd_dominio_w || '" com descricao incorreta, esperava "%0" e obteve "%1".');
        end if;

        open c01(cd_dominio_w, current_setting('pls_cartao_integracao_pck.ie_evento_cancelar_transacao')::valor_dominio.vl_dominio%type);
        fetch c01
            into cd_exp_valor_dominio_w,
                 ds_valor_dominio_w;
        achou_w := c01%found;
        close c01;

        if not achou_w then
            CALL wheb_mensagem_pck.exibir_mensagem_abort(1030338); -- 'Dominio "Cartao de Credito - Cancelar Transacao" nao cadastrado, configuracao abortada.'
        else
            -- Validar Cadastro

            CALL CALL pls_cartao_integracao_pck.verificar(cd_exp_cancelar_transacao_w,
                      cd_exp_valor_dominio_w,
                      'Dominio "' || cd_dominio_w || '" com expressao incorreta, esperava "%0" e obteve "%1".');
            CALL CALL pls_cartao_integracao_pck.verificar(ds_valor_cancelar_transacao_w,
                      ds_valor_dominio_w,
                      'Dominio "' || cd_dominio_w || '" com descricao incorreta, esperava "%0" e obteve "%1".');
        end if;

        open c01(cd_dominio_w, current_setting('pls_cartao_integracao_pck.ie_evento_capturar_transacao')::valor_dominio.vl_dominio%type);
        fetch c01
            into cd_exp_valor_dominio_w,
                 ds_valor_dominio_w;
        achou_w := c01%found;
        close c01;
        if not achou_w then
            CALL wheb_mensagem_pck.exibir_mensagem_abort(1030339); -- 'Dominio "Cartao de Credito - Capturar Transacao" nao cadastrado, configuracao abortada.'
        else
            -- Validar Cadastro

            CALL CALL pls_cartao_integracao_pck.verificar(cd_exp_capturar_transacao_w,
                      cd_exp_valor_dominio_w,
                      'Dominio "' || cd_dominio_w || '" com expressao incorreta, esperava "%0" e obteve "%1".');
            CALL CALL pls_cartao_integracao_pck.verificar(ds_valor_capturar_transacao_w,
                      ds_valor_dominio_w,
                      'Dominio "' || cd_dominio_w || '" com descricao incorreta, esperava "%0" e obteve "%1".');
        end if;

        idx_w := 1;

        --cadastrar sistemas

        ds_sistema_w  := wheb_mensagem_pck.get_texto(1112567);
        ds_endpoint_w := ambiente_p.api_url || current_setting('pls_cartao_integracao_pck.ds_endpoint_sales_w')::intpd_sistemas.ds_endpoint%type;
        open c02(ds_sistema_w);
        fetch c02
            into sistema_w;
        achou_w := c02%found;
        close c02;
        if not achou_w then
            select nextval('intpd_sistemas_seq') into STRICT nr_seq_sistema_pagto_w;

            intpd_sistemas_w[idx_w].nr_sequencia := nr_seq_sistema_pagto_w;
            intpd_sistemas_w[idx_w].ds_sistema := ds_sistema_w;
            intpd_sistemas_w[idx_w].nm_usuario := nm_usuario_w;
            intpd_sistemas_w[idx_w].dt_atualizacao := clock_timestamp();
            intpd_sistemas_w[idx_w].dt_atualizacao_nrec := clock_timestamp();
            intpd_sistemas_w[idx_w].nm_usuario_nrec := nm_usuario_w;
            intpd_sistemas_w[idx_w].ie_situacao := 'A';
            intpd_sistemas_w[idx_w].nr_ip_serv_proxy := ds_ip_proxy_p;
            intpd_sistemas_w[idx_w].nr_porta_serv_proxy := ds_porta_proxy_p;
            intpd_sistemas_w[idx_w].nm_usuario_serv_proxy := ds_usuario_proxy_p;
            intpd_sistemas_w[idx_w].ds_senha_serv_proxy := ds_senha_proxy_p;
            intpd_sistemas_w[idx_w].ds_endpoint := ds_endpoint_w;
            intpd_sistemas_w[idx_w].ds_host := ambiente_p.api_url;
            intpd_sistemas_w[idx_w].ds_accept_encoding := ds_accept_encoding_w;
            intpd_sistemas_w[idx_w].ds_content_type := ds_content_type_w;
            intpd_sistemas_w[idx_w].ds_user_agent := ds_user_agent_w;
            intpd_sistemas_w[idx_w].ie_https := 'S';
            idx_w := idx_w + 1;
        else
            CALL CALL pls_cartao_integracao_pck.verificar(ds_user_agent_w,
                      sistema_w.ds_user_agent,
                      'Sistema "' || ds_sistema_w || '" com user agent incorreto, esperava "%0" e obteve "%1".');
            CALL CALL pls_cartao_integracao_pck.verificar(ds_content_type_w, sistema_w.ds_content_type);
            CALL CALL pls_cartao_integracao_pck.verificar('S', sistema_w.ie_https);
            CALL CALL pls_cartao_integracao_pck.verificar(ds_accept_encoding_w, sistema_w.ds_accept_encoding);
            CALL CALL pls_cartao_integracao_pck.verificar(ambiente_p.api_url, sistema_w.ds_host);
            CALL CALL pls_cartao_integracao_pck.verificar(ds_endpoint_w, sistema_w.ds_endpoint);
            CALL CALL pls_cartao_integracao_pck.verificar(ds_senha_proxy_p, sistema_w.ds_senha_serv_proxy);
            CALL CALL pls_cartao_integracao_pck.verificar(ds_usuario_proxy_p, sistema_w.nm_usuario_serv_proxy);
            CALL CALL pls_cartao_integracao_pck.verificar(ds_porta_proxy_p, sistema_w.nr_porta_serv_proxy);
            CALL CALL pls_cartao_integracao_pck.verificar(ds_ip_proxy_p, sistema_w.nr_ip_serv_proxy);
            CALL CALL pls_cartao_integracao_pck.verificar('A', sistema_w.ie_situacao);
            nr_seq_sistema_pagto_w := sistema_w.nr_sequencia;
        end if;

        ds_sistema_w  := 'CIELO - Cancelar Transacao';
        ds_endpoint_w := ambiente_p.api_url || current_setting('pls_cartao_integracao_pck.ds_endpoint_cancelar_w')::intpd_sistemas.ds_endpoint%type;
        open c02(ds_sistema_w);
        fetch c02
            into sistema_w;
        achou_w := c02%found;
        close c02;

        if not achou_w then
            select nextval('intpd_sistemas_seq') into STRICT nr_seq_sistema_cancelar_w;

            intpd_sistemas_w[idx_w].nr_sequencia := nr_seq_sistema_cancelar_w;
            intpd_sistemas_w[idx_w].ds_sistema := ds_sistema_w;
            intpd_sistemas_w[idx_w].nm_usuario := nm_usuario_w;
            intpd_sistemas_w[idx_w].dt_atualizacao := clock_timestamp();
            intpd_sistemas_w[idx_w].dt_atualizacao_nrec := clock_timestamp();
            intpd_sistemas_w[idx_w].nm_usuario_nrec := nm_usuario_w;
            intpd_sistemas_w[idx_w].ie_situacao := 'A';
            intpd_sistemas_w[idx_w].nr_ip_serv_proxy := ds_ip_proxy_p;
            intpd_sistemas_w[idx_w].nr_porta_serv_proxy := ds_porta_proxy_p;
            intpd_sistemas_w[idx_w].nm_usuario_serv_proxy := ds_usuario_proxy_p;
            intpd_sistemas_w[idx_w].ds_senha_serv_proxy := ds_senha_proxy_p;
            intpd_sistemas_w[idx_w].ds_endpoint := ds_endpoint_w;
            intpd_sistemas_w[idx_w].ds_host := ambiente_p.api_url;
            intpd_sistemas_w[idx_w].ds_accept_encoding := ds_accept_encoding_w;
            intpd_sistemas_w[idx_w].ds_content_type := ds_content_type_w;
            intpd_sistemas_w[idx_w].ds_user_agent := ds_user_agent_w;
            intpd_sistemas_w[idx_w].ie_https := 'S';
            idx_w := idx_w + 1;
        else
            CALL CALL pls_cartao_integracao_pck.verificar(ds_user_agent_w,
                      sistema_w.ds_user_agent,
                      'Sistema "' || ds_sistema_w || '" com user agent incorreto, esperava "%0" e obteve "%1".');
            CALL CALL pls_cartao_integracao_pck.verificar(ds_content_type_w, sistema_w.ds_content_type);
            CALL CALL pls_cartao_integracao_pck.verificar('S', sistema_w.ie_https);
            CALL CALL pls_cartao_integracao_pck.verificar(ds_accept_encoding_w, sistema_w.ds_accept_encoding);
            CALL CALL pls_cartao_integracao_pck.verificar(ambiente_p.api_url, sistema_w.ds_host);
            CALL CALL pls_cartao_integracao_pck.verificar(ds_endpoint_w, sistema_w.ds_endpoint);
            CALL CALL pls_cartao_integracao_pck.verificar(ds_senha_proxy_p, sistema_w.ds_senha_serv_proxy);
            CALL CALL pls_cartao_integracao_pck.verificar(ds_usuario_proxy_p, sistema_w.nm_usuario_serv_proxy);
            CALL CALL pls_cartao_integracao_pck.verificar(ds_porta_proxy_p, sistema_w.nr_porta_serv_proxy);
            CALL CALL pls_cartao_integracao_pck.verificar(ds_ip_proxy_p, sistema_w.nr_ip_serv_proxy);
            CALL CALL pls_cartao_integracao_pck.verificar('A', sistema_w.ie_situacao);
            nr_seq_sistema_cancelar_w := sistema_w.nr_sequencia;
        end if;

        ds_sistema_w  := 'CIELO - Capturar Transacao';
        ds_endpoint_w := ambiente_p.api_url || current_setting('pls_cartao_integracao_pck.ds_endpoint_capturar_w')::intpd_sistemas.ds_endpoint%type;
        open c02(ds_sistema_w);
        fetch c02
            into sistema_w;
        achou_w := c02%found;
        close c02;
        if not achou_w then
            select nextval('intpd_sistemas_seq') into STRICT nr_seq_sistema_capturar_w;

            intpd_sistemas_w[idx_w].nr_sequencia := nr_seq_sistema_capturar_w;
            intpd_sistemas_w[idx_w].ds_sistema := ds_sistema_w;
            intpd_sistemas_w[idx_w].nm_usuario := nm_usuario_w;
            intpd_sistemas_w[idx_w].dt_atualizacao := clock_timestamp();
            intpd_sistemas_w[idx_w].dt_atualizacao_nrec := clock_timestamp();
            intpd_sistemas_w[idx_w].nm_usuario_nrec := nm_usuario_w;
            intpd_sistemas_w[idx_w].ie_situacao := 'A';
            intpd_sistemas_w[idx_w].nr_ip_serv_proxy := ds_ip_proxy_p;
            intpd_sistemas_w[idx_w].nr_porta_serv_proxy := ds_porta_proxy_p;
            intpd_sistemas_w[idx_w].nm_usuario_serv_proxy := ds_usuario_proxy_p;
            intpd_sistemas_w[idx_w].ds_senha_serv_proxy := ds_senha_proxy_p;
            intpd_sistemas_w[idx_w].ds_endpoint := ds_endpoint_w;
            intpd_sistemas_w[idx_w].ds_host := ambiente_p.api_url;
            intpd_sistemas_w[idx_w].ds_accept_encoding := ds_accept_encoding_w;
            intpd_sistemas_w[idx_w].ds_content_type := ds_content_type_w;
            intpd_sistemas_w[idx_w].ds_user_agent := ds_user_agent_w;
            intpd_sistemas_w[idx_w].ie_https := 'S';
        else
            CALL CALL pls_cartao_integracao_pck.verificar(ds_user_agent_w,
                      sistema_w.ds_user_agent,
                      'Sistema "' || ds_sistema_w || '" com user agent incorreto, esperava "%0" e obteve "%1".');
            CALL CALL pls_cartao_integracao_pck.verificar(ds_content_type_w, sistema_w.ds_content_type);
            CALL CALL pls_cartao_integracao_pck.verificar('S', sistema_w.ie_https);
            CALL CALL pls_cartao_integracao_pck.verificar(ds_accept_encoding_w, sistema_w.ds_accept_encoding);
            CALL CALL pls_cartao_integracao_pck.verificar(ambiente_p.api_url, sistema_w.ds_host);
            CALL CALL pls_cartao_integracao_pck.verificar(ds_endpoint_w, sistema_w.ds_endpoint);
            CALL CALL pls_cartao_integracao_pck.verificar(ds_senha_proxy_p, sistema_w.ds_senha_serv_proxy);
            CALL CALL pls_cartao_integracao_pck.verificar(ds_usuario_proxy_p, sistema_w.nm_usuario_serv_proxy);
            CALL CALL pls_cartao_integracao_pck.verificar(ds_porta_proxy_p, sistema_w.nr_porta_serv_proxy);
            CALL CALL pls_cartao_integracao_pck.verificar(ds_ip_proxy_p, sistema_w.nr_ip_serv_proxy);
            CALL CALL pls_cartao_integracao_pck.verificar('A', sistema_w.ie_situacao);
            nr_seq_sistema_capturar_w := sistema_w.nr_sequencia;
        end if;

        forall i in intpd_sistemas_w.first .. intpd_sistemas_w.last
            insert into intpd_sistemas values intpd_sistemas_w(i);

        idx_w := 1;
        open c03(current_setting('pls_cartao_integracao_pck.ie_evento_recorrencia_propria')::valor_dominio.vl_dominio%type);
        fetch c03
            into evento_w;
        achou_w := c03%found;
        close c03;
        if not achou_w then
            select nextval('intpd_eventos_seq') into STRICT nr_seq_evento_pagto_w;

            intpd_eventos_w[idx_w].nr_sequencia := nr_seq_evento_pagto_w;
            intpd_eventos_w[idx_w].nm_usuario := nm_usuario_w;
            intpd_eventos_w[idx_w].dt_atualizacao := clock_timestamp();
            intpd_eventos_w[idx_w].dt_atualizacao_nrec := clock_timestamp();
            intpd_eventos_w[idx_w].nm_usuario_nrec := nm_usuario_w;
            intpd_eventos_w[idx_w].ie_evento := current_setting('pls_cartao_integracao_pck.ie_evento_recorrencia_propria')::valor_dominio.vl_dominio%type;
            intpd_eventos_w[idx_w].ie_situacao := 'A';
            intpd_eventos_w[idx_w].ie_envia_recebe := null;
            intpd_eventos_w[idx_w].nr_seq_classif := null;
            idx_w := idx_w + 1;
        else
            CALL CALL pls_cartao_integracao_pck.verificar('A', evento_w.ie_situacao);
            CALL CALL pls_cartao_integracao_pck.verificar(null, evento_w.ie_envia_recebe);
            CALL CALL pls_cartao_integracao_pck.verificar(null, evento_w.nr_seq_classif);
            nr_seq_evento_pagto_w := evento_w.nr_sequencia;
        end if;

        open c03(current_setting('pls_cartao_integracao_pck.ie_evento_cancelar_transacao')::valor_dominio.vl_dominio%type);
        fetch c03
            into evento_w;
        achou_w := c03%found;
        close c03;
        if not achou_w then
            select nextval('intpd_eventos_seq') into STRICT nr_seq_evento_cancelar_w;

            intpd_eventos_w[idx_w].nr_sequencia := nr_seq_evento_cancelar_w;
            intpd_eventos_w[idx_w].nm_usuario := nm_usuario_w;
            intpd_eventos_w[idx_w].dt_atualizacao := clock_timestamp();
            intpd_eventos_w[idx_w].dt_atualizacao_nrec := clock_timestamp();
            intpd_eventos_w[idx_w].nm_usuario_nrec := nm_usuario_w;
            intpd_eventos_w[idx_w].ie_evento := current_setting('pls_cartao_integracao_pck.ie_evento_cancelar_transacao')::valor_dominio.vl_dominio%type;
            intpd_eventos_w[idx_w].ie_situacao := 'A';
            intpd_eventos_w[idx_w].ie_envia_recebe := null;
            intpd_eventos_w[idx_w].nr_seq_classif := null;
            idx_w := idx_w + 1;
        else
            CALL CALL pls_cartao_integracao_pck.verificar('A', evento_w.ie_situacao);
            CALL CALL pls_cartao_integracao_pck.verificar(null, evento_w.ie_envia_recebe);
            CALL CALL pls_cartao_integracao_pck.verificar(null, evento_w.nr_seq_classif);
            nr_seq_evento_cancelar_w := evento_w.nr_sequencia;
        end if;
        open c03(current_setting('pls_cartao_integracao_pck.ie_evento_capturar_transacao')::valor_dominio.vl_dominio%type);
        fetch c03
            into evento_w;
        achou_w := c03%found;
        close c03;
        if not achou_w then
            select nextval('intpd_eventos_seq') into STRICT nr_seq_evento_capturar_w;

            intpd_eventos_w[idx_w].nr_sequencia := nr_seq_evento_capturar_w;
            intpd_eventos_w[idx_w].nm_usuario := nm_usuario_w;
            intpd_eventos_w[idx_w].dt_atualizacao := clock_timestamp();
            intpd_eventos_w[idx_w].dt_atualizacao_nrec := clock_timestamp();
            intpd_eventos_w[idx_w].nm_usuario_nrec := nm_usuario_w;
            intpd_eventos_w[idx_w].ie_evento := current_setting('pls_cartao_integracao_pck.ie_evento_capturar_transacao')::valor_dominio.vl_dominio%type;
            intpd_eventos_w[idx_w].ie_situacao := 'A';
            intpd_eventos_w[idx_w].ie_envia_recebe := null;
            intpd_eventos_w[idx_w].nr_seq_classif := null;
        else
            CALL CALL pls_cartao_integracao_pck.verificar('A', evento_w.ie_situacao);
            CALL CALL pls_cartao_integracao_pck.verificar(null, evento_w.ie_envia_recebe);
            CALL CALL pls_cartao_integracao_pck.verificar(null, evento_w.nr_seq_classif);
            nr_seq_evento_capturar_w := evento_w.nr_sequencia;
        end if;

        forall i in intpd_eventos_w.first .. intpd_eventos_w.last
            insert into intpd_eventos values intpd_eventos_w(i);
        idx_w := 1;

        open c07(current_setting('pls_cartao_integracao_pck.ie_evento_recorrencia_propria')::valor_dominio.vl_dominio%type);
        fetch c07
            into config_eventos_w;
        achou_w := c07%found;
        close c07;

        if not achou_w then
            select nextval('intpd_config_eventos_seq') into STRICT intpd_config_eventos_w[idx_w].nr_sequencia;

            intpd_config_eventos_w[idx_w].nm_usuario := nm_usuario_w;
            intpd_config_eventos_w[idx_w].dt_atualizacao := clock_timestamp();
            intpd_config_eventos_w[idx_w].nm_usuario_nrec := nm_usuario_w;
            intpd_config_eventos_w[idx_w].dt_atualizacao_nrec := clock_timestamp();
            intpd_config_eventos_w[idx_w].ie_envia_recebe := 'E';
            intpd_config_eventos_w[idx_w].nr_seq_proj_json := nr_seq_proj_json_pagto_w;
            intpd_config_eventos_w[idx_w].ie_evento := current_setting('pls_cartao_integracao_pck.ie_evento_recorrencia_propria')::valor_dominio.vl_dominio%type;
            idx_w := idx_w + 1;
        else
            CALL CALL pls_cartao_integracao_pck.verificar(config_eventos_w.nr_seq_proj_json, nr_seq_proj_json_pagto_w);
            CALL CALL pls_cartao_integracao_pck.verificar(config_eventos_w.ie_envia_recebe, 'E');
        end if;

        open c07(current_setting('pls_cartao_integracao_pck.ie_evento_capturar_transacao')::valor_dominio.vl_dominio%type);
        fetch c07
            into config_eventos_w;
        achou_w := c07%found;
        close c07;

        if not achou_w then
            select nextval('intpd_config_eventos_seq') into STRICT intpd_config_eventos_w[idx_w].nr_sequencia;

            intpd_config_eventos_w[idx_w].nm_usuario := nm_usuario_w;
            intpd_config_eventos_w[idx_w].dt_atualizacao := clock_timestamp();
            intpd_config_eventos_w[idx_w].nm_usuario_nrec := nm_usuario_w;
            intpd_config_eventos_w[idx_w].dt_atualizacao_nrec := clock_timestamp();
            intpd_config_eventos_w[idx_w].ie_envia_recebe := 'E';
            intpd_config_eventos_w[idx_w].nr_seq_proj_json := nr_seq_proj_json_capturar_w;
            intpd_config_eventos_w[idx_w].ie_evento := current_setting('pls_cartao_integracao_pck.ie_evento_capturar_transacao')::valor_dominio.vl_dominio%type;
            idx_w := idx_w + 1;
        else
            CALL CALL pls_cartao_integracao_pck.verificar(config_eventos_w.nr_seq_proj_json, nr_seq_proj_json_capturar_w);
            CALL CALL pls_cartao_integracao_pck.verificar(config_eventos_w.ie_envia_recebe, 'E');
        end if;

        open c07(current_setting('pls_cartao_integracao_pck.ie_evento_cancelar_transacao')::valor_dominio.vl_dominio%type);
        fetch c07
            into config_eventos_w;
        achou_w := c07%found;
        close c07;

        if not achou_w then
            select nextval('intpd_config_eventos_seq') into STRICT intpd_config_eventos_w[idx_w].nr_sequencia;

            intpd_config_eventos_w[idx_w].nm_usuario := nm_usuario_w;
            intpd_config_eventos_w[idx_w].dt_atualizacao := clock_timestamp();
            intpd_config_eventos_w[idx_w].nm_usuario_nrec := nm_usuario_w;
            intpd_config_eventos_w[idx_w].dt_atualizacao_nrec := clock_timestamp();
            intpd_config_eventos_w[idx_w].ie_envia_recebe := 'E';
            intpd_config_eventos_w[idx_w].nr_seq_proj_json := nr_seq_proj_json_cancelar_w;
            intpd_config_eventos_w[idx_w].ie_evento := current_setting('pls_cartao_integracao_pck.ie_evento_cancelar_transacao')::valor_dominio.vl_dominio%type;

        else
            CALL CALL pls_cartao_integracao_pck.verificar(config_eventos_w.nr_seq_proj_json, nr_seq_proj_json_cancelar_w);
            CALL CALL pls_cartao_integracao_pck.verificar(config_eventos_w.ie_envia_recebe, 'E');
        end if;

        forall i in intpd_config_eventos_w.first .. intpd_config_eventos_w.last
            insert into intpd_config_eventos values intpd_config_eventos_w(i);

        idx_w := 1;
        open c04(nr_seq_sistema_pagto_w, nr_seq_evento_pagto_w);
        fetch c04
            into eventos_sistema_w;
        achou_w := c04%found;
        close c04;

        if not achou_w then
            select nextval('intpd_eventos_sistema_seq') into STRICT nr_seq_evento_sis_pagto_w;

            intpd_eventos_sistema_w[idx_w].nr_sequencia := nr_seq_evento_sis_pagto_w;
            intpd_eventos_sistema_w[idx_w].dt_atualizacao := clock_timestamp();
            intpd_eventos_sistema_w[idx_w].nm_usuario := nm_usuario_w;
            intpd_eventos_sistema_w[idx_w].dt_atualizacao_nrec := clock_timestamp();
            intpd_eventos_sistema_w[idx_w].nm_usuario_nrec := nm_usuario_w;
            intpd_eventos_sistema_w[idx_w].nr_seq_evento := nr_seq_evento_pagto_w;
            intpd_eventos_sistema_w[idx_w].nr_seq_sistema := nr_seq_sistema_pagto_w;
            intpd_eventos_sistema_w[idx_w].ie_formato := 'JSON';
            intpd_eventos_sistema_w[idx_w].ie_situacao := 'A';
            intpd_eventos_sistema_w[idx_w].ie_conversao := 'I';
            intpd_eventos_sistema_w[idx_w].ds_status_ok := null;
            intpd_eventos_sistema_w[idx_w].ds_status_erro := null;
            intpd_eventos_sistema_w[idx_w].nr_seq_regra_conv := null;
            intpd_eventos_sistema_w[idx_w].ds_procedure := 'PLS_CARTAO_INTEGRACAO_PCK.RETORNO_PAGTO_CARTAO_CR()';
            intpd_eventos_sistema_w[idx_w].ds_id_origin := null;
            intpd_eventos_sistema_w[idx_w].nr_seq_proj_json := nr_seq_proj_json_pagto_w;
            intpd_eventos_sistema_w[idx_w].ie_metodo_rest := 'POST';
            intpd_eventos_sistema_w[idx_w].ie_protocolo_integracao := 'REST';
            intpd_eventos_sistema_w[idx_w].nr_seq_ordem_exec := null;
            idx_w := idx_w + 1;
        else
            nr_seq_evento_sis_pagto_w := eventos_sistema_w.nr_sequencia;
        end if;

        open c04(nr_seq_sistema_cancelar_w, nr_seq_evento_cancelar_w);
        fetch c04
            into eventos_sistema_w;
        achou_w := c04%found;
        close c04;

        if not achou_w then
            select nextval('intpd_eventos_sistema_seq') into STRICT nr_seq_evento_sis_cancelar_w;

            intpd_eventos_sistema_w[idx_w].nr_sequencia := nr_seq_evento_sis_cancelar_w;
            intpd_eventos_sistema_w[idx_w].dt_atualizacao := clock_timestamp();
            intpd_eventos_sistema_w[idx_w].nm_usuario := nm_usuario_w;
            intpd_eventos_sistema_w[idx_w].dt_atualizacao_nrec := clock_timestamp();
            intpd_eventos_sistema_w[idx_w].nm_usuario_nrec := nm_usuario_w;
            intpd_eventos_sistema_w[idx_w].nr_seq_evento := nr_seq_evento_cancelar_w;
            intpd_eventos_sistema_w[idx_w].nr_seq_sistema := nr_seq_sistema_cancelar_w;
            intpd_eventos_sistema_w[idx_w].ie_formato := 'JSON';
            intpd_eventos_sistema_w[idx_w].ie_situacao := 'A';
            intpd_eventos_sistema_w[idx_w].ie_conversao := 'I';
            intpd_eventos_sistema_w[idx_w].ds_status_ok := null;
            intpd_eventos_sistema_w[idx_w].ds_status_erro := null;
            intpd_eventos_sistema_w[idx_w].nr_seq_regra_conv := null;
            intpd_eventos_sistema_w[idx_w].ds_procedure := 'PLS_CARTAO_INTEGRACAO_PCK.RETORNO_CANCELAR_TRANSACAO';
            intpd_eventos_sistema_w[idx_w].ds_id_origin := null;
            intpd_eventos_sistema_w[idx_w].nr_seq_proj_json := nr_seq_proj_json_cancelar_w;
            intpd_eventos_sistema_w[idx_w].ie_metodo_rest := 'PUT';
            intpd_eventos_sistema_w[idx_w].ie_protocolo_integracao := 'REST';
            intpd_eventos_sistema_w[idx_w].nr_seq_ordem_exec := null;
            idx_w := idx_w + 1;
        else
            nr_seq_evento_sis_cancelar_w := eventos_sistema_w.nr_sequencia;
        end if;

        open c04(nr_seq_sistema_capturar_w, nr_seq_evento_capturar_w);
        fetch c04
            into eventos_sistema_w;
        achou_w := c04%found;
        close c04;

        if not achou_w then
            select nextval('intpd_eventos_sistema_seq') into STRICT nr_seq_evento_sis_capturar_w;

            intpd_eventos_sistema_w[idx_w].nr_sequencia := nr_seq_evento_sis_capturar_w;
            intpd_eventos_sistema_w[idx_w].dt_atualizacao := clock_timestamp();
            intpd_eventos_sistema_w[idx_w].nm_usuario := nm_usuario_w;
            intpd_eventos_sistema_w[idx_w].dt_atualizacao_nrec := clock_timestamp();
            intpd_eventos_sistema_w[idx_w].nm_usuario_nrec := nm_usuario_w;
            intpd_eventos_sistema_w[idx_w].nr_seq_evento := nr_seq_evento_capturar_w;
            intpd_eventos_sistema_w[idx_w].nr_seq_sistema := nr_seq_sistema_capturar_w;
            intpd_eventos_sistema_w[idx_w].ie_formato := 'JSON';
            intpd_eventos_sistema_w[idx_w].ie_situacao := 'A';
            intpd_eventos_sistema_w[idx_w].ie_conversao := 'I';
            intpd_eventos_sistema_w[idx_w].ds_status_ok := null;
            intpd_eventos_sistema_w[idx_w].ds_status_erro := null;
            intpd_eventos_sistema_w[idx_w].nr_seq_regra_conv := null;
            intpd_eventos_sistema_w[idx_w].ds_procedure := 'PLS_CARTAO_INTEGRACAO_PCK.RETORNO_CAPTURA_TRANSACAO';
            intpd_eventos_sistema_w[idx_w].ds_id_origin := null;
            intpd_eventos_sistema_w[idx_w].nr_seq_proj_json := nr_seq_proj_json_capturar_w;
            intpd_eventos_sistema_w[idx_w].ie_metodo_rest := 'PUT';
            intpd_eventos_sistema_w[idx_w].ie_protocolo_integracao := 'REST';
            intpd_eventos_sistema_w[idx_w].nr_seq_ordem_exec := null;
        else
            nr_seq_evento_sis_capturar_w := eventos_sistema_w.nr_sequencia;
        end if;

        forall i in intpd_eventos_sistema_w.first .. intpd_eventos_sistema_w.last
            insert into intpd_eventos_sistema values intpd_eventos_sistema_w(i);

        idx_w := 1;
        open c05(nr_seq_evento_sis_pagto_w, 'MerchantKey');
        fetch c05
            into cabecalho_w;
        achou_w := c05%found;
        close c05;
        if not achou_w then
            select nextval('intpd_eventos_cabecalho_seq') into STRICT intpd_eventos_cabecalho_w[idx_w].nr_sequencia;

            intpd_eventos_cabecalho_w[idx_w].nm_usuario := nm_usuario_w;
            intpd_eventos_cabecalho_w[idx_w].dt_atualizacao := clock_timestamp();
            intpd_eventos_cabecalho_w[idx_w].dt_atualizacao_nrec := clock_timestamp();
            intpd_eventos_cabecalho_w[idx_w].nm_usuario_nrec := nm_usuario_w;
            intpd_eventos_cabecalho_w[idx_w].ds_header_name := 'MerchantKey';
            intpd_eventos_cabecalho_w[idx_w].ds_value := merchant_key_p;
            intpd_eventos_cabecalho_w[idx_w].nr_seq_evento_sis := nr_seq_evento_sis_pagto_w;
            idx_w := idx_w + 1;
        else
            CALL CALL pls_cartao_integracao_pck.verificar(merchant_key_p, cabecalho_w.ds_value);
        end if;

        open c05(nr_seq_evento_sis_pagto_w, 'MerchantId');
        fetch c05
            into cabecalho_w;
        achou_w := c05%found;
        close c05;
        if not achou_w then
            select nextval('intpd_eventos_cabecalho_seq') into STRICT intpd_eventos_cabecalho_w[idx_w].nr_sequencia;

            intpd_eventos_cabecalho_w[idx_w].nm_usuario := nm_usuario_w;
            intpd_eventos_cabecalho_w[idx_w].dt_atualizacao := clock_timestamp();
            intpd_eventos_cabecalho_w[idx_w].dt_atualizacao_nrec := clock_timestamp();
            intpd_eventos_cabecalho_w[idx_w].nm_usuario_nrec := nm_usuario_w;
            intpd_eventos_cabecalho_w[idx_w].ds_header_name := 'MerchantId';
            intpd_eventos_cabecalho_w[idx_w].ds_value := merchant_id_p;
            intpd_eventos_cabecalho_w[idx_w].nr_seq_evento_sis := nr_seq_evento_sis_pagto_w;
            idx_w := idx_w + 1;
        else
            CALL CALL pls_cartao_integracao_pck.verificar(merchant_id_p, cabecalho_w.ds_value);
        end if;

        open c05(nr_seq_evento_sis_cancelar_w, 'MerchantKey');
        fetch c05
            into cabecalho_w;
        achou_w := c05%found;
        close c05;
        if not achou_w then
            select nextval('intpd_eventos_cabecalho_seq') into STRICT intpd_eventos_cabecalho_w[idx_w].nr_sequencia;

            intpd_eventos_cabecalho_w[idx_w].nm_usuario := nm_usuario_w;
            intpd_eventos_cabecalho_w[idx_w].dt_atualizacao := clock_timestamp();
            intpd_eventos_cabecalho_w[idx_w].dt_atualizacao_nrec := clock_timestamp();
            intpd_eventos_cabecalho_w[idx_w].nm_usuario_nrec := nm_usuario_w;
            intpd_eventos_cabecalho_w[idx_w].ds_header_name := 'MerchantKey';
            intpd_eventos_cabecalho_w[idx_w].ds_value := merchant_key_p;
            intpd_eventos_cabecalho_w[idx_w].nr_seq_evento_sis := nr_seq_evento_sis_cancelar_w;
            idx_w := idx_w + 1;
        else
            CALL CALL pls_cartao_integracao_pck.verificar(merchant_key_p, cabecalho_w.ds_value);
        end if;

        open c05(nr_seq_evento_sis_cancelar_w, 'MerchantId');
        fetch c05
            into cabecalho_w;
        achou_w := c05%found;
        close c05;
        if not achou_w then
            select nextval('intpd_eventos_cabecalho_seq') into STRICT intpd_eventos_cabecalho_w[idx_w].nr_sequencia;

            intpd_eventos_cabecalho_w[idx_w].nm_usuario := nm_usuario_w;
            intpd_eventos_cabecalho_w[idx_w].dt_atualizacao := clock_timestamp();
            intpd_eventos_cabecalho_w[idx_w].dt_atualizacao_nrec := clock_timestamp();
            intpd_eventos_cabecalho_w[idx_w].nm_usuario_nrec := nm_usuario_w;
            intpd_eventos_cabecalho_w[idx_w].ds_header_name := 'MerchantId';
            intpd_eventos_cabecalho_w[idx_w].ds_value := merchant_id_p;
            intpd_eventos_cabecalho_w[idx_w].nr_seq_evento_sis := nr_seq_evento_sis_cancelar_w;
            idx_w := idx_w + 1;
        else
            CALL CALL pls_cartao_integracao_pck.verificar(merchant_id_p, cabecalho_w.ds_value);
        end if;
        open c05(nr_seq_evento_sis_capturar_w, 'MerchantKey');
        fetch c05
            into cabecalho_w;
        achou_w := c05%found;
        close c05;
        if not achou_w then
            select nextval('intpd_eventos_cabecalho_seq') into STRICT intpd_eventos_cabecalho_w[idx_w].nr_sequencia;

            intpd_eventos_cabecalho_w[idx_w].nm_usuario := nm_usuario_w;
            intpd_eventos_cabecalho_w[idx_w].dt_atualizacao := clock_timestamp();
            intpd_eventos_cabecalho_w[idx_w].dt_atualizacao_nrec := clock_timestamp();
            intpd_eventos_cabecalho_w[idx_w].nm_usuario_nrec := nm_usuario_w;
            intpd_eventos_cabecalho_w[idx_w].ds_header_name := 'MerchantKey';
            intpd_eventos_cabecalho_w[idx_w].ds_value := merchant_key_p;
            intpd_eventos_cabecalho_w[idx_w].nr_seq_evento_sis := nr_seq_evento_sis_capturar_w;
            idx_w := idx_w + 1;
        else
            CALL CALL pls_cartao_integracao_pck.verificar(merchant_key_p, cabecalho_w.ds_value);
        end if;

        open c05(nr_seq_evento_sis_capturar_w, 'MerchantId');
        fetch c05
            into cabecalho_w;
        achou_w := c05%found;
        close c05;
        if not achou_w then
            select nextval('intpd_eventos_cabecalho_seq') into STRICT intpd_eventos_cabecalho_w[idx_w].nr_sequencia;

            intpd_eventos_cabecalho_w[idx_w].nm_usuario := nm_usuario_w;
            intpd_eventos_cabecalho_w[idx_w].dt_atualizacao := clock_timestamp();
            intpd_eventos_cabecalho_w[idx_w].dt_atualizacao_nrec := clock_timestamp();
            intpd_eventos_cabecalho_w[idx_w].nm_usuario_nrec := nm_usuario_w;
            intpd_eventos_cabecalho_w[idx_w].ds_header_name := 'MerchantId';
            intpd_eventos_cabecalho_w[idx_w].ds_value := merchant_id_p;
            intpd_eventos_cabecalho_w[idx_w].nr_seq_evento_sis := nr_seq_evento_sis_capturar_w;
        else
            CALL CALL pls_cartao_integracao_pck.verificar(merchant_id_p, cabecalho_w.ds_value);
        end if;

        --UPLS

        forall i in intpd_eventos_cabecalho_w.first .. intpd_eventos_cabecalho_w.last
            insert into intpd_eventos_cabecalho values intpd_eventos_cabecalho_w(i);

    end;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cartao_integracao_pck.configurar (ambiente_p ambiente_r, merchant_id_p text, merchant_key_p text, nm_usuario_p text, ds_ip_proxy_p text default null, ds_porta_proxy_p text default null, ds_usuario_proxy_p text default null, ds_senha_proxy_p text default null) FROM PUBLIC;
