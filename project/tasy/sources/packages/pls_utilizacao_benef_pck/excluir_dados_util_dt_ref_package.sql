-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_utilizacao_benef_pck.excluir_dados_util_dt_ref ( dt_referencia_p timestamp, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Exclui os dados anteriores a data de referencia passada
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------
Pontos de atencao:
	Carrega os dados dos itens e utilizacao, e passa para a rotina que exclui de fato
	
	Caso nao seja informada a data, a operacao sera abortada
Alteracoes:
-------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_item_util_w	dbms_sql.number_table;
nr_seq_util_w		dbms_sql.number_table;

-- Cursor para carregar todos os itens a serem apagados, nao faz referencia direta 
-- com o beneficiario, para evitar diversas aberturas desnecessarias de cursor, ganhando performance.
c01 CURSOR(	dt_referencia_pc	timestamp,
		cd_estabelecimento_pc	estabelecimento.cd_estabelecimento%type) FOR
	SELECT	a.nr_sequencia
	from	w_pls_util_benef_item	a,
		w_pls_utilizacao_benef	b
	where	b.nr_sequencia		= a.nr_seq_util_benef
	and	b.cd_estabelecimento	= cd_estabelecimento_pc
	and	b.dt_atualizacao	<= dt_referencia_pc;
	
-- Cursor para carregar todos os segurados a serem apagados
c02 CURSOR(	dt_referencia_pc	timestamp,
		cd_estabelecimento_pc	estabelecimento.cd_estabelecimento%type) FOR
	SELECT	a.nr_sequencia
	from	w_pls_utilizacao_benef	a
	where	a.cd_estabelecimento	= cd_estabelecimento_pc
	and	a.dt_atualizacao	<= dt_referencia_pc;

BEGIN

-- Verifica se a data foi informada
if (coalesce(dt_referencia_p::text, '') = '') then

	CALL wheb_mensagem_pck.exibir_mensagem_abort(784748);
end if;

begin
	-- Carrega todos os itens e manda para a rotina de exclusao
	open c01(	dt_referencia_p,
			cd_estabelecimento_p);
	loop
			
		fetch c01 bulk collect into nr_seq_item_util_w limit pls_util_pck.qt_registro_transacao_w;
		exit when nr_seq_item_util_w.count = 0;
				
		nr_seq_item_util_w := pls_utilizacao_benef_pck.excluir_item_util_benef(nr_seq_item_util_w, 'S', 'S');
	end loop; -- fim excluir itens
	close c01;

	-- Excluir os beneficiarios
	open c02(	dt_referencia_p,
			cd_estabelecimento_p);

	loop
		fetch c02 bulk collect into nr_seq_util_w limit pls_util_pck.qt_registro_transacao_w;
		exit when nr_seq_util_w.count = 0;
			
		nr_seq_util_w := pls_utilizacao_benef_pck.excluir_util_benef(nr_seq_util_w, 'S', 'S');
	end loop; -- fim excluir beneficiarios
	close c02;

exception
	
	when others then
		
		-- Verifica se ficou algum cursor aberto, e entao fecha ele
		if (c01%isopen) then
			close c01;
		end if;
		
		if (c02%isopen) then
			close c02;
		end if;
		
		CALL CALL pls_utilizacao_benef_pck.exibe_msg_erro_padrao();
end;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_utilizacao_benef_pck.excluir_dados_util_dt_ref ( dt_referencia_p timestamp, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
