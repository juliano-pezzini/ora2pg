-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_utilizacao_benef_pck.gerar_utilizacao_benef ( nr_seq_segurado_p pls_segurado.nr_sequencia%type, dt_inicio_p timestamp, dt_fim_p timestamp, nm_usuario_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_id_transacao_p INOUT w_pls_utilizacao_benef.nr_id_transacao%type, nr_seq_ap_regra_benef_p pls_ap_regra_util_benef.nr_sequencia%type) AS $body$
DECLARE

_ora2pg_r RECORD;
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Gerar os dados da utilizacao do beneficiario, conforme RN 389.	
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta: 
[X]  Objetos do dicionario [X] Tasy (Delphi/Java) [ X] Portal [ X]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------
Pontos de atencao:

	A geracao dos dados vai respeitar as determinacoes da RN 389, bem como
	tratar alguns parametros que a operadora vai poder customizar.
	
	Toda informacao gerada ficara disponivel em uma tabela "fisica" (volatil) para consulta.
	Atualmente sera utilizado o nm_usuario_p como "chave" para saber quais dados
	foram gerados e para quem, por conta do portal. Futuramente isto pode ser alterado
	para fins de performance.
	
	A logica de forma bem macro:
		1 - Receber de quem sera gerado a utilizacao
		2 - Validar as informacoes de entrada
		3 - Limpar os registros antigos
		4 - Carregar os parametros customizaveis
		5 - Gerar a utilizacao conforme parametrizacao

Alteracoes:
-------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_segurado_w	pls_segurado.nr_sequencia%type := nr_seq_segurado_p;
nm_usuario_w		varchar(255) := nm_usuario_p;
param_util_w		param_utilizacao_benef;
regra_util_w		regra_utilizacao_benef;

BEGIN

-- Valida os dados basicos de entrada
CALL pls_utilizacao_benef_pck.valida_inf_entrada_util(nr_seq_segurado_w, nm_usuario_w);

-- Carrega os parametros configuraveis
param_util_w := pls_utilizacao_benef_pck.obter_param_util(cd_estabelecimento_p);

select	nextval('pls_id_transacao_utl_benef_seq')
into STRICT	regra_util_w.nr_id_transacao
;

-- Alimenta o registro com os dados da regra
regra_util_w.nr_seq_segurado	:= nr_seq_segurado_w;
-- Pega a data de inicio da utilizacao
regra_util_w.dt_inicio		:= pls_utilizacao_benef_pck.obter_dt_inicio_util(param_util_w, dt_inicio_p, nr_seq_segurado_w);	
-- Pega a data fim da utilizacao
regra_util_w.dt_fim		:= fim_dia(pls_utilizacao_benef_pck.obter_dt_fim_util(param_util_w, dt_fim_p));

regra_util_w.cd_estabelecimento	:= cd_estabelecimento_p;
regra_util_w.nm_usuario		:= nm_usuario_w;
nr_id_transacao_p		:= regra_util_w.nr_id_transacao;

-- Caso nao seja processo automarizado
if (coalesce(nr_seq_ap_regra_benef_p::text, '') = '') then
	-- Limpa os dados antigos 
	CALL pls_utilizacao_benef_pck.excluir_dados_util_antigos(regra_util_w.cd_estabelecimento);
end if;

-- Gera os dados da utilizacao
SELECT * FROM pls_utilizacao_benef_pck.gerar_dados_util_benef(param_util_w, regra_util_w) INTO STRICT _ora2pg_r;
 param_util_w := _ora2pg_r.param_util_p; regra_util_w := _ora2pg_r.regra_util_p;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_utilizacao_benef_pck.gerar_utilizacao_benef ( nr_seq_segurado_p pls_segurado.nr_sequencia%type, dt_inicio_p timestamp, dt_fim_p timestamp, nm_usuario_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_id_transacao_p INOUT w_pls_utilizacao_benef.nr_id_transacao%type, nr_seq_ap_regra_benef_p pls_ap_regra_util_benef.nr_sequencia%type) FROM PUBLIC;
