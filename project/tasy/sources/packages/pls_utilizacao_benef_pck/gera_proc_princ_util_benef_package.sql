-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_utilizacao_benef_pck.gera_proc_princ_util_benef ( regra_util_p INOUT regra_utilizacao_benef) AS $body$
DECLARE

_ora2pg_r RECORD;
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Atualiza os Atendimentos com o procedimento principal
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [ ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------
Pontos de atencao:

	Essa  rotina deve apurar o procedimento principal por atendimento, e chamar 
	a rotina que efetua a gravacao no banco.
	
	Atualmente o procedimento principal de um atendimento, e o procedimento de maior
	valor contido no proprio atendimento, exceto as taxas e diarias.
		
Alteracoes:
-------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
-- Tabelas para armazenar os resultados levantados
nr_seq_util_benef_w	pls_util_cta_pck.t_number_table;
cd_procedimento_w	pls_util_cta_pck.t_number_table;
ie_origem_proced_w	pls_util_cta_pck.t_number_table;
dt_procedimento_ref_w	pls_util_cta_pck.t_date_table;
qt_procedimento_w	pls_util_cta_pck.t_number_table;

-- Cursor que levanta o procedimento principal
c01 CURSOR(	nr_id_transacao_pc	w_pls_utilizacao_benef.nr_id_transacao%type) FOR
	SELECT	distinct a.nr_sequencia,
		c.cd_procedimento,
		c.ie_origem_proced,
		c.dt_procedimento_referencia,
		-- agora busca apenas a quantidade do item principal, nao sera mais somado todas as quantidades
		max(c.qt_procedimento) qt_procedimento
	from	w_pls_utilizacao_benef	a,
		w_pls_util_benef_item	b,
		pls_conta_proc		c
	where	b.nr_seq_util_benef	= a.nr_sequencia
	and	c.nr_sequencia		= b.nr_seq_conta_proc
	-- So e definido o procedimento principal de internacoes
	and	a.ie_grupo_ans		= 'I'
	-- Somente procedimentos e pacotes devem ser elegivesi
	and	c.ie_tipo_despesa	in ('1', '4')
	and	a.nr_id_transacao	= nr_id_transacao_pc
	and	b.vl_item		= (	SELECT	max(x.vl_item) vl_item
						from	w_pls_util_benef_item	x,
							pls_conta_proc		y
						where	y.nr_sequencia		= x.nr_seq_conta_proc
						and	x.nr_seq_util_benef	= a.nr_sequencia
						and	y.ie_tipo_despesa	in ('1', '4'))
	group 	by b.vl_item, a.nr_sequencia, c.cd_procedimento, c.ie_origem_proced, c.dt_procedimento_referencia
	order by a.nr_sequencia, c.cd_procedimento, c.ie_origem_proced, c.dt_procedimento_referencia;

BEGIN

begin
	--Abre o cursor
	open c01(regra_util_p.nr_id_transacao);
	loop
	fetch c01 bulk collect into	nr_seq_util_benef_w,
					cd_procedimento_w,
					ie_origem_proced_w,
					dt_procedimento_ref_w,
					qt_procedimento_w limit pls_util_pck.qt_registro_transacao_w;
	
	exit when nr_seq_util_benef_w.count = 0;
		
		-- Manda para o banco
		SELECT * FROM pls_utilizacao_benef_pck.grava_proc_princ_util_benef(nr_seq_util_benef_w, cd_procedimento_w, ie_origem_proced_w, dt_procedimento_ref_w, qt_procedimento_w, 'S', 'S') INTO STRICT _ora2pg_r;
 nr_seq_util_benef_w := _ora2pg_r.nr_seq_util_benef_p; cd_procedimento_w := _ora2pg_r.cd_procedimento_p; ie_origem_proced_w := _ora2pg_r.ie_origem_proced_p; dt_procedimento_ref_w := _ora2pg_r.dt_procedimento_ref_p; qt_procedimento_w := _ora2pg_r.qt_procedimento_p;
			
	end loop;
	
	close c01;
exception
	when others then
	
	-- Se o cursor estiver aberto, fecha ele;
	if (c01%isopen) then
	
		close c01;
	end if;
	
	CALL CALL pls_utilizacao_benef_pck.exibe_msg_erro_padrao();
end;


END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_utilizacao_benef_pck.gera_proc_princ_util_benef ( regra_util_p INOUT regra_utilizacao_benef) FROM PUBLIC;
