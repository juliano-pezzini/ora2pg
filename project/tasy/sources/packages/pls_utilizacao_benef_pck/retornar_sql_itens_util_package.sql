-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_utilizacao_benef_pck.retornar_sql_itens_util ( param_util_p INOUT param_utilizacao_benef, regra_util_p INOUT regra_utilizacao_benef, dado_bind_p INOUT sql_pck.t_dado_bind, ie_incidencia_p text, ie_internacao_p text) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Cria o sql que ira gerar os itens da utilizacao em si
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [ ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------
Pontos de atencao:

	Quando esta rotina deve ser chamada, os "Atendimentos" da utilizacao ja devem
	estar formados, portanto sera utilizado o "sql base" para buscar os itens novamente,
	e entao sera aplicada uma "camada" para saber em qual atendimento os itens serao delegados
	
	ie_incidencia_p - Determina a incidencia dos itens base
	
	ie_internacao_p - Determina se sera:
		SI = Somente Internacao
		DI= Todos diferente de internacao

Alteracoes:
-------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_retorno_w		varchar(32000) := '';
ds_sql_base_itens_w	varchar(32000) := '';
ds_exists_proc_atend_w	varchar(2000) := '';


BEGIN

-- Primeiro levanta o sql base dos itens, com base nas parametrizacoes do usuario
ds_sql_base_itens_w := retorna_sql_base_itens(param_util_p, regra_util_p, dado_bind_p, ie_incidencia_p);

-- Levanta o exists, para ver se existe algum procedimento no atendimento
ds_exists_proc_atend_w	:= pls_utilizacao_benef_pck.retorna_exists_proc_atend('t.cd_guia_ok', 't.nr_seq_segurado');


-- Monta a busca dos itens, usando o "sql base" como "from", e fazendo a ligacao entre os atendimentos,
-- para que o agrupamento possua os itens corretos.
ds_retorno_w	:= ds_retorno_w ||	'select	w_pls_util_benef_item_seq.nextval nr_sequencia, ' || pls_util_pck.enter_w ||
					'	b.nr_sequencia nr_seq_util_benef, ' || pls_util_pck.enter_w ||
					'	t.nr_seq_conta, ' || pls_util_pck.enter_w ||
					'	t.nr_seq_conta_proc, ' || pls_util_pck.enter_w ||
					'	t.nr_seq_conta_mat, ' || pls_util_pck.enter_w ||
					'	decode(t.nr_seq_conta_proc, null, t.qt_material, t.qt_procedimento) qt_item, ' || pls_util_pck.enter_w ||
					'	decode(t.nr_seq_conta_proc, null, t.vl_item_mat, t.vl_item_proc) vl_item, ' || pls_util_pck.enter_w ||
					'	t.nr_seq_grupo_ans, ' || pls_util_pck.enter_w ||
					'	t.nr_seq_conta_rec, ' || pls_util_pck.enter_w ||
					'	t.nr_seq_conta_proc_rec, ' || pls_util_pck.enter_w ||
					'	t.nr_seq_conta_mat_rec ' || pls_util_pck.enter_w ||
					'from	( ' || ds_sql_base_itens_w || pls_util_pck.enter_w ||
					'	 ) t, ' || pls_util_pck.enter_w ||
					'	ans_grupo_despesa	a, ' || pls_util_pck.enter_w ||
					'	w_pls_utilizacao_benef	b ' || pls_util_pck.enter_w ||
					'where	a.nr_sequencia		= t.nr_seq_grupo_ans ' || pls_util_pck.enter_w ||
					'and	a.ie_grupo_ans_rn389	= b.ie_grupo_ans ' || pls_util_pck.enter_w ||
					'and	b.cd_guia_ok		= t.cd_guia_ok ' || pls_util_pck.enter_w ||
					'and	b.nr_seq_segurado	= t.nr_seq_segurado ' || pls_util_pck.enter_w;
					
					-- Somente internacao
					if (ie_internacao_p = 'SI') then
					
						ds_retorno_w	:= ds_retorno_w ||	'and	a.ie_grupo_ans_rn389	= ''I'' ' || pls_util_pck.enter_w;
					
						-- Todos diferente de internacao
					elsif (ie_internacao_p = 'DI') then
					
						-- Quando for diferente de internacao, e realizado o vinculo item a item
						ds_retorno_w	:= ds_retorno_w ||	'and	a.ie_grupo_ans_rn389	!= ''I'' ' || pls_util_pck.enter_w ||
											'and	b.cd_procedimento	= t.cd_procedimento ' || pls_util_pck.enter_w ||
											'and	b.ie_origem_proced	= t.ie_origem_proced ' || pls_util_pck.enter_w ||
											'and	b.dt_realizacao		= t.dt_procedimento ' || pls_util_pck.enter_w;
					end if;
					
					-- Se a incidencia for somente materiais, serao buscados apenas os materias que nao possuirem nenhum procedimento no atendimento
					if (ie_incidencia_p = 'M') then
					
						ds_retorno_w	:= ds_retorno_w ||	'and	not exists (	' || ds_exists_proc_atend_w ||' ) ' || pls_util_pck.enter_w;
					end if;
					
ds_retorno_w	:= ds_retorno_w ||	'and	b.cd_estabelecimento	= :cd_estabelecimento ' || pls_util_pck.enter_w ||
					'and	b.nr_id_transacao	= :nr_id_transacao ' || pls_util_pck.enter_w;
					
-- Atribui os bindings desta parte
dado_bind_p := sql_pck.bind_variable(':cd_estabelecimento', regra_util_p.cd_estabelecimento, dado_bind_p);
dado_bind_p := sql_pck.bind_variable(':nr_id_transacao', regra_util_p.nr_id_transacao, dado_bind_p);

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_utilizacao_benef_pck.retornar_sql_itens_util ( param_util_p INOUT param_utilizacao_benef, regra_util_p INOUT regra_utilizacao_benef, dado_bind_p INOUT sql_pck.t_dado_bind, ie_incidencia_p text, ie_internacao_p text) FROM PUBLIC;
