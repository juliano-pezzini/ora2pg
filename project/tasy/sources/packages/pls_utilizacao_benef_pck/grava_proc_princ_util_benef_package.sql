-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_utilizacao_benef_pck.grava_proc_princ_util_benef ( nr_seq_util_benef_p INOUT pls_util_cta_pck.t_number_table, cd_procedimento_p INOUT pls_util_cta_pck.t_number_table, ie_origem_proced_p INOUT pls_util_cta_pck.t_number_table, dt_procedimento_ref_p INOUT pls_util_cta_pck.t_date_table, qt_procedimento_p INOUT pls_util_cta_pck.t_number_table, ie_commit_p text, ie_esvaziar_table_p text) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Grava os procedimentos principais no atendimento
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [ ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------
Pontos de atencao:

	Esta rotina nao deve fazer nenhuma selecao, apenas atualizar conforme
	tabelas vituais passas por parametros
Alteracoes:
-------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
BEGIN

-- Manda para o banco
forall i in nr_seq_util_benef_p.first..nr_seq_util_benef_p.last
	update	w_pls_utilizacao_benef
	set	cd_procedimento		= cd_procedimento_p(i),
		ie_origem_proced	= ie_origem_proced_p(i),
		dt_realizacao		= dt_procedimento_ref_p(i),
		qt_utilizacao		= qt_procedimento_p(i)
	where	nr_sequencia		= nr_seq_util_benef_p(i);

	
-- Se for maracado para commitar
if (coalesce(ie_commit_p, 'N') = 'S') then

	commit;
end if;

-- Se for marcado para apagar os registros antigos
if (coalesce(ie_esvaziar_table_p, 'S') = 'S') then

	nr_seq_util_benef_p.delete;
	cd_procedimento_p.delete;
	ie_origem_proced_p.delete;
	dt_procedimento_ref_p.delete;
	qt_procedimento_p.delete;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_utilizacao_benef_pck.grava_proc_princ_util_benef ( nr_seq_util_benef_p INOUT pls_util_cta_pck.t_number_table, cd_procedimento_p INOUT pls_util_cta_pck.t_number_table, ie_origem_proced_p INOUT pls_util_cta_pck.t_number_table, dt_procedimento_ref_p INOUT pls_util_cta_pck.t_date_table, qt_procedimento_p INOUT pls_util_cta_pck.t_number_table, ie_commit_p text, ie_esvaziar_table_p text) FROM PUBLIC;
