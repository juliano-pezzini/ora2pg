-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_analise_cta_pck.replicar_partic_pos_proc ( nr_seq_analise_p pls_conta_pos_estabelecido.nr_seq_analise%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Replicar para o participante no procedimento, os participantes inseridos diretamente na analise p?s
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[ X]  Objetos do dicion?rio [X] Tasy (Delphi/Java) [ X] Portal [ X]  Relat?rios [ ] Outros:
------------------------------------------------------------------------------------------------------------------

Pontos de aten?ao:

      Quando for replicado, o participante no proc deve possuir o status C e o IE_INCLUIDO_POS_ESTAB = 'S'
      para que seja controlado nas demais rotinas esta inser?ao manual
      
      Se mudar o c01 desta rotina, verificar a necessidade de mudar o c01 da desfazer_inser_part_pos_proc,
      que deve retornar os mesmo resgistros

Altera?oes:

------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


-- carrega os participantes p?s que nao possuem a contra-partida no proc

c01 CURSOR( nr_seq_analise_pc pls_conta_pos_estabelecido.nr_seq_analise%type) FOR
  SELECT  a.nr_sequencia,
    nextval('pls_proc_participante_seq') nr_seq_proc_partic_novo,
    a.vl_administracao,
    a.vl_liberado,
    a.vl_participante_pos,
    a.cd_medico,
    b.nr_seq_conta_proc,
    a.nr_seq_grau_partic,
    a.nr_seq_cbo_saude
  from  pls_conta_pos_estab_partic  a,
    pls_conta_pos_estabelecido  b
  where a.nr_seq_conta_pos  = b.nr_sequencia
  and coalesce(a.nr_seq_proc_partic::text, '') = ''
  and a.ie_alterado_pos = 'S'
  and (b.nr_seq_conta_proc IS NOT NULL AND b.nr_seq_conta_proc::text <> '')
  and b.nr_seq_analise  = nr_seq_analise_pc;

BEGIN

-- carrega os participantes novos, como o processo atualmente ? manual, nao foi utilizado o bulk collect

for r_c01_w in c01(nr_seq_analise_p) loop

  -- envia para o banco

  insert into pls_proc_participante( nr_sequencia,       dt_atualizacao,     nm_usuario,
            dt_atualizacao_nrec,      nm_usuario_nrec,    cd_medico,
            nr_seq_grau_partic,     vl_pos_estab,     vl_participante,
            vl_honorario_medico,      ie_incluido_pos_estab,    nr_seq_conta_proc,
            ie_status,        nr_seq_cbo_saude)
            
  values (        r_c01_w.nr_seq_proc_partic_novo,  clock_timestamp(),      nm_usuario_p,
            clock_timestamp(),        nm_usuario_p,     r_c01_w.cd_medico,
            r_c01_w.nr_seq_grau_partic,   r_c01_w.vl_participante_pos,  r_c01_w.vl_liberado,
            r_c01_w.vl_administracao,   'S',        r_c01_w.nr_seq_conta_proc,
            'C',          r_c01_w.nr_seq_cbo_saude);
  -- atualiza o vinculo com o participante pos

  update  pls_conta_pos_estab_partic
  set nr_seq_proc_partic  = r_c01_w.nr_seq_proc_partic_novo
  where nr_sequencia    = r_c01_w.nr_sequencia;

end loop; -- fim participantes pos


END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_analise_cta_pck.replicar_partic_pos_proc ( nr_seq_analise_p pls_conta_pos_estabelecido.nr_seq_analise%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
