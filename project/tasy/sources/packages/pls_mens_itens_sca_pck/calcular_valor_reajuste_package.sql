-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_mens_itens_sca_pck.calcular_valor_reajuste ( nr_seq_sca_vinculo_p pls_sca_vinculo.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, dt_referencia_p pls_mensalidade_segurado.dt_mesano_referencia%type, ie_lancamento_mensalidade_p pls_sca_vinculo.ie_lancamento_mensalidade%type, ie_sca_proporcional_p text, tx_proporcional_mens_p bigint, vl_preco_sca_p INOUT pls_segurado_preco_origem.vl_preco_atual%type, vl_reajuste_indice_p INOUT pls_segurado_preco_origem.vl_preco_atual%type, nr_seq_reajuste_preco_p INOUT pls_segurado_preco_origem.nr_seq_reajuste_preco%type) AS $body$
DECLARE


nr_seq_preco_indice_w		pls_segurado_preco_origem.nr_sequencia%type;
nr_seq_reajuste_preco_w		pls_segurado_preco_origem.nr_seq_reajuste_preco%type;
vl_preco_sca_w			pls_segurado_preco_origem.vl_preco_atual%type;
vl_reajuste_indice_w		pls_segurado_preco_origem.vl_preco_atual%type;
dt_inicio_w			timestamp;
dt_fim_w			timestamp;
qt_registros_w			integer;
qt_reajuste_desfazer_w		integer;
qt_reajuste_deflator_w		integer;
tx_reajuste_correto_w		pls_reajuste.tx_reajuste_correto%type;

BEGIN
vl_preco_sca_w		:= vl_preco_sca_p;
vl_reajuste_indice_w	:= 0;
dt_inicio_w		:= trunc(dt_referencia_p, 'month');
dt_fim_w		:= fim_dia(last_day(dt_inicio_w));

select	max(nr_sequencia)
into STRICT	nr_seq_preco_indice_w
from	pls_segurado_preco_origem
where	nr_seq_vinculo_sca	= nr_seq_sca_vinculo_p
and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
and	cd_motivo_reajuste	= 'I'
and	dt_reajuste between dt_inicio_w and dt_fim_w;

--Caso nao tiver reajuste no mes atual, verifica se nos ultimos meses teve reajuste que ainda nao foi destacado na mensalidade
if (coalesce(nr_seq_preco_indice_w::text, '') = '') then
	for i in 1..4 loop
		begin
		dt_inicio_w	:= trunc(add_months(dt_referencia_p,-i), 'month');
		dt_fim_w	:= fim_dia(last_day(dt_inicio_w));
		
		select	max(nr_sequencia)
		into STRICT	nr_seq_preco_indice_w
		from	pls_segurado_preco_origem
		where	nr_seq_vinculo_sca		= nr_seq_sca_vinculo_p
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	cd_motivo_reajuste	= 'I'
		and	dt_reajuste between dt_inicio_w and dt_fim_w;
		
		--Caso tenha reajuste no mes passado, verifica se ja foi colocado o item 25 ou 35, se foi entao nao e necessario gerar novamente
		if (nr_seq_preco_indice_w IS NOT NULL AND nr_seq_preco_indice_w::text <> '') then
			if (ie_lancamento_mensalidade_p = 'C') then
				select	count(1)
				into STRICT	qt_registros_w
				from	pls_mensalidade_seg_item	c,
					pls_mensalidade_segurado	b,
					pls_mensalidade			a
				where	c.nr_seq_mensalidade_seg	= b.nr_sequencia
				and	b.nr_seq_mensalidade		= a.nr_sequencia
				and	b.nr_seq_segurado		= nr_seq_segurado_p
				and	coalesce(a.ie_cancelamento::text, '') = ''
				and	c.ie_tipo_item			= '25'
				and	b.dt_mesano_referencia		>= dt_inicio_w  LIMIT 1;
				
				if (qt_registros_w = 0) and (pls_mens_itens_pck.obter_se_item_vetor(nr_seq_segurado_p, '25', null, nr_seq_sca_vinculo_p, null) = 'S') then
					qt_registros_w := 1;
				end if;
			elsif (ie_lancamento_mensalidade_p = 'D') then
				select	count(1)
				into STRICT	qt_registros_w
				from	pls_mensalidade_seg_item	c,
					pls_mensalidade_segurado	b,
					pls_mensalidade			a
				where	c.nr_seq_mensalidade_seg	= b.nr_sequencia
				and	b.nr_seq_mensalidade		= a.nr_sequencia
				and	b.nr_seq_segurado		= nr_seq_segurado_p
				and	coalesce(a.ie_cancelamento::text, '') = ''
				and	c.ie_tipo_item			= '35'
				and	c.nr_seq_vinculo_sca		= nr_seq_sca_vinculo_p
				and	b.dt_mesano_referencia		>= dt_inicio_w  LIMIT 1;
				
				if (qt_registros_w = 0) and (pls_mens_itens_pck.obter_se_item_vetor(nr_seq_segurado_p, '35', null, nr_seq_sca_vinculo_p, null) = 'S') then
					qt_registros_w := 1;
				end if;
			end if;
			
			if (qt_registros_w > 0) then
				nr_seq_preco_indice_w	:= null; --Se o reajuste ja foi destacado na mensalidade, entao nao deve destacar novamente
			end if;
			
			exit; --Sair do loop se encontrou o reajuste
		end if;
		end;
	end loop;
end if;

if (nr_seq_preco_indice_w IS NOT NULL AND nr_seq_preco_indice_w::text <> '') then
	select	a.vl_preco_atual - a.vl_preco_ant,
		a.nr_seq_reajuste_preco,
		(select	count(1)
		from	pls_reajuste x
		where	x.nr_sequencia = a.nr_seq_reajuste
		and	(x.nr_seq_reajuste_desfazer IS NOT NULL AND x.nr_seq_reajuste_desfazer::text <> '')) qt_reajuste_desfazer,
		(select	count(1)
		from	pls_reajuste x,
			pls_reajuste y
		where	x.nr_sequencia = a.nr_seq_reajuste
		and	x.nr_sequencia = y.nr_seq_lote_deflator) qt_reajuste_deflator,
		coalesce((	select	max(x.tx_reajuste_correto)
			from	pls_reajuste x
			where	x.nr_sequencia = a.nr_seq_reajuste),0) tx_reajuste_correto
	into STRICT	vl_reajuste_indice_w,
		nr_seq_reajuste_preco_w,
		qt_reajuste_desfazer_w,
		qt_reajuste_deflator_w,
		tx_reajuste_correto_w
	from	pls_segurado_preco_origem a
	where	a.nr_sequencia = nr_seq_preco_indice_w;

	if (pls_mens_itens_pck.verificar_se_permite_reajuste(qt_reajuste_desfazer_w, qt_reajuste_deflator_w, tx_reajuste_correto_w) = 'S') then
		if (ie_sca_proporcional_p = 'S') then
			vl_reajuste_indice_w := tx_proporcional_mens_p * coalesce(vl_reajuste_indice_w,0);
		end if;
		
		if (vl_reajuste_indice_w > 0) then
			vl_preco_sca_w	:= coalesce(vl_preco_sca_w,0) - coalesce(vl_reajuste_indice_w,0);
		end if;
	else
		vl_reajuste_indice_w	:= 0;
	end if;
end if;

vl_preco_sca_p		:= vl_preco_sca_w;
vl_reajuste_indice_p	:= vl_reajuste_indice_w;
nr_seq_reajuste_preco_p	:= nr_seq_reajuste_preco_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_mens_itens_sca_pck.calcular_valor_reajuste ( nr_seq_sca_vinculo_p pls_sca_vinculo.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, dt_referencia_p pls_mensalidade_segurado.dt_mesano_referencia%type, ie_lancamento_mensalidade_p pls_sca_vinculo.ie_lancamento_mensalidade%type, ie_sca_proporcional_p text, tx_proporcional_mens_p bigint, vl_preco_sca_p INOUT pls_segurado_preco_origem.vl_preco_atual%type, vl_reajuste_indice_p INOUT pls_segurado_preco_origem.vl_preco_atual%type, nr_seq_reajuste_preco_p INOUT pls_segurado_preco_origem.nr_seq_reajuste_preco%type) FROM PUBLIC;
