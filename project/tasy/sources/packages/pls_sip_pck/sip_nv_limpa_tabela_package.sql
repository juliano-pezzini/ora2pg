-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_sip_pck.sip_nv_limpa_tabela ( nr_seq_lote_p pls_lote_sip.nr_sequencia%type) AS $body$
DECLARE


tb_rowid_w	pls_util_cta_pck.t_rowid;

-- Buscar vinculos dos dados com os itens assistenciais

vinc_dados CURSOR(nr_seq_lote_pc	pls_lote_sip.nr_sequencia%type) FOR
	SELECT	a.oid
	from	sip_lote_item_assistencial x,
		sip_nv_vinc_dados a
	where	x.nr_seq_lote = nr_seq_lote_pc
	and	a.nr_seq_item_lote = x.nr_sequencia;

-- Buscar itens assistenciais gerados

item_lote CURSOR(nr_seq_lote_pc	pls_lote_sip.nr_sequencia%type) FOR
	SELECT	a.oid
	from	sip_lote_item_assistencial a
	where	a.nr_seq_lote = nr_seq_lote_pc;

-- Buscar vinculos dos itens as regras.

regra_vinc CURSOR(nr_seq_lote_pc	pls_lote_sip.nr_sequencia%type) FOR
	SELECT	y.oid
	from	sip_nv_regra_vinc_it y
	where	exists (SELECT	1
			from	sip_nv_dados x
			where	x.nr_seq_lote_sip = nr_seq_lote_pc
	                and	x.nr_sequencia = y.nr_seq_sip_nv_dados);
	

BEGIN

-- Limpa os tempos de geracao da regra.

delete	from sip_nv_tempo_regra
where	nr_seq_lote = nr_seq_lote_p;
commit;

-- sip_nv_vinc_dados: Vinculacao dos dados aos itens assistenciais.

-- Por conta da massa muito grande de dados e ncessario deletar aos poucos com o limit.

open vinc_dados(nr_seq_lote_p);
loop
	-- Limpando registros do ultimo loop

	tb_rowid_w.delete;
	
	-- Pegar os novos registros 

	fetch vinc_dados
	bulk collect into tb_rowid_w
	limit current_setting('pls_sip_pck.qt_registro_transacao_w')::integer;
	
	-- se nao veio nada aborta

	exit when tb_rowid_w.count = 0;
	
	-- Limpa do banco.

	forall i in tb_rowid_w.first .. tb_rowid_w.last 
		delete	FROM sip_nv_vinc_dados
		where	rowid = tb_rowid_w(i);
		
	commit;
end loop;
close vinc_dados;

-- sip_lote_item_assistencial: Itens gerados para o lote.

open item_lote(nr_seq_lote_p);
loop
	-- Limpando registros do ultimo loop

	tb_rowid_w.delete;
	
	-- Pegar os novos registros 

	fetch item_lote
	bulk collect into tb_rowid_w
	limit current_setting('pls_sip_pck.qt_registro_transacao_w')::integer;
	
	-- se nao veio nada aborta

	exit when tb_rowid_w.count = 0;
	
	-- Limpa do banco.

	forall i in tb_rowid_w.first .. tb_rowid_w.last 
		delete	FROM sip_lote_item_assistencial
		where	rowid = tb_rowid_w(i);
		
	commit;
end loop;
close item_lote;

-- sip_nv_regra_vinc_it: Vinculo dos itens as regras.

open regra_vinc(nr_seq_lote_p);
loop
	-- Limpando registros do ultimo loop

	tb_rowid_w.delete;
	
	-- Pegar os novos registros 

	fetch regra_vinc
	bulk collect into tb_rowid_w
	limit current_setting('pls_sip_pck.qt_registro_transacao_w')::integer;
	
	-- se nao veio nada aborta

	exit when tb_rowid_w.count = 0;
	
	-- Limpa do banco.

	forall i in tb_rowid_w.first .. tb_rowid_w.last 
		delete	FROM sip_nv_regra_vinc_it
		where	rowid = tb_rowid_w(i);
		
	commit;
end loop;
close regra_vinc;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_sip_pck.sip_nv_limpa_tabela ( nr_seq_lote_p pls_lote_sip.nr_sequencia%type) FROM PUBLIC;
