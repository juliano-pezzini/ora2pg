-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_sip_pck.sip_nv_alimenta_dados ( nr_seq_lote_p pls_lote_sip.nr_sequencia%type, dt_periodo_inicial_p pls_lote_sip.dt_periodo_inicial%type, dt_periodo_final_p pls_lote_sip.dt_periodo_final%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE

		
tb_rowid_w		pls_util_cta_pck.t_rowid;
dt_inicio_w		pls_lote_sip.dt_periodo_inicial%type;
dt_fim_w		pls_lote_sip.dt_periodo_final%type;
nr_versao_ptu_w		varchar(10);

dados CURSOR(	nr_seq_lote_pc		pls_lote_sip.nr_sequencia%type,
		ie_controle_upd_pc	sip_nv_dados.ie_controle_upd%type := 'S') FOR
	SELECT	oid
	from	sip_nv_dados a
	where	a.nr_seq_lote_sip = nr_seq_lote_pc
	and	a.ie_controle_upd = ie_controle_upd_pc;
	
dados_incon CURSOR(	nr_seq_lote_pc		pls_lote_sip.nr_sequencia%type,
			ie_controle_upd_pc	sip_nv_dados.ie_controle_upd%type := 'S') FOR
	SELECT	oid
	from	sip_nv_vinc_incon_sist z
	where	exists (	SELECT	1
				from	sip_nv_dados a
				where	a.nr_seq_lote_sip = nr_seq_lote_pc
				and	a.ie_controle_upd = ie_controle_upd_pc
				and	a.nr_sequencia = z.nr_seq_nv_dados);
	
dados_reembolso CURSOR(	nr_seq_lote_pc		pls_lote_sip.nr_sequencia%type) FOR
	SELECT	oid
	from	sip_nv_dados a
	where	a.nr_seq_lote_sip = nr_seq_lote_pc
	and	a.ie_tipo_protocolo = 'R';


BEGIN

-- Calcular as datas para passar as datas ok para os cursores e evitar recalculo das mesmas.

dt_inicio_w	:= inicio_dia(dt_periodo_inicial_p);
dt_fim_w	:= fim_dia(dt_periodo_final_p);

-- update para ter como identificar os registros que precisam ser excluidos

open dados(nr_seq_lote_p);
loop
	tb_rowid_w.delete;
	
	fetch dados bulk collect into tb_rowid_w
	limit current_setting('pls_sip_pck.qt_registro_transacao_w')::integer;
	
	exit when tb_rowid_w.count = 0;
	
	forall i in tb_rowid_w.first .. tb_rowid_w.last
		update 	sip_nv_dados
		set	ie_controle_upd = 'N'
		where	rowid = tb_rowid_w(i);
	commit;
end loop;
close dados;

-- Necessario no levante do CBO, e deixado aqui por performance

nr_versao_ptu_w := ptu_obter_versao_dominio('A500', pls_obter_interf_ptu(cd_estabelecimento_p, null, clock_timestamp(), 'A500'));


if (current_setting('pls_sip_pck.ie_rio_preto_w')::varchar(1) = 'S') then
	-- Faz o merge dos procedimentos.

	merge into sip_nv_dados dest
	using(SELECT	a.cd_guia,
			CASE WHEN a.ie_tipo_guia='3' THEN  null  ELSE a.cd_guia_referencia END  cd_guia_referencia,
			a.nr_seq_conta,
			a.nr_sequencia nr_seq_conta_proc,
			a.vl_liberado,
			nr_seq_lote_p nr_seq_lote_sip,
			a.nr_seq_protocolo,
			a.ie_tipo_guia,
			a.ie_origem_proced,
			a.cd_procedimento,
			a.nr_seq_clinica,
			a.ie_regime_internacao,
			a.nr_seq_tipo_atendimento,
			a.nr_seq_prestador_exec,
			a.qt_nasc_vivos_total_conta qt_nasc_vivos_total,
			pls_sip_pck.sip_retorna_cbo( a.ie_tipo_guia, a.nr_seq_cbo_saude, a.nr_sequencia, a.nr_seq_nota_cobranca, nr_versao_ptu_w) nr_seq_cbo_saude,
			a.cd_cid_principal_conta cd_doenca_dig,
			a.ie_sexo_benef ie_sexo,
			a.dt_nascimento_benef dt_nascimento,
			a.qt_procedimento qt_proc_mat,
			a.cd_cat_cid_principal_conta cd_categoria_cid,
			a.ie_tipo_protocolo,
			a.nr_seq_congenere,
			a.ie_glosa ie_glosa_item,
			pls_sip_pck.sip_nv_retorna_uf(
				a.ie_tipo_protocolo, a.nr_seq_congenere,
				a.nr_seq_prestador_exec, a.nr_sequencia, 
				a.cd_pessoa_fisica_conta, a.cd_cgc_conta) sg_uf,
			a.ie_segmentacao_benef ie_segmentacao,
			a.ie_tipo_contratacao_benef ie_tipo_contratacao,
			coalesce(a.ie_tipo_segurado,b.ie_tipo_segurado) ie_tipo_segurado,
			a.dt_mes_competencia,
			CASE WHEN current_setting('pls_sip_pck.param_w')::param.ie_vinc_internacao='N' THEN  CASE WHEN a.ie_internado='S' THEN  'I'  ELSE 'A' END  WHEN current_setting('pls_sip_pck.param_w')::param.ie_vinc_internacao='S' THEN  CASE WHEN pls_obter_se_internado_alt(a.nr_seq_conta, 'S', a.ie_tipo_guia, a.nr_seq_guia, a.nr_seq_segurado, a.cd_guia_referencia, a.nr_seq_analise)='I' THEN  'I'  ELSE 'A' END  END  ie_tipo_atendimento,
			a.qt_idade_benef qt_idade,
			a.qt_idade_benef_mes qt_idade_mes,
			a.qt_idade_benef_dia qt_idade_dia,
			a.nr_seq_segurado,
			a.cd_pessoa_fisica_conta cd_pf_reembolso,
			a.cd_cgc_conta cd_pj_reembolso,
			a.ie_tipo_despesa,
			a.nr_documento,
			a.dt_entrada_conta dt_inicio_atendimento,
			a.dt_alta_conta dt_fim_atendimento,
			a.qt_horas_atendimento_conta qt_horas_atendimento,
			'CM' ie_origem_info,
			-- Se nao tem a data de atendimento da conta considera a data incial do lote

			trunc(coalesce(a.dt_atendimento_conta, dt_inicio_w), 'Q') dt_atendimento,
			a.nr_seq_pacote,
			a.dt_procedimento dt_item_referencia,
			a.ie_regime_atendimento,
			a.ie_saude_ocupacional
		from	pls_conta_proc_v a,
			
			pls_segurado b
		where	a.cd_estabelecimento_prot = cd_estabelecimento_p
		and	a.dt_mes_competencia between dt_inicio_w and dt_fim_w
	and  coalesce(a.nr_seq_prot_referencia::text, '') = ''
	  -- so aceita protocolo digitado e integrado

	  and  a.ie_situacao_protocolo in ('D', 'T')
	  -- conta cancelada ou glosa tambem nao entra, somente conta fechada e A700 finalizado

	  and  a.ie_status_conta in ('F', 'S')
	  and  a.ie_status not in ('D', 'M')
	  -- se for segurado de operadora ou transferencia de responsabilidade ou nao tiver tipo informado

	  and  b.nr_sequencia      = a.nr_seq_segurado
	  and (a.ie_tipo_segurado in ('B', 'R') or coalesce(a.ie_tipo_segurado::text, '') = '')) src
	on (dest.nr_seq_lote_sip  = src.nr_seq_lote_sip and
	  dest.nr_seq_conta_proc  = src.nr_seq_conta_proc and
	  -- Verifica se a origem da informacao e de Contas medicas, se faz necessario por que

	  -- para recurso e contestacao gravamos a sequencia do conta proc e conta mat

	  -- estes itens de contas medicas so devem atualizar este tipo de origem.

	  -- Nao podemos fazer com que neste merge seja atualizado as informacoes de recurso  ou contestacao

	  -- por que os itens dessas origens podem nao pertencer ao periodo do SIP informado, fazendo com

	  -- que itens nao entrem ou nao sejam atualizados.

	  dest.ie_origem_info  = src.ie_origem_info)
	-- Quando o registro ainda nao esta na tabela grava ele

	when  not matched then
	  insert(  dest.nr_sequencia, dest.nr_seq_lote_sip, dest.cd_guia, dest.cd_guia_referencia,
	      dest.nr_seq_conta, dest.nr_seq_conta_proc, dest.ie_tipo_guia,
	      dest.nr_seq_protocolo, dest.cd_procedimento, dest.ie_origem_proced, dest.nr_seq_prestador_exec,
	      dest.nr_seq_cbo_saude, dest.cd_doenca_dig, dest.cd_categoria_cid, dest.nr_seq_tipo_atendimento,
	      dest.nr_seq_clinica, dest.ie_regime_internacao, dest.dt_nascimento, dest.ie_sexo,
	      dest.qt_proc_mat, dest.ie_glosa_item, dest.ie_tipo_protocolo,
	      dest.nr_seq_congenere, dest.sg_uf, dest.ie_tipo_contratacao, dest.ie_segmentacao,
	      dest.ie_tipo_segurado, dest.dt_mes_competencia, dest.qt_idade, dest.qt_idade_mes,
	      dest.qt_idade_dia, dest.ie_tipo_atendimento, dest.vl_liberado, dest.ie_segmentacao_sip,
	      dest.nr_seq_segurado, dest.ie_controle_upd, dest.ie_tipo_despesa, dest.qt_nasc_vivos_total,
	      dest.nr_documento, dest.dt_inicio_atendimento, dest.dt_fim_atendimento, dest.qt_horas_atendimento,
	      dest.ie_origem_info, dest.dt_atendimento, dest.nm_usuario, dest.nm_usuario_nrec,
	      dest.dt_atualizacao, dest.dt_atualizacao_nrec, dest.cd_pf_reembolso, dest.cd_pj_reembolso, dest.nr_seq_pacote,
	      dest.dt_item_referencia, dest.ie_regime_atendimento, dest.ie_saude_ocupacional)
	  values (nextval('sip_nv_dados_seq'), src.nr_seq_lote_sip, src.cd_guia, src.cd_guia_referencia,
	      src.nr_seq_conta, src.nr_seq_conta_proc, src.ie_tipo_guia,
	      src.nr_seq_protocolo, src.cd_procedimento, src.ie_origem_proced, src.nr_seq_prestador_exec,
	      src.nr_seq_cbo_saude, src.cd_doenca_dig, src.cd_categoria_cid, src.nr_seq_tipo_atendimento,
	      src.nr_seq_clinica, src.ie_regime_internacao, src.dt_nascimento, src.ie_sexo,
	      src.qt_proc_mat, src.ie_glosa_item, src.ie_tipo_protocolo,
	      src.nr_seq_congenere, src.sg_uf, src.ie_tipo_contratacao, src.ie_segmentacao,
	      src.ie_tipo_segurado, src.dt_mes_competencia, src.qt_idade, src.qt_idade_mes,
	      src.qt_idade_dia, src.ie_tipo_atendimento, src.vl_liberado, null /*ie_segmentacao_sip */
,
	      src.nr_seq_segurado, 'S' /*ie_controle_upd*/
, src.ie_tipo_despesa, src.qt_nasc_vivos_total,
	      src.nr_documento, src.dt_inicio_atendimento, src.dt_fim_atendimento, src.qt_horas_atendimento,
	      src.ie_origem_info, src.dt_atendimento, nm_usuario_p, nm_usuario_p,
	      clock_timestamp(), clock_timestamp(), src.cd_pf_reembolso, src.cd_pj_reembolso, src.nr_seq_pacote,
	      src.dt_item_referencia, src.ie_regime_atendimento, src.ie_saude_ocupacional)
	-- Quando ja esta atualiza, tem dados que nao faz sentido atualizar, como sequencia da conta, do conta proc, do conta mat

	-- pois nao vai mudar.

	when  matched then
	  update set  dest.cd_guia 		= src.cd_guia,
		dest.cd_guia_referencia 	= src.cd_guia_referencia,
		dest.ie_tipo_guia 		= src.ie_tipo_guia,
		dest.nm_usuario 		= nm_usuario_p,
		dest.dt_atualizacao 		= clock_timestamp(),
		dest.cd_procedimento 		= src.cd_procedimento,
		dest.ie_origem_proced 		= src.ie_origem_proced,
		dest.nr_seq_prestador_exec 	= src.nr_seq_prestador_exec,
		dest.nr_seq_cbo_saude 		= src.nr_seq_cbo_saude,
		dest.cd_doenca_dig 		= src.cd_doenca_dig,
		dest.cd_categoria_cid 		= src.cd_categoria_cid,
		dest.nr_seq_tipo_atendimento  	= src.nr_seq_tipo_atendimento,
		dest.nr_seq_clinica 		= src.nr_seq_clinica,
		dest.ie_regime_internacao 	= src.ie_regime_internacao,
		dest.dt_nascimento 		= src.dt_nascimento,
		dest.ie_sexo 			= src.ie_sexo,
		dest.qt_proc_mat 		= src.qt_proc_mat,
		dest.ie_glosa_item 		= src.ie_glosa_item,
		dest.ie_tipo_protocolo 		= src.ie_tipo_protocolo,
		dest.nr_seq_congenere 		= src.nr_seq_congenere,
		dest.sg_uf 			= src.sg_uf,
		dest.ie_tipo_contratacao 	= src.ie_tipo_contratacao,
		dest.ie_segmentacao 		= src.ie_segmentacao,
		dest.ie_tipo_segurado 		= src.ie_tipo_segurado,
		dest.dt_mes_competencia 	= src.dt_mes_competencia,
		dest.qt_idade 			= src.qt_idade,
		dest.qt_idade_mes 		= src.qt_idade_mes,
		dest.qt_idade_dia 		= src.qt_idade_dia,
		dest.ie_tipo_atendimento 	= src.ie_tipo_atendimento,
		dest.vl_liberado 		= src.vl_liberado,
		dest.ie_segmentacao_sip 	 = NULL,
		dest.nr_seq_segurado 		= src.nr_seq_segurado,
		dest.ie_controle_upd 		= 'S',
		dest.ie_tipo_despesa 		= src.ie_tipo_despesa,
		dest.qt_nasc_vivos_total 	= src.qt_nasc_vivos_total,
		dest.nr_documento 		= src.nr_documento,
		dest.dt_inicio_atendimento 	= src.dt_inicio_atendimento,
		dest.dt_fim_atendimento 	= src.dt_fim_atendimento,
		dest.qt_horas_atendimento 	= src.qt_horas_atendimento,
		dest.dt_atendimento 		= src.dt_atendimento,
		dest.cd_pf_reembolso 		= src.cd_pf_reembolso,
		dest.cd_pj_reembolso 		= src.cd_pj_reembolso,
		dest.nr_seq_pacote		= src.nr_seq_pacote,
		dest.dt_item_referencia		= src.dt_item_referencia,
		dest.ie_regime_atendimento	= src.ie_regime_atendimento,
		dest.ie_saude_ocupacional	= src.ie_saude_ocupacional;
	commit;
	
	-- Faz o merge dos procedimentos. utilizando a data do protocolo referencia

	merge into sip_nv_dados dest
	using(SELECT  a.cd_guia,
	    CASE WHEN a.ie_tipo_guia='3' THEN  null  ELSE a.cd_guia_referencia END  cd_guia_referencia,
	    a.nr_seq_conta,
	    a.nr_sequencia nr_seq_conta_proc,
	    a.vl_liberado,
	    nr_seq_lote_p nr_seq_lote_sip,
	    a.nr_seq_protocolo,
	    a.ie_tipo_guia,
	    a.ie_origem_proced,
	    a.cd_procedimento,
	    a.nr_seq_clinica,
	    a.ie_regime_internacao,
	    a.nr_seq_tipo_atendimento,
	    a.nr_seq_prestador_exec,
	    a.qt_nasc_vivos_total_conta qt_nasc_vivos_total,
	    a.nr_seq_cbo_saude,
	    a.cd_cid_principal_conta cd_doenca_dig,
	    a.ie_sexo_benef ie_sexo,
	    a.dt_nascimento_benef dt_nascimento,
	    a.qt_procedimento qt_proc_mat,
	    a.cd_cat_cid_principal_conta cd_categoria_cid,
	    a.ie_tipo_protocolo,
	    a.nr_seq_congenere,
	    a.ie_glosa ie_glosa_item,
	    pls_sip_pck.sip_nv_retorna_uf(
	      a.ie_tipo_protocolo, a.nr_seq_congenere,
	      a.nr_seq_prestador_exec, a.nr_sequencia,
	      a.cd_pessoa_fisica_conta, a.cd_cgc_conta) sg_uf,
	    a.ie_segmentacao_benef ie_segmentacao,
	    a.ie_tipo_contratacao_benef ie_tipo_contratacao,
	    coalesce(a.ie_tipo_segurado,b.ie_tipo_segurado) ie_tipo_segurado,
	    --pls_sip_pck.obter_dt_protocolo_usjrp(  a.dt_mes_competencia, dt_inicio_w, dt_fim_w) dt_mes_competencia,

	    a.dt_mes_competencia,
	    CASE WHEN current_setting('pls_sip_pck.param_w')::param.ie_vinc_internacao='N' THEN  CASE WHEN a.ie_internado='S' THEN  'I'  ELSE 'A' END  WHEN current_setting('pls_sip_pck.param_w')::param.ie_vinc_internacao='S' THEN  CASE WHEN pls_obter_se_internado_alt(a.nr_seq_conta, 'S', a.ie_tipo_guia, a.nr_seq_guia, a.nr_seq_segurado, a.cd_guia_referencia, a.nr_seq_analise)='I' THEN  'I'  ELSE 'A' END  END  ie_tipo_atendimento,
	    a.qt_idade_benef qt_idade,
	    a.qt_idade_benef_mes qt_idade_mes,
	    a.qt_idade_benef_dia qt_idade_dia,
	    a.nr_seq_segurado,
	    a.cd_pessoa_fisica_conta cd_pf_reembolso,
	    a.cd_cgc_conta cd_pj_reembolso,
	    a.ie_tipo_despesa,
	    a.nr_documento,
	    a.dt_entrada_conta dt_inicio_atendimento,
	    a.dt_alta_conta dt_fim_atendimento,
	    a.qt_horas_atendimento_conta qt_horas_atendimento,
	    'CM' ie_origem_info,
	    -- Se nao tem a data de atendimento da conta considera a data incial do lote

	    trunc(coalesce(a.dt_atendimento_conta, dt_inicio_w), 'Q') dt_atendimento,
	    a.nr_seq_pacote,
	    a.dt_procedimento dt_item_referencia,
		a.ie_regime_atendimento,
		a.ie_saude_ocupacional
	  from  pls_conta_proc_v  a,
	
	    pls_segurado    b
	  where  a.cd_estabelecimento_prot  = cd_estabelecimento_p
	  and     exists (select   1
	      from   pls_protocolo_conta x
	      where  x.nr_sequencia = a.nr_seq_prot_referencia
	      and  x.dt_mes_competencia between dt_inicio_w and dt_fim_w)
		-- so aceita protocolo digitado e integrado

		and	a.ie_situacao_protocolo		in ('D', 'T')
		-- conta cancelada ou glosa tambem nao entra, somente conta fechada e A700 finalizado

		and	a.ie_status_conta		in ('F', 'S')
		and	a.ie_status			not in ('D', 'M')
		-- se for segurado de operadora ou transferencia de responsabilidade ou nao tiver tipo informado

		and	b.nr_sequencia			= a.nr_seq_segurado
		and (a.ie_tipo_segurado in ('B', 'R') or coalesce(a.ie_tipo_segurado::text, '') = '')) src
	on (dest.nr_seq_lote_sip	= src.nr_seq_lote_sip and 
		dest.nr_seq_conta_proc	= src.nr_seq_conta_proc and
		-- Verifica se a origem da informacao e de Contas medicas, se faz necessario por que 

		-- para recurso e contestacao gravamos a sequencia do conta proc e conta mat

		-- estes itens de contas medicas so devem atualizar este tipo de origem.

		-- Nao podemos fazer com que neste merge seja atualizado as informacoes de recurso  ou contestacao

		-- por que os itens dessas origens podem nao pertencer ao periodo do SIP informado, fazendo com

		-- que itens nao entrem ou nao sejam atualizados.

		dest.ie_origem_info	= src.ie_origem_info)
	-- Quando o registro ainda nao esta na tabela grava ele

	when	not matched then
		insert(	dest.nr_sequencia, dest.nr_seq_lote_sip, dest.cd_guia, dest.cd_guia_referencia, 
				dest.nr_seq_conta, dest.nr_seq_conta_proc, dest.ie_tipo_guia, 
				dest.nr_seq_protocolo, dest.cd_procedimento, dest.ie_origem_proced, dest.nr_seq_prestador_exec, 
				dest.nr_seq_cbo_saude, dest.cd_doenca_dig, dest.cd_categoria_cid, dest.nr_seq_tipo_atendimento,
				dest.nr_seq_clinica, dest.ie_regime_internacao, dest.dt_nascimento, dest.ie_sexo, 
				dest.qt_proc_mat, dest.ie_glosa_item, dest.ie_tipo_protocolo, 
				dest.nr_seq_congenere, dest.sg_uf, dest.ie_tipo_contratacao, dest.ie_segmentacao, 
				dest.ie_tipo_segurado, dest.dt_mes_competencia, dest.qt_idade, dest.qt_idade_mes, 
				dest.qt_idade_dia, dest.ie_tipo_atendimento, dest.vl_liberado, dest.ie_segmentacao_sip, 
				dest.nr_seq_segurado, dest.ie_controle_upd, dest.ie_tipo_despesa, dest.qt_nasc_vivos_total,
				dest.nr_documento, dest.dt_inicio_atendimento, dest.dt_fim_atendimento, dest.qt_horas_atendimento, 
				dest.ie_origem_info, dest.dt_atendimento, dest.nm_usuario, dest.nm_usuario_nrec,
				dest.dt_atualizacao, dest.dt_atualizacao_nrec, dest.cd_pf_reembolso, dest.cd_pj_reembolso, dest.nr_seq_pacote,
				dest.dt_item_referencia, dest.ie_regime_atendimento, dest.ie_saude_ocupacional)
		values (nextval('sip_nv_dados_seq'), src.nr_seq_lote_sip, src.cd_guia, src.cd_guia_referencia, 
				src.nr_seq_conta, src.nr_seq_conta_proc, src.ie_tipo_guia, 
				src.nr_seq_protocolo, src.cd_procedimento, src.ie_origem_proced, src.nr_seq_prestador_exec, 
				src.nr_seq_cbo_saude, src.cd_doenca_dig, src.cd_categoria_cid, src.nr_seq_tipo_atendimento, 
				src.nr_seq_clinica, src.ie_regime_internacao, src.dt_nascimento, src.ie_sexo,
				src.qt_proc_mat, src.ie_glosa_item, src.ie_tipo_protocolo, 
				src.nr_seq_congenere, src.sg_uf, src.ie_tipo_contratacao, src.ie_segmentacao, 
				src.ie_tipo_segurado, src.dt_mes_competencia, src.qt_idade, src.qt_idade_mes, 
				src.qt_idade_dia, src.ie_tipo_atendimento, src.vl_liberado, null /*ie_segmentacao_sip */
, 
				src.nr_seq_segurado, 'S' /*ie_controle_upd*/
, src.ie_tipo_despesa, src.qt_nasc_vivos_total, 
				src.nr_documento, src.dt_inicio_atendimento, src.dt_fim_atendimento, src.qt_horas_atendimento, 
				src.ie_origem_info, src.dt_atendimento, nm_usuario_p, nm_usuario_p,
				clock_timestamp(), clock_timestamp(), src.cd_pf_reembolso, src.cd_pj_reembolso, src.nr_seq_pacote,
				src.dt_item_referencia, src.ie_regime_atendimento, src.ie_saude_ocupacional)
	-- Quando ja esta atualiza, tem dados que nao faz sentido atualizar, como sequencia da conta, do conta proc, do conta mat

	-- pois nao vai mudar.

	when	matched then
		update set	dest.cd_guia				= src.cd_guia,
				dest.cd_guia_referencia			= src.cd_guia_referencia,
				dest.ie_tipo_guia			= src.ie_tipo_guia,
				dest.nm_usuario				= nm_usuario_p,
				dest.dt_atualizacao			= clock_timestamp(),
				dest.cd_procedimento			= src.cd_procedimento,
				dest.ie_origem_proced			= src.ie_origem_proced,
				dest.nr_seq_prestador_exec		= src.nr_seq_prestador_exec,
				dest.nr_seq_cbo_saude			= src.nr_seq_cbo_saude,
				dest.cd_doenca_dig			= src.cd_doenca_dig, 	
				dest.cd_categoria_cid			= src.cd_categoria_cid,
				dest.nr_seq_tipo_atendimento		= src.nr_seq_tipo_atendimento,
				dest.nr_seq_clinica			= src.nr_seq_clinica, 
				dest.ie_regime_internacao		= src.ie_regime_internacao,
				dest.dt_nascimento			= src.dt_nascimento,
				dest.ie_sexo				= src.ie_sexo,
				dest.qt_proc_mat			= src.qt_proc_mat,
				dest.ie_glosa_item			= src.ie_glosa_item,
				dest.ie_tipo_protocolo			= src.ie_tipo_protocolo,
				dest.nr_seq_congenere			= src.nr_seq_congenere,
				dest.sg_uf 				= src.sg_uf, 
				dest.ie_tipo_contratacao		= src.ie_tipo_contratacao,
				dest.ie_segmentacao			= src.ie_segmentacao,
				dest.ie_tipo_segurado			= src.ie_tipo_segurado,
				dest.dt_mes_competencia			= src.dt_mes_competencia,
				dest.qt_idade				= src.qt_idade,
				dest.qt_idade_mes			= src.qt_idade_mes,
				dest.qt_idade_dia			= src.qt_idade_dia,
				dest.ie_tipo_atendimento		= src.ie_tipo_atendimento,
				dest.vl_liberado			= src.vl_liberado,
				dest.ie_segmentacao_sip			 = NULL,
				dest.nr_seq_segurado			= src.nr_seq_segurado,
				dest.ie_controle_upd			= 'S',
				dest.ie_tipo_despesa			= src.ie_tipo_despesa,
				dest.qt_nasc_vivos_total		= src.qt_nasc_vivos_total,
				dest.nr_documento			= src.nr_documento,
				dest.dt_inicio_atendimento		= src.dt_inicio_atendimento,
				dest.dt_fim_atendimento			= src.dt_fim_atendimento,
				dest.qt_horas_atendimento		= src.qt_horas_atendimento,
				dest.dt_atendimento			= src.dt_atendimento,
				dest.cd_pf_reembolso			= src.cd_pf_reembolso, 
				dest.cd_pj_reembolso			= src.cd_pj_reembolso,
				dest.nr_seq_pacote			= src.nr_seq_pacote,
				dest.dt_item_referencia			= src.dt_item_referencia,
				dest.ie_regime_atendimento		= src.ie_regime_atendimento,
				dest.ie_saude_ocupacional		= src.ie_saude_ocupacional;
	commit;
else
	-- Faz o merge dos procedimentos.

	merge into sip_nv_dados dest
	using(SELECT	a.cd_guia,
			CASE WHEN a.ie_tipo_guia='3' THEN  null  ELSE a.cd_guia_referencia END  cd_guia_referencia,
			a.nr_seq_conta,
			a.nr_sequencia nr_seq_conta_proc,
			a.vl_liberado,
			nr_seq_lote_p nr_seq_lote_sip,
			a.nr_seq_protocolo,
			a.ie_tipo_guia,
			a.ie_origem_proced,
			a.cd_procedimento,
			a.nr_seq_clinica,
			a.ie_regime_internacao,
			a.nr_seq_tipo_atendimento,
			a.nr_seq_prestador_exec,
			a.qt_nasc_vivos_total_conta qt_nasc_vivos_total,
			pls_sip_pck.sip_retorna_cbo( a.ie_tipo_guia, a.nr_seq_cbo_saude, a.nr_sequencia, a.nr_seq_nota_cobranca, nr_versao_ptu_w) nr_seq_cbo_saude,
			a.cd_cid_principal_conta cd_doenca_dig,
			a.ie_sexo_benef ie_sexo,
			a.dt_nascimento_benef dt_nascimento,
			a.qt_procedimento qt_proc_mat,
			a.cd_cat_cid_principal_conta cd_categoria_cid,
			a.ie_tipo_protocolo,
			a.nr_seq_congenere,
			a.ie_glosa ie_glosa_item,
			pls_sip_pck.sip_nv_retorna_uf(
				a.ie_tipo_protocolo, a.nr_seq_congenere,
				a.nr_seq_prestador_exec, a.nr_sequencia, 
				a.cd_pessoa_fisica_conta, a.cd_cgc_conta) sg_uf,
			a.ie_segmentacao_benef ie_segmentacao,
			a.ie_tipo_contratacao_benef ie_tipo_contratacao,
			coalesce(a.ie_tipo_segurado,b.ie_tipo_segurado) ie_tipo_segurado,
			a.dt_mes_competencia,
			CASE WHEN current_setting('pls_sip_pck.param_w')::param.ie_vinc_internacao='N' THEN  CASE WHEN a.ie_internado='S' THEN  'I'  ELSE 'A' END  WHEN current_setting('pls_sip_pck.param_w')::param.ie_vinc_internacao='S' THEN  CASE WHEN pls_obter_se_internado_alt(a.nr_seq_conta, 'S', a.ie_tipo_guia, a.nr_seq_guia, a.nr_seq_segurado, a.cd_guia_referencia, a.nr_seq_analise)='I' THEN  'I'  ELSE 'A' END  END  ie_tipo_atendimento,
			a.qt_idade_benef qt_idade,
			a.qt_idade_benef_mes qt_idade_mes,
			a.qt_idade_benef_dia qt_idade_dia,
			a.nr_seq_segurado,
			a.cd_pessoa_fisica_conta cd_pf_reembolso,
			a.cd_cgc_conta cd_pj_reembolso,
			a.ie_tipo_despesa,
			a.nr_documento,
			a.dt_entrada_conta dt_inicio_atendimento,
			a.dt_alta_conta dt_fim_atendimento,
			a.qt_horas_atendimento_conta qt_horas_atendimento,
			'CM' ie_origem_info,
			-- Se nao tem a data de atendimento da conta considera a data incial do lote

			trunc(coalesce(a.dt_atendimento_conta, dt_inicio_w), 'Q') dt_atendimento,
			a.nr_seq_pacote,
			a.dt_procedimento dt_item_referencia,
			a.ie_regime_atendimento,
			a.ie_saude_ocupacional
		from	pls_conta_proc_v	a,
			
			pls_segurado		b
		where	a.cd_estabelecimento_prot	= cd_estabelecimento_p
		and	a.dt_mes_competencia		between dt_inicio_w and dt_fim_w
		-- so aceita protocolo digitado e integrado

		and	a.ie_situacao_protocolo		in ('D', 'T')
		-- conta cancelada ou glosa tambem nao entra, somente conta fechada e A700 finalizado

		and	a.ie_status_conta		in ('F', 'S')
		and	a.ie_status			not in ('D', 'M')
		-- se for segurado de operadora ou transferencia de responsabilidade ou nao tiver tipo informado

		and	b.nr_sequencia			= a.nr_seq_segurado
		and (a.ie_tipo_segurado in ('B', 'R') or coalesce(a.ie_tipo_segurado::text, '') = '')) src
	on (dest.nr_seq_lote_sip	= src.nr_seq_lote_sip and 
		dest.nr_seq_conta_proc	= src.nr_seq_conta_proc and
		-- Verifica se a origem da informacao e de Contas medicas, se faz necessario por que 

		-- para recurso e contestacao gravamos a sequencia do conta proc e conta mat

		-- estes itens de contas medicas so devem atualizar este tipo de origem.

		-- Nao podemos fazer com que neste merge seja atualizado as informacoes de recurso  ou contestacao

		-- por que os itens dessas origens podem nao pertencer ao periodo do SIP informado, fazendo com

		-- que itens nao entrem ou nao sejam atualizados.

		dest.ie_origem_info	= src.ie_origem_info)
	-- Quando o registro ainda nao esta na tabela grava ele

	when	not matched then
		insert(	dest.nr_sequencia, dest.nr_seq_lote_sip, dest.cd_guia, dest.cd_guia_referencia, 
				dest.nr_seq_conta, dest.nr_seq_conta_proc, dest.ie_tipo_guia, 
				dest.nr_seq_protocolo, dest.cd_procedimento, dest.ie_origem_proced, dest.nr_seq_prestador_exec, 
				dest.nr_seq_cbo_saude, dest.cd_doenca_dig, dest.cd_categoria_cid, dest.nr_seq_tipo_atendimento,
				dest.nr_seq_clinica, dest.ie_regime_internacao, dest.dt_nascimento, dest.ie_sexo, 
				dest.qt_proc_mat, dest.ie_glosa_item, dest.ie_tipo_protocolo, 
				dest.nr_seq_congenere, dest.sg_uf, dest.ie_tipo_contratacao, dest.ie_segmentacao, 
				dest.ie_tipo_segurado, dest.dt_mes_competencia, dest.qt_idade, dest.qt_idade_mes, 
				dest.qt_idade_dia, dest.ie_tipo_atendimento, dest.vl_liberado, dest.ie_segmentacao_sip, 
				dest.nr_seq_segurado, dest.ie_controle_upd, dest.ie_tipo_despesa, dest.qt_nasc_vivos_total,
				dest.nr_documento, dest.dt_inicio_atendimento, dest.dt_fim_atendimento, dest.qt_horas_atendimento, 
				dest.ie_origem_info, dest.dt_atendimento, dest.nm_usuario, dest.nm_usuario_nrec,
				dest.dt_atualizacao, dest.dt_atualizacao_nrec, dest.cd_pf_reembolso, dest.cd_pj_reembolso, dest.nr_seq_pacote,
				dest.dt_item_referencia, dest.ie_regime_atendimento, dest.ie_saude_ocupacional)
		values (nextval('sip_nv_dados_seq'), src.nr_seq_lote_sip, src.cd_guia, src.cd_guia_referencia, 
				src.nr_seq_conta, src.nr_seq_conta_proc, src.ie_tipo_guia, 
				src.nr_seq_protocolo, src.cd_procedimento, src.ie_origem_proced, src.nr_seq_prestador_exec, 
				src.nr_seq_cbo_saude, src.cd_doenca_dig, src.cd_categoria_cid, src.nr_seq_tipo_atendimento, 
				src.nr_seq_clinica, src.ie_regime_internacao, src.dt_nascimento, src.ie_sexo,
				src.qt_proc_mat, src.ie_glosa_item, src.ie_tipo_protocolo, 
				src.nr_seq_congenere, src.sg_uf, src.ie_tipo_contratacao, src.ie_segmentacao, 
				src.ie_tipo_segurado, src.dt_mes_competencia, src.qt_idade, src.qt_idade_mes, 
				src.qt_idade_dia, src.ie_tipo_atendimento, src.vl_liberado, null /*ie_segmentacao_sip */
, 
				src.nr_seq_segurado, 'S' /*ie_controle_upd*/
, src.ie_tipo_despesa, src.qt_nasc_vivos_total, 
				src.nr_documento, src.dt_inicio_atendimento, src.dt_fim_atendimento, src.qt_horas_atendimento, 
				src.ie_origem_info, src.dt_atendimento, nm_usuario_p, nm_usuario_p,
				clock_timestamp(), clock_timestamp(), src.cd_pf_reembolso, src.cd_pj_reembolso, src.nr_seq_pacote,
				src.dt_item_referencia, src.ie_regime_atendimento, src.ie_saude_ocupacional)
	-- Quando ja esta atualiza, tem dados que nao faz sentido atualizar, como sequencia da conta, do conta proc, do conta mat

	-- pois nao vai mudar.

	when	matched then
		update set	dest.cd_guia				= src.cd_guia,
				dest.cd_guia_referencia			= src.cd_guia_referencia,
				dest.ie_tipo_guia			= src.ie_tipo_guia,
				dest.nm_usuario				= nm_usuario_p,
				dest.dt_atualizacao			= clock_timestamp(),
				dest.cd_procedimento			= src.cd_procedimento,
				dest.ie_origem_proced			= src.ie_origem_proced,
				dest.nr_seq_prestador_exec		= src.nr_seq_prestador_exec,
				dest.nr_seq_cbo_saude			= src.nr_seq_cbo_saude,
				dest.cd_doenca_dig			= src.cd_doenca_dig, 	
				dest.cd_categoria_cid			= src.cd_categoria_cid,
				dest.nr_seq_tipo_atendimento		= src.nr_seq_tipo_atendimento,
				dest.nr_seq_clinica			= src.nr_seq_clinica, 
				dest.ie_regime_internacao		= src.ie_regime_internacao,
				dest.dt_nascimento			= src.dt_nascimento,
				dest.ie_sexo				= src.ie_sexo,
				dest.qt_proc_mat			= src.qt_proc_mat,
				dest.ie_glosa_item			= src.ie_glosa_item,
				dest.ie_tipo_protocolo			= src.ie_tipo_protocolo,
				dest.nr_seq_congenere			= src.nr_seq_congenere,
				dest.sg_uf 				= src.sg_uf, 
				dest.ie_tipo_contratacao		= src.ie_tipo_contratacao,
				dest.ie_segmentacao			= src.ie_segmentacao,
				dest.ie_tipo_segurado			= src.ie_tipo_segurado,
				dest.dt_mes_competencia			= src.dt_mes_competencia,
				dest.qt_idade				= src.qt_idade,
				dest.qt_idade_mes			= src.qt_idade_mes,
				dest.qt_idade_dia			= src.qt_idade_dia,
				dest.ie_tipo_atendimento		= src.ie_tipo_atendimento,
				dest.vl_liberado			= src.vl_liberado,
				dest.ie_segmentacao_sip			 = NULL,
				dest.nr_seq_segurado			= src.nr_seq_segurado,
				dest.ie_controle_upd			= 'S',
				dest.ie_tipo_despesa			= src.ie_tipo_despesa,
				dest.qt_nasc_vivos_total		= src.qt_nasc_vivos_total,
				dest.nr_documento			= src.nr_documento,
				dest.dt_inicio_atendimento		= src.dt_inicio_atendimento,
				dest.dt_fim_atendimento			= src.dt_fim_atendimento,
				dest.qt_horas_atendimento		= src.qt_horas_atendimento,
				dest.dt_atendimento			= src.dt_atendimento,
				dest.cd_pf_reembolso			= src.cd_pf_reembolso, 
				dest.cd_pj_reembolso			= src.cd_pj_reembolso,
				dest.nr_seq_pacote			= src.nr_seq_pacote,
				dest.dt_item_referencia			= src.dt_item_referencia,
				dest.ie_regime_atendimento		= src.ie_regime_atendimento,
				dest.ie_saude_ocupacional		= src.ie_saude_ocupacional;
	commit;	
end if;

if (current_setting('pls_sip_pck.ie_rio_preto_w')::varchar(1) = 'S') then
	-- Faz o merge dos materiais.

	merge into sip_nv_dados dest
	using(SELECT	a.cd_guia,
			CASE WHEN a.ie_tipo_guia='3' THEN  null  ELSE a.cd_guia_referencia END  cd_guia_referencia,
			a.nr_seq_conta,
			a.nr_sequencia nr_seq_conta_mat,
			a.vl_liberado,
			nr_seq_lote_p nr_seq_lote_sip,
			a.nr_seq_protocolo,
			a.ie_tipo_guia,
			a.cd_material,
			a.nr_seq_material,
			a.nr_seq_clinica,
			a.ie_regime_internacao,
			a.nr_seq_tipo_atendimento,
			a.nr_seq_prestador_exec,
			a.qt_nasc_vivos_total_conta qt_nasc_vivos_total,
			a.nr_seq_cbo_saude,
			a.cd_cid_principal_conta cd_doenca_dig,
			a.ie_sexo_benef ie_sexo,
			a.dt_nascimento_benef dt_nascimento,
			a.qt_material qt_proc_mat,
			a.cd_cat_cid_principal_conta cd_categoria_cid,
			a.ie_tipo_protocolo,
			a.nr_seq_congenere,
			a.ie_glosa ie_glosa_item,
			pls_sip_pck.sip_nv_retorna_uf(
				a.ie_tipo_protocolo, a.nr_seq_congenere,
				a.nr_seq_prestador_exec, a.nr_sequencia, 
				a.cd_pessoa_fisica_conta, a.cd_cgc_conta) sg_uf,
			a.ie_segmentacao_benef ie_segmentacao,
			a.ie_tipo_contratacao_benef ie_tipo_contratacao,
			coalesce(a.ie_tipo_segurado,b.ie_tipo_segurado) ie_tipo_segurado,
			a.dt_mes_competencia,
			CASE WHEN current_setting('pls_sip_pck.param_w')::param.ie_vinc_internacao='N' THEN  CASE WHEN a.ie_internado='S' THEN  'I'  ELSE 'A' END  WHEN current_setting('pls_sip_pck.param_w')::param.ie_vinc_internacao='S' THEN  CASE WHEN pls_obter_se_internado_alt(a.nr_seq_conta, 'S', a.ie_tipo_guia, a.nr_seq_guia, a.nr_seq_segurado, a.cd_guia_referencia, a.nr_seq_analise)='I' THEN  'I'  ELSE 'A' END  END  ie_tipo_atendimento,
			a.qt_idade_benef qt_idade,
			a.qt_idade_benef_mes qt_idade_mes,
			a.qt_idade_benef_dia qt_idade_dia,
			a.nr_seq_segurado,
			a.cd_pessoa_fisica_conta cd_pf_reembolso,
			a.cd_cgc_conta cd_pj_reembolso,
			a.ie_tipo_despesa,
			a.nr_documento,
			a.dt_entrada_conta dt_inicio_atendimento,
			a.dt_alta_conta dt_fim_atendimento,
			a.qt_horas_atendimento_conta qt_horas_atendimento,
			'CM' ie_origem_info,
			-- Se nao tem a data de atendimento da conta considera a data incial do lote

			trunc(coalesce(a.dt_atendimento_conta, dt_inicio_w), 'Q') dt_atendimento,
			a.nr_seq_pacote,
			a.dt_atendimento dt_item_referencia,
			a.ie_regime_atendimento,
			a.ie_saude_ocupacional
		from	pls_conta_mat_v		a,
			
			pls_segurado		b
		where	a.cd_estabelecimento_prot	= cd_estabelecimento_p
		and	a.dt_mes_competencia		between dt_inicio_w and dt_fim_w
		and  coalesce(a.nr_seq_prot_referencia::text, '') = ''
		-- so aceita protocolo digitado e integrado

		and	a.ie_situacao_protocolo		in ('D', 'T')
		-- conta cancelada ou glosa tambem nao entra, apenas conta fechada e A700 finalizado

		and	a.ie_status_conta		in ('F', 'S')
		and	a.ie_status			not in ('D', 'M')
		-- se for segurado de operadora ou transferencia de responsabilidade ou nao tiver tipo informado

		and	b.nr_sequencia			= a.nr_seq_segurado
		and (a.ie_tipo_segurado in ('B', 'R') or coalesce(a.ie_tipo_segurado::text, '') = '')) src
	on (dest.nr_seq_lote_sip	= src.nr_seq_lote_sip and 
		dest.nr_seq_conta_mat	= src.nr_seq_conta_mat and
		-- Verifica se a origem da informacao e de Contas medicas, se faz necessario por que 

		-- para recurso e contestacao gravamos a sequencia do conta proc e conta mat

		-- estes itens de contas medicas so devem atualizar este tipo de origem.

		-- Nao podemos fazer com que neste merge seja atualizado as informacoes de recurso  ou contestacao

		-- por que os itens dessas origens podem nao pertencer ao periodo do SIP informado, fazendo com

		-- que itens nao entrem ou nao sejam atualizados.

		dest.ie_origem_info	= src.ie_origem_info)
	-- Quando o registro ainda nao esta na tabela grava ele

	when	not matched then
		insert(	dest.nr_sequencia, dest.nr_seq_lote_sip, dest.cd_guia, dest.cd_guia_referencia, 
				dest.nr_seq_conta, dest.nr_seq_conta_mat, dest.ie_tipo_guia, 
				dest.nr_seq_protocolo, dest.cd_material, dest.nr_seq_material, dest.nr_seq_prestador_exec, 
				dest.nr_seq_cbo_saude, dest.cd_doenca_dig, dest.cd_categoria_cid, dest.nr_seq_tipo_atendimento,
				dest.nr_seq_clinica, dest.ie_regime_internacao, dest.dt_nascimento, dest.ie_sexo, 
				dest.qt_proc_mat, dest.ie_glosa_item, dest.ie_tipo_protocolo, 
				dest.nr_seq_congenere, dest.sg_uf, dest.ie_tipo_contratacao, dest.ie_segmentacao, 
				dest.ie_tipo_segurado, dest.dt_mes_competencia, dest.qt_idade, dest.qt_idade_mes, 
				dest.qt_idade_dia, dest.ie_tipo_atendimento, dest.vl_liberado, dest.ie_segmentacao_sip, 
				dest.nr_seq_segurado, dest.ie_controle_upd, dest.ie_tipo_despesa, dest.qt_nasc_vivos_total,
				dest.nr_documento, dest.dt_inicio_atendimento, dest.dt_fim_atendimento, dest.qt_horas_atendimento, 
				dest.ie_origem_info, dest.dt_atendimento, dest.nm_usuario, dest.nm_usuario_nrec,
				dest.dt_atualizacao, dest.dt_atualizacao_nrec, dest.cd_pf_reembolso, dest.cd_pj_reembolso, dest.nr_seq_pacote,
				dest.dt_item_referencia, dest.ie_regime_atendimento, dest.ie_saude_ocupacional)
		values (nextval('sip_nv_dados_seq'), src.nr_seq_lote_sip, src.cd_guia, src.cd_guia_referencia, 
				src.nr_seq_conta, src.nr_seq_conta_mat, src.ie_tipo_guia, 
				src.nr_seq_protocolo, src.cd_material, src.nr_seq_material, src.nr_seq_prestador_exec, 
				src.nr_seq_cbo_saude, src.cd_doenca_dig, src.cd_categoria_cid, src.nr_seq_tipo_atendimento, 
				src.nr_seq_clinica, src.ie_regime_internacao, src.dt_nascimento, src.ie_sexo,
				src.qt_proc_mat, src.ie_glosa_item, src.ie_tipo_protocolo, 
				src.nr_seq_congenere, src.sg_uf, src.ie_tipo_contratacao, src.ie_segmentacao, 
				src.ie_tipo_segurado, src.dt_mes_competencia, src.qt_idade, src.qt_idade_mes, 
				src.qt_idade_dia, src.ie_tipo_atendimento, src.vl_liberado, null /*ie_segmentacao_sip */
, 
				src.nr_seq_segurado, 'S' /*ie_controle_upd*/
, src.ie_tipo_despesa, src.qt_nasc_vivos_total, 
				src.nr_documento, src.dt_inicio_atendimento, src.dt_fim_atendimento, src.qt_horas_atendimento, 
				src.ie_origem_info, src.dt_atendimento, nm_usuario_p, nm_usuario_p,
				clock_timestamp(), clock_timestamp(), src.cd_pf_reembolso, src.cd_pj_reembolso, src.nr_seq_pacote,
				src.dt_item_referencia, src.ie_regime_atendimento, src.ie_saude_ocupacional)
	-- Quando ja esta atualiza, tem dados que nao faz sentido atualizar, como sequencia da conta, do conta proc, do conta mat

	-- pois nao vai mudar.

	when	matched then
		update set	dest.cd_guia				= src.cd_guia,
				dest.cd_guia_referencia			= src.cd_guia_referencia,
				dest.ie_tipo_guia			= src.ie_tipo_guia,
				dest.nm_usuario				= nm_usuario_p,
				dest.dt_atualizacao			= clock_timestamp(),
				dest.cd_material			= src.cd_material,
				dest.nr_seq_material			= src.nr_seq_material,
				dest.nr_seq_prestador_exec		= src.nr_seq_prestador_exec,
				dest.nr_seq_cbo_saude			= src.nr_seq_cbo_saude,
				dest.cd_doenca_dig			= src.cd_doenca_dig, 	
				dest.cd_categoria_cid			= src.cd_categoria_cid,
				dest.nr_seq_tipo_atendimento		= src.nr_seq_tipo_atendimento,
				dest.nr_seq_clinica			= src.nr_seq_clinica, 
				dest.ie_regime_internacao		= src.ie_regime_internacao,
				dest.dt_nascimento			= src.dt_nascimento,
				dest.ie_sexo				= src.ie_sexo,
				dest.qt_proc_mat			= src.qt_proc_mat,
				dest.ie_glosa_item			= src.ie_glosa_item,
				dest.ie_tipo_protocolo			= src.ie_tipo_protocolo,
				dest.nr_seq_congenere			= src.nr_seq_congenere,
				dest.sg_uf 				= src.sg_uf, 
				dest.ie_tipo_contratacao		= src.ie_tipo_contratacao,
				dest.ie_segmentacao			= src.ie_segmentacao,
				dest.ie_tipo_segurado			= src.ie_tipo_segurado,
				dest.dt_mes_competencia			= src.dt_mes_competencia,
				dest.qt_idade				= src.qt_idade,
				dest.qt_idade_mes			= src.qt_idade_mes,
				dest.qt_idade_dia			= src.qt_idade_dia,
				dest.ie_tipo_atendimento		= src.ie_tipo_atendimento,
				dest.vl_liberado			= src.vl_liberado,
				dest.ie_segmentacao_sip			 = NULL,
				dest.nr_seq_segurado			= src.nr_seq_segurado,
				dest.ie_controle_upd			= 'S',
				dest.ie_tipo_despesa			= src.ie_tipo_despesa,
				dest.qt_nasc_vivos_total		= src.qt_nasc_vivos_total,
				dest.nr_documento			= src.nr_documento,
				dest.dt_inicio_atendimento		= src.dt_inicio_atendimento,
				dest.dt_fim_atendimento			= src.dt_fim_atendimento,
				dest.qt_horas_atendimento		= src.qt_horas_atendimento,
				dest.dt_atendimento			= src.dt_atendimento,
				dest.cd_pf_reembolso			= src.cd_pf_reembolso, 
				dest.cd_pj_reembolso			= src.cd_pj_reembolso,
				dest.nr_seq_pacote			= src.nr_seq_pacote,
				dest.dt_item_referencia			= src.dt_item_referencia,
				dest.ie_regime_atendimento		= src.ie_regime_atendimento,
				dest.ie_saude_ocupacional		= src.ie_saude_ocupacional;
	commit;

	-- Faz o merge dos materiais. levando em consideracao a data do protocolo referencia

	merge into sip_nv_dados dest
	using(SELECT a.cd_guia,
			CASE WHEN a.ie_tipo_guia='3' THEN  null  ELSE a.cd_guia_referencia END  cd_guia_referencia,
			a.nr_seq_conta,
			a.nr_sequencia nr_seq_conta_mat,
			a.vl_liberado,
			nr_seq_lote_p nr_seq_lote_sip,
			a.nr_seq_protocolo,
			a.ie_tipo_guia,
			a.cd_material,
			a.nr_seq_material,
			a.nr_seq_clinica,
			a.ie_regime_internacao,
			a.nr_seq_tipo_atendimento,
			a.nr_seq_prestador_exec,
			a.qt_nasc_vivos_total_conta qt_nasc_vivos_total,
			a.nr_seq_cbo_saude,
			a.cd_cid_principal_conta cd_doenca_dig,
			a.ie_sexo_benef ie_sexo,
			a.dt_nascimento_benef dt_nascimento,
			a.qt_material qt_proc_mat,
			a.cd_cat_cid_principal_conta cd_categoria_cid,
			a.ie_tipo_protocolo,
			a.nr_seq_congenere,
			a.ie_glosa ie_glosa_item,
			pls_sip_pck.sip_nv_retorna_uf(
			  a.ie_tipo_protocolo, a.nr_seq_congenere,
			  a.nr_seq_prestador_exec, a.nr_sequencia,
			  a.cd_pessoa_fisica_conta, a.cd_cgc_conta) sg_uf,
			a.ie_segmentacao_benef ie_segmentacao,
			a.ie_tipo_contratacao_benef ie_tipo_contratacao,
			coalesce(a.ie_tipo_segurado,b.ie_tipo_segurado) ie_tipo_segurado,
			pls_sip_pck.obter_dt_protocolo_usjrp(  a.dt_mes_competencia, dt_inicio_w, dt_fim_w) dt_mes_competencia,
			CASE WHEN current_setting('pls_sip_pck.param_w')::param.ie_vinc_internacao='N' THEN  CASE WHEN a.ie_internado='S' THEN  'I'  ELSE 'A' END  WHEN current_setting('pls_sip_pck.param_w')::param.ie_vinc_internacao='S' THEN  CASE WHEN pls_obter_se_internado_alt(a.nr_seq_conta, 'S', a.ie_tipo_guia, a.nr_seq_guia, a.nr_seq_segurado, a.cd_guia_referencia, a.nr_seq_analise)='I' THEN  'I'  ELSE 'A' END  END  ie_tipo_atendimento,
			a.qt_idade_benef qt_idade,
			a.qt_idade_benef_mes qt_idade_mes,
			a.qt_idade_benef_dia qt_idade_dia,
			a.nr_seq_segurado,
			a.cd_pessoa_fisica_conta cd_pf_reembolso,
			a.cd_cgc_conta cd_pj_reembolso,
			a.ie_tipo_despesa,
			a.nr_documento,
			a.dt_entrada_conta dt_inicio_atendimento,
			a.dt_alta_conta dt_fim_atendimento,
			a.qt_horas_atendimento_conta qt_horas_atendimento,
			'CM' ie_origem_info,
			-- Se nao tem a data de atendimento da conta considera a data incial do lote

			trunc(coalesce(a.dt_atendimento_conta, dt_inicio_w), 'Q') dt_atendimento,
			a.nr_seq_pacote,
			a.dt_atendimento dt_item_referencia,
			a.ie_regime_atendimento,
			a.ie_saude_ocupacional
		from  	pls_conta_mat_v    a,
			
			 pls_segurado    b
		where  	a.cd_estabelecimento_prot = cd_estabelecimento_p
		and     exists (select   1
				from   pls_protocolo_conta x
				where  x.nr_sequencia = a.nr_seq_prot_referencia
				and  x.dt_mes_competencia between dt_inicio_w and dt_fim_w)
				-- so aceita protocolo digitado e integrado

				and	a.ie_situacao_protocolo		in ('D', 'T')
				-- conta cancelada ou glosa tambem nao entra, apenas conta fechada e A700 finalizado

				and	a.ie_status_conta		in ('F', 'S')
				and	a.ie_status			not in ('D', 'M')
				-- se for segurado de operadora ou transferencia de responsabilidade ou nao tiver tipo informado

				and	b.nr_sequencia			= a.nr_seq_segurado
				and (a.ie_tipo_segurado in ('B', 'R') or coalesce(a.ie_tipo_segurado::text, '') = '')) src
		on (dest.nr_seq_lote_sip	= src.nr_seq_lote_sip and
			dest.nr_seq_conta_mat	= src.nr_seq_conta_mat and
			-- Verifica se a origem da informacao e de Contas medicas, se faz necessario por que 

			-- para recurso e contestacao gravamos a sequencia do conta proc e conta mat

			-- estes itens de contas medicas so devem atualizar este tipo de origem.

			-- Nao podemos fazer com que neste merge seja atualizado as informacoes de recurso  ou contestacao

			-- por que os itens dessas origens podem nao pertencer ao periodo do SIP informado, fazendo com

			-- que itens nao entrem ou nao sejam atualizados.

			dest.ie_origem_info	= src.ie_origem_info)
	-- Quando o registro ainda nao esta na tabela grava ele

	when	not matched then
		insert(	dest.nr_sequencia, dest.nr_seq_lote_sip, dest.cd_guia, dest.cd_guia_referencia, 
				dest.nr_seq_conta, dest.nr_seq_conta_mat, dest.ie_tipo_guia, 
				dest.nr_seq_protocolo, dest.cd_material, dest.nr_seq_material, dest.nr_seq_prestador_exec, 
				dest.nr_seq_cbo_saude, dest.cd_doenca_dig, dest.cd_categoria_cid, dest.nr_seq_tipo_atendimento,
				dest.nr_seq_clinica, dest.ie_regime_internacao, dest.dt_nascimento, dest.ie_sexo, 
				dest.qt_proc_mat, dest.ie_glosa_item, dest.ie_tipo_protocolo, 
				dest.nr_seq_congenere, dest.sg_uf, dest.ie_tipo_contratacao, dest.ie_segmentacao, 
				dest.ie_tipo_segurado, dest.dt_mes_competencia, dest.qt_idade, dest.qt_idade_mes, 
				dest.qt_idade_dia, dest.ie_tipo_atendimento, dest.vl_liberado, dest.ie_segmentacao_sip, 
				dest.nr_seq_segurado, dest.ie_controle_upd, dest.ie_tipo_despesa, dest.qt_nasc_vivos_total,
				dest.nr_documento, dest.dt_inicio_atendimento, dest.dt_fim_atendimento, dest.qt_horas_atendimento, 
				dest.ie_origem_info, dest.dt_atendimento, dest.nm_usuario, dest.nm_usuario_nrec,
				dest.dt_atualizacao, dest.dt_atualizacao_nrec, dest.cd_pf_reembolso, dest.cd_pj_reembolso, dest.nr_seq_pacote,
				dest.dt_item_referencia, dest.ie_regime_atendimento, dest.ie_saude_ocupacional)
		values (nextval('sip_nv_dados_seq'), src.nr_seq_lote_sip, src.cd_guia, src.cd_guia_referencia, 
				src.nr_seq_conta, src.nr_seq_conta_mat, src.ie_tipo_guia, 
				src.nr_seq_protocolo, src.cd_material, src.nr_seq_material, src.nr_seq_prestador_exec, 
				src.nr_seq_cbo_saude, src.cd_doenca_dig, src.cd_categoria_cid, src.nr_seq_tipo_atendimento, 
				src.nr_seq_clinica, src.ie_regime_internacao, src.dt_nascimento, src.ie_sexo,
				src.qt_proc_mat, src.ie_glosa_item, src.ie_tipo_protocolo, 
				src.nr_seq_congenere, src.sg_uf, src.ie_tipo_contratacao, src.ie_segmentacao, 
				src.ie_tipo_segurado, src.dt_mes_competencia, src.qt_idade, src.qt_idade_mes, 
				src.qt_idade_dia, src.ie_tipo_atendimento, src.vl_liberado, null /*ie_segmentacao_sip */
, 
				src.nr_seq_segurado, 'S' /*ie_controle_upd*/
, src.ie_tipo_despesa, src.qt_nasc_vivos_total, 
				src.nr_documento, src.dt_inicio_atendimento, src.dt_fim_atendimento, src.qt_horas_atendimento, 
				src.ie_origem_info, src.dt_atendimento, nm_usuario_p, nm_usuario_p,
				clock_timestamp(), clock_timestamp(), src.cd_pf_reembolso, src.cd_pj_reembolso, src.nr_seq_pacote,
				src.dt_item_referencia, src.ie_regime_atendimento, src.ie_saude_ocupacional)
	-- Quando ja esta atualiza, tem dados que nao faz sentido atualizar, como sequencia da conta, do conta proc, do conta mat

	-- pois nao vai mudar.

	when	matched then
		update set	dest.cd_guia				= src.cd_guia,
				dest.cd_guia_referencia			= src.cd_guia_referencia,
				dest.ie_tipo_guia			= src.ie_tipo_guia,
				dest.nm_usuario				= nm_usuario_p,
				dest.dt_atualizacao			= clock_timestamp(),
				dest.cd_material			= src.cd_material,
				dest.nr_seq_material			= src.nr_seq_material,
				dest.nr_seq_prestador_exec		= src.nr_seq_prestador_exec,
				dest.nr_seq_cbo_saude			= src.nr_seq_cbo_saude,
				dest.cd_doenca_dig			= src.cd_doenca_dig, 	
				dest.cd_categoria_cid			= src.cd_categoria_cid,
				dest.nr_seq_tipo_atendimento		= src.nr_seq_tipo_atendimento,
				dest.nr_seq_clinica			= src.nr_seq_clinica, 
				dest.ie_regime_internacao		= src.ie_regime_internacao,
				dest.dt_nascimento			= src.dt_nascimento,
				dest.ie_sexo				= src.ie_sexo,
				dest.qt_proc_mat			= src.qt_proc_mat,
				dest.ie_glosa_item			= src.ie_glosa_item,
				dest.ie_tipo_protocolo			= src.ie_tipo_protocolo,
				dest.nr_seq_congenere			= src.nr_seq_congenere,
				dest.sg_uf 				= src.sg_uf, 
				dest.ie_tipo_contratacao		= src.ie_tipo_contratacao,
				dest.ie_segmentacao			= src.ie_segmentacao,
				dest.ie_tipo_segurado			= src.ie_tipo_segurado,
				dest.dt_mes_competencia			= src.dt_mes_competencia,
				dest.qt_idade				= src.qt_idade,
				dest.qt_idade_mes			= src.qt_idade_mes,
				dest.qt_idade_dia			= src.qt_idade_dia,
				dest.ie_tipo_atendimento		= src.ie_tipo_atendimento,
				dest.vl_liberado			= src.vl_liberado,
				dest.ie_segmentacao_sip			 = NULL,
				dest.nr_seq_segurado			= src.nr_seq_segurado,
				dest.ie_controle_upd			= 'S',
				dest.ie_tipo_despesa			= src.ie_tipo_despesa,
				dest.qt_nasc_vivos_total		= src.qt_nasc_vivos_total,
				dest.nr_documento			= src.nr_documento,
				dest.dt_inicio_atendimento		= src.dt_inicio_atendimento,
				dest.dt_fim_atendimento			= src.dt_fim_atendimento,
				dest.qt_horas_atendimento		= src.qt_horas_atendimento,
				dest.dt_atendimento			= src.dt_atendimento,
				dest.cd_pf_reembolso			= src.cd_pf_reembolso, 
				dest.cd_pj_reembolso			= src.cd_pj_reembolso,
				dest.nr_seq_pacote			= src.nr_seq_pacote,
				dest.dt_item_referencia			= src.dt_item_referencia,
				dest.ie_regime_atendimento		= src.ie_regime_atendimento,
				dest.ie_saude_ocupacional		= src.ie_saude_ocupacional;
	commit;
else
	-- Faz o merge dos materiais.

	merge into sip_nv_dados dest
	using(SELECT	a.cd_guia,
			CASE WHEN a.ie_tipo_guia='3' THEN  null  ELSE a.cd_guia_referencia END  cd_guia_referencia,
			a.nr_seq_conta,
			a.nr_sequencia nr_seq_conta_mat,
			a.vl_liberado,
			nr_seq_lote_p nr_seq_lote_sip,
			a.nr_seq_protocolo,
			a.ie_tipo_guia,
			a.cd_material,
			a.nr_seq_material,
			a.nr_seq_clinica,
			a.ie_regime_internacao,
			a.nr_seq_tipo_atendimento,
			a.nr_seq_prestador_exec,
			a.qt_nasc_vivos_total_conta qt_nasc_vivos_total,
			a.nr_seq_cbo_saude,
			a.cd_cid_principal_conta cd_doenca_dig,
			a.ie_sexo_benef ie_sexo,
			a.dt_nascimento_benef dt_nascimento,
			a.qt_material qt_proc_mat,
			a.cd_cat_cid_principal_conta cd_categoria_cid,
			a.ie_tipo_protocolo,
			a.nr_seq_congenere,
			a.ie_glosa ie_glosa_item,
			pls_sip_pck.sip_nv_retorna_uf(
				a.ie_tipo_protocolo, a.nr_seq_congenere,
				a.nr_seq_prestador_exec, a.nr_sequencia, 
				a.cd_pessoa_fisica_conta, a.cd_cgc_conta) sg_uf,
			a.ie_segmentacao_benef ie_segmentacao,
			a.ie_tipo_contratacao_benef ie_tipo_contratacao,
			coalesce(a.ie_tipo_segurado,b.ie_tipo_segurado) ie_tipo_segurado,
			a.dt_mes_competencia,
			CASE WHEN current_setting('pls_sip_pck.param_w')::param.ie_vinc_internacao='N' THEN  CASE WHEN a.ie_internado='S' THEN  'I'  ELSE 'A' END  WHEN current_setting('pls_sip_pck.param_w')::param.ie_vinc_internacao='S' THEN  CASE WHEN pls_obter_se_internado_alt(a.nr_seq_conta, 'S', a.ie_tipo_guia, a.nr_seq_guia, a.nr_seq_segurado, a.cd_guia_referencia, a.nr_seq_analise)='I' THEN  'I'  ELSE 'A' END  END  ie_tipo_atendimento,
			a.qt_idade_benef qt_idade,
			a.qt_idade_benef_mes qt_idade_mes,
			a.qt_idade_benef_dia qt_idade_dia,
			a.nr_seq_segurado,
			a.cd_pessoa_fisica_conta cd_pf_reembolso,
			a.cd_cgc_conta cd_pj_reembolso,
			a.ie_tipo_despesa,
			a.nr_documento,
			a.dt_entrada_conta dt_inicio_atendimento,
			a.dt_alta_conta dt_fim_atendimento,
			a.qt_horas_atendimento_conta qt_horas_atendimento,
			'CM' ie_origem_info,
			-- Se nao tem a data de atendimento da conta considera a data incial do lote

			trunc(coalesce(a.dt_atendimento_conta, dt_inicio_w), 'Q') dt_atendimento,
			a.nr_seq_pacote,
			a.dt_atendimento dt_item_referencia,
			a.ie_regime_atendimento,
			a.ie_saude_ocupacional
		from	pls_conta_mat_v		a,
			
			pls_segurado		b
		where	a.cd_estabelecimento_prot	= cd_estabelecimento_p
		and	a.dt_mes_competencia		between dt_inicio_w and dt_fim_w
		-- so aceita protocolo digitado e integrado

		and	a.ie_situacao_protocolo		in ('D', 'T')
		-- conta cancelada ou glosa tambem nao entra, apenas conta fechada e A700 finalizado

		and	a.ie_status_conta		in ('F', 'S')
		and	a.ie_status			not in ('D', 'M')
		-- se for segurado de operadora ou transferencia de responsabilidade ou nao tiver tipo informado

		and	b.nr_sequencia			= a.nr_seq_segurado
		and (a.ie_tipo_segurado in ('B', 'R') or coalesce(a.ie_tipo_segurado::text, '') = '')) src
	on (dest.nr_seq_lote_sip	= src.nr_seq_lote_sip and 
		dest.nr_seq_conta_mat	= src.nr_seq_conta_mat and
		-- Verifica se a origem da informacao e de Contas medicas, se faz necessario por que 

		-- para recurso e contestacao gravamos a sequencia do conta proc e conta mat

		-- estes itens de contas medicas so devem atualizar este tipo de origem.

		-- Nao podemos fazer com que neste merge seja atualizado as informacoes de recurso  ou contestacao

		-- por que os itens dessas origens podem nao pertencer ao periodo do SIP informado, fazendo com

		-- que itens nao entrem ou nao sejam atualizados.

		dest.ie_origem_info	= src.ie_origem_info)
	-- Quando o registro ainda nao esta na tabela grava ele

	when	not matched then
		insert(	dest.nr_sequencia, dest.nr_seq_lote_sip, dest.cd_guia, dest.cd_guia_referencia, 
				dest.nr_seq_conta, dest.nr_seq_conta_mat, dest.ie_tipo_guia, 
				dest.nr_seq_protocolo, dest.cd_material, dest.nr_seq_material, dest.nr_seq_prestador_exec, 
				dest.nr_seq_cbo_saude, dest.cd_doenca_dig, dest.cd_categoria_cid, dest.nr_seq_tipo_atendimento,
				dest.nr_seq_clinica, dest.ie_regime_internacao, dest.dt_nascimento, dest.ie_sexo, 
				dest.qt_proc_mat, dest.ie_glosa_item, dest.ie_tipo_protocolo, 
				dest.nr_seq_congenere, dest.sg_uf, dest.ie_tipo_contratacao, dest.ie_segmentacao, 
				dest.ie_tipo_segurado, dest.dt_mes_competencia, dest.qt_idade, dest.qt_idade_mes, 
				dest.qt_idade_dia, dest.ie_tipo_atendimento, dest.vl_liberado, dest.ie_segmentacao_sip, 
				dest.nr_seq_segurado, dest.ie_controle_upd, dest.ie_tipo_despesa, dest.qt_nasc_vivos_total,
				dest.nr_documento, dest.dt_inicio_atendimento, dest.dt_fim_atendimento, dest.qt_horas_atendimento, 
				dest.ie_origem_info, dest.dt_atendimento, dest.nm_usuario, dest.nm_usuario_nrec,
				dest.dt_atualizacao, dest.dt_atualizacao_nrec, dest.cd_pf_reembolso, dest.cd_pj_reembolso, dest.nr_seq_pacote,
				dest.dt_item_referencia, dest.ie_regime_atendimento, dest.ie_saude_ocupacional)
		values (nextval('sip_nv_dados_seq'), src.nr_seq_lote_sip, src.cd_guia, src.cd_guia_referencia, 
				src.nr_seq_conta, src.nr_seq_conta_mat, src.ie_tipo_guia, 
				src.nr_seq_protocolo, src.cd_material, src.nr_seq_material, src.nr_seq_prestador_exec, 
				src.nr_seq_cbo_saude, src.cd_doenca_dig, src.cd_categoria_cid, src.nr_seq_tipo_atendimento, 
				src.nr_seq_clinica, src.ie_regime_internacao, src.dt_nascimento, src.ie_sexo,
				src.qt_proc_mat, src.ie_glosa_item, src.ie_tipo_protocolo, 
				src.nr_seq_congenere, src.sg_uf, src.ie_tipo_contratacao, src.ie_segmentacao, 
				src.ie_tipo_segurado, src.dt_mes_competencia, src.qt_idade, src.qt_idade_mes, 
				src.qt_idade_dia, src.ie_tipo_atendimento, src.vl_liberado, null /*ie_segmentacao_sip */
, 
				src.nr_seq_segurado, 'S' /*ie_controle_upd*/
, src.ie_tipo_despesa, src.qt_nasc_vivos_total, 
				src.nr_documento, src.dt_inicio_atendimento, src.dt_fim_atendimento, src.qt_horas_atendimento, 
				src.ie_origem_info, src.dt_atendimento, nm_usuario_p, nm_usuario_p,
				clock_timestamp(), clock_timestamp(), src.cd_pf_reembolso, src.cd_pj_reembolso, src.nr_seq_pacote,
				src.dt_item_referencia, src.ie_regime_atendimento, src.ie_saude_ocupacional)
	-- Quando ja esta atualiza, tem dados que nao faz sentido atualizar, como sequencia da conta, do conta proc, do conta mat

	-- pois nao vai mudar.

	when	matched then
		update set	dest.cd_guia				= src.cd_guia,
				dest.cd_guia_referencia			= src.cd_guia_referencia,
				dest.ie_tipo_guia			= src.ie_tipo_guia,
				dest.nm_usuario				= nm_usuario_p,
				dest.dt_atualizacao			= clock_timestamp(),
				dest.cd_material			= src.cd_material,
				dest.nr_seq_material			= src.nr_seq_material,
				dest.nr_seq_prestador_exec		= src.nr_seq_prestador_exec,
				dest.nr_seq_cbo_saude			= src.nr_seq_cbo_saude,
				dest.cd_doenca_dig			= src.cd_doenca_dig, 	
				dest.cd_categoria_cid			= src.cd_categoria_cid,
				dest.nr_seq_tipo_atendimento		= src.nr_seq_tipo_atendimento,
				dest.nr_seq_clinica			= src.nr_seq_clinica, 
				dest.ie_regime_internacao		= src.ie_regime_internacao,
				dest.dt_nascimento			= src.dt_nascimento,
				dest.ie_sexo				= src.ie_sexo,
				dest.qt_proc_mat			= src.qt_proc_mat,
				dest.ie_glosa_item			= src.ie_glosa_item,
				dest.ie_tipo_protocolo			= src.ie_tipo_protocolo,
				dest.nr_seq_congenere			= src.nr_seq_congenere,
				dest.sg_uf 				= src.sg_uf, 
				dest.ie_tipo_contratacao		= src.ie_tipo_contratacao,
				dest.ie_segmentacao			= src.ie_segmentacao,
				dest.ie_tipo_segurado			= src.ie_tipo_segurado,
				dest.dt_mes_competencia			= src.dt_mes_competencia,
				dest.qt_idade				= src.qt_idade,
				dest.qt_idade_mes			= src.qt_idade_mes,
				dest.qt_idade_dia			= src.qt_idade_dia,
				dest.ie_tipo_atendimento		= src.ie_tipo_atendimento,
				dest.vl_liberado			= src.vl_liberado,
				dest.ie_segmentacao_sip			 = NULL,
				dest.nr_seq_segurado			= src.nr_seq_segurado,
				dest.ie_controle_upd			= 'S',
				dest.ie_tipo_despesa			= src.ie_tipo_despesa,
				dest.qt_nasc_vivos_total		= src.qt_nasc_vivos_total,
				dest.nr_documento			= src.nr_documento,
				dest.dt_inicio_atendimento		= src.dt_inicio_atendimento,
				dest.dt_fim_atendimento			= src.dt_fim_atendimento,
				dest.qt_horas_atendimento		= src.qt_horas_atendimento,
				dest.dt_atendimento			= src.dt_atendimento,
				dest.cd_pf_reembolso			= src.cd_pf_reembolso, 
				dest.cd_pj_reembolso			= src.cd_pj_reembolso,
				dest.nr_seq_pacote			= src.nr_seq_pacote,
				dest.dt_item_referencia			= src.dt_item_referencia,
				dest.ie_regime_atendimento		= src.ie_regime_atendimento,
				dest.ie_saude_ocupacional		= src.ie_saude_ocupacional;
	commit;
end if;

-- Faz o merge dos procedimentos do recurso de glosa.

merge into sip_nv_dados dest
using 	(SELECT	b.cd_guia,
		CASE WHEN b.ie_tipo_guia='3' THEN  null  ELSE b.cd_guia_referencia END  cd_guia_referencia,
		b.nr_seq_conta,
		b.nr_sequencia nr_seq_conta_proc,
		a.vl_liberado,
		nr_seq_lote_p nr_seq_lote_sip,
		b.nr_seq_protocolo,
		b.ie_tipo_guia,
		b.ie_origem_proced,
		b.cd_procedimento,
		b.nr_seq_clinica,
		b.ie_regime_internacao,
		b.nr_seq_tipo_atendimento,
		b.nr_seq_prestador_exec,
		b.qt_nasc_vivos_total_conta qt_nasc_vivos_total,
		pls_sip_pck.sip_retorna_cbo( b.ie_tipo_guia, b.nr_seq_cbo_saude, b.nr_sequencia, b.nr_seq_nota_cobranca, nr_versao_ptu_w) nr_seq_cbo_saude,
		b.cd_cid_principal_conta cd_doenca_dig,
		b.ie_sexo_benef ie_sexo,
		b.dt_nascimento_benef dt_nascimento,
		-- Calculo de quantidade estimada.

		-- Esse calculo visa estimar a quantidade recursada, atualmente a ANS nao destaca no TISS um campo explicito para

		-- quantidade recursada, ela apenas entende o recurso de valor. Com base nisto sera avaliado o estado do recurso e estimado a quantidade recursada

		-- Sempre que usar o vl unitario liberado, verificar se a quantidade liberada e diferente de null ou zero, se for igual a null ou zero tem que usar o valor unitario apresentado

			-- Quando a quantidade liberada e quantidade apresentada for igual, sera considerado glosa somente de valor e a quantidade recursada sera fixo 0, para nao duplicar com a conta original

			
		-- feito um case para separar o calculo novo do antigo, depois esse case deve sumir

		(case 	when(current_setting('pls_sip_pck.param_w')::param.ie_novo_sip = 'S')
			then
				(case	when(b.qt_procedimento_imp = b.qt_procedimento)	then 0
					-- Quando o valor acatado(na view esta como vl_liberado) for menor que o valor unitario e existe algum procedimento liberado, indica que foi recursado apenas o valor, deixando a quantidade fixa como 0, para nao duplicar com a conta original

					when 	((a.vl_liberado < b.vl_unitario) and (coalesce(b.qt_procedimento,0) > 0)) then 0
						
					-- Caso a quantidade liberada maior que zero, e nao caiu nas situacoes acima, tenta apurar a quantidade fazendo a divisao entre o valor total acatado e o valor unitario liberado

					when	((coalesce(a.vl_liberado,0) >= coalesce(b.vl_unitario,0)) and (coalesce(a.vl_liberado,0) > 0) and (coalesce(b.vl_unitario,0) >0) and (coalesce(b.qt_procedimento,0) > 0))	then ceil(a.vl_liberado / b.vl_unitario)
					-- se ainda nao encontrou usando o valor unitario liberado, tenta utilizar o valor unitario apresentado

					-- Se o valor acatado for menor que o valor unitario apresentado e nao tem quantidade liberada, indica que esta recursando valor de um item de uma conta totalmente glosada, entao deve ser Fixo 1

					when 	((a.vl_liberado < b.vl_unitario_imp) and (coalesce(b.qt_procedimento,0) = 0)) then 1
					-- Se o valor acatado for maior que o valor unitario apresentado e nao tem quantidade liberada, indica que esta recursando varios itens de uma conta totalmente glosada, entao deve ser estimada a quantidade com base nos valores

					when	((coalesce(a.vl_liberado,0) >= coalesce(b.vl_unitario_imp,0)) and (coalesce(a.vl_liberado,0) > 0) and (coalesce(b.vl_unitario_imp,0) >0) and (coalesce(b.qt_procedimento,0) = 0))	then ceil(a.vl_liberado / b.vl_unitario_imp)
					
					-- Se nao se encontrou nenhuma situacao prevista, utiliza 1 (conforme monitoramento)

					else	1
				end)
			else b.qt_procedimento 
		end) qt_proc_mat,
		b.cd_cat_cid_principal_conta cd_categoria_cid,
		b.ie_tipo_protocolo,
		b.nr_seq_congenere,
		-- Como so recursos com valor liberado sao considerados entao o item ou a conta nunca estarao glosados

		'N' ie_glosa_conta,
		'N' ie_glosa_item,
		pls_sip_pck.sip_nv_retorna_uf(
			b.ie_tipo_protocolo, b.nr_seq_congenere, 
			b.nr_seq_prestador_exec, b.nr_sequencia, 
			b.cd_pessoa_fisica_conta, b.cd_cgc_conta) sg_uf,
		b.ie_segmentacao_benef ie_segmentacao,
		b.ie_tipo_contratacao_benef ie_tipo_contratacao,
		coalesce(b.ie_tipo_segurado,c.ie_tipo_segurado) ie_tipo_segurado,
		a.dt_mes_competencia,
		CASE WHEN current_setting('pls_sip_pck.param_w')::param.ie_vinc_internacao='N' THEN  CASE WHEN b.ie_internado='S' THEN  'I'  ELSE 'A' END  WHEN current_setting('pls_sip_pck.param_w')::param.ie_vinc_internacao='S' THEN  CASE WHEN pls_obter_se_internado_alt(b.nr_seq_conta, 'S', b.ie_tipo_guia, b.nr_seq_guia, b.nr_seq_segurado, b.cd_guia_referencia, b.nr_seq_analise)='I' THEN  'I'  ELSE 'A' END  END  ie_tipo_atendimento,
		b.qt_idade_benef qt_idade,
		b.qt_idade_benef_mes qt_idade_mes,
		b.qt_idade_benef_dia qt_idade_dia,
		b.nr_seq_segurado,
		b.cd_pessoa_fisica_conta cd_pf_reembolso,
		b.cd_cgc_conta cd_pj_reembolso,
		b.ie_tipo_despesa,
		b.nr_documento,
		b.dt_entrada_conta dt_inicio_atendimento,
		b.dt_alta_conta dt_fim_atendimento,
		b.qt_horas_atendimento_conta qt_horas_atendimento,
		a.nr_seq_rec_protocolo,
		a.nr_seq_rec_conta,
		a.nr_seq_rec_proc,
		'RG' ie_origem_info,
		-- Se nao tem a data de atendimento da conta considera a data incial do lote

		trunc(coalesce(b.dt_atendimento_conta, dt_inicio_w), 'Q') dt_atendimento,
		b.nr_seq_pacote,
		b.dt_procedimento dt_item_referencia,
		b.ie_regime_atendimento,
		b.ie_saude_ocupacional
	from	sip_recurso_glosa_proc_v	a,
		pls_conta_proc_v		b,
		pls_segurado			c
	where	a.dt_mes_competencia		between dt_inicio_w and dt_fim_w
	and	b.nr_sequencia 			= a.nr_seq_conta_proc
	and	b.cd_estabelecimento_prot	= cd_estabelecimento_p
	-- se for segurado de operadora ou transferencia de responsabilidade ou nao tiver tipo informado

	and	c.nr_sequencia			= b.nr_seq_segurado
	and (b.ie_tipo_segurado   in ('B', 'R') or coalesce(b.ie_tipo_segurado::text, '') = '')) src
on (dest.nr_seq_lote_sip	= src.nr_seq_lote_sip and 
	dest.nr_seq_rec_proc	= src.nr_seq_rec_proc and
	-- Verifica se a origem da informacao e de Contas medicas, se faz necessario por que 

	-- para recurso e contestacao gravamos a sequencia do conta proc e conta mat

	-- estes itens de contas medicas so devem atualizar este tipo de origem.

	-- Nao podemos fazer com que neste merge seja atualizado as informacoes de recurso  ou contestacao

	-- por que os itens dessas origens podem nao pertencer ao periodo do SIP informado, fazendo com

	-- que itens nao entrem ou nao sejam atualizados.

	dest.ie_origem_info	= src.ie_origem_info)
-- Quando o registro ainda nao esta na tabela grava ele

when	not matched then
	insert(	dest.nr_sequencia, dest.nr_seq_lote_sip, dest.cd_guia, dest.cd_guia_referencia, 
			dest.nr_seq_conta, dest.nr_seq_conta_proc, dest.ie_tipo_guia, 
			dest.nr_seq_protocolo, dest.cd_procedimento, dest.ie_origem_proced, dest.nr_seq_prestador_exec, 
			dest.nr_seq_cbo_saude, dest.cd_doenca_dig, dest.cd_categoria_cid, dest.nr_seq_tipo_atendimento,
			dest.nr_seq_clinica, dest.ie_regime_internacao, dest.dt_nascimento, dest.ie_sexo, 
			dest.qt_proc_mat, dest.ie_glosa_conta, dest.ie_glosa_item, dest.ie_tipo_protocolo, 
			dest.nr_seq_congenere, dest.sg_uf, dest.ie_tipo_contratacao, dest.ie_segmentacao, 
			dest.ie_tipo_segurado, dest.dt_mes_competencia, dest.qt_idade, dest.qt_idade_mes, 
			dest.qt_idade_dia, dest.ie_tipo_atendimento, dest.vl_liberado, dest.ie_segmentacao_sip, 
			dest.nr_seq_segurado, dest.ie_controle_upd, dest.ie_tipo_despesa, dest.qt_nasc_vivos_total,
			dest.nr_documento, dest.dt_inicio_atendimento, dest.dt_fim_atendimento, dest.qt_horas_atendimento, 
			dest.ie_origem_info, dest.dt_atendimento, dest.nm_usuario, dest.nm_usuario_nrec,
			dest.dt_atualizacao, dest.dt_atualizacao_nrec, dest.nr_seq_rec_protocolo, dest.nr_seq_rec_conta, 
			dest.nr_seq_rec_proc, dest.cd_pf_reembolso, dest.cd_pj_reembolso, dest.nr_seq_pacote,
			dest.dt_item_referencia, dest.ie_regime_atendimento, dest.ie_saude_ocupacional)
	values (nextval('sip_nv_dados_seq'), src.nr_seq_lote_sip, src.cd_guia, src.cd_guia_referencia, 
			src.nr_seq_conta, src.nr_seq_conta_proc, src.ie_tipo_guia, 
			src.nr_seq_protocolo, src.cd_procedimento, src.ie_origem_proced, src.nr_seq_prestador_exec, 
			src.nr_seq_cbo_saude, src.cd_doenca_dig, src.cd_categoria_cid, src.nr_seq_tipo_atendimento, 
			src.nr_seq_clinica, src.ie_regime_internacao, src.dt_nascimento, src.ie_sexo,
			src.qt_proc_mat, src.ie_glosa_conta, src.ie_glosa_item, src.ie_tipo_protocolo, 
			src.nr_seq_congenere, src.sg_uf, src.ie_tipo_contratacao, src.ie_segmentacao, 
			src.ie_tipo_segurado, src.dt_mes_competencia, src.qt_idade, src.qt_idade_mes, 
			src.qt_idade_dia, src.ie_tipo_atendimento, src.vl_liberado, null /*ie_segmentacao_sip */
, 
			src.nr_seq_segurado, 'S' /*ie_controle_upd*/
, src.ie_tipo_despesa, src.qt_nasc_vivos_total, 
			src.nr_documento, src.dt_inicio_atendimento, src.dt_fim_atendimento, src.qt_horas_atendimento, 
			src.ie_origem_info, src.dt_atendimento, nm_usuario_p, nm_usuario_p,
			clock_timestamp(), clock_timestamp(), src.nr_seq_rec_protocolo, src.nr_seq_rec_conta, 
			src.nr_seq_rec_proc, src.cd_pf_reembolso, src.cd_pj_reembolso, src.nr_seq_pacote,
			src.dt_item_referencia, src.ie_regime_atendimento, src.ie_saude_ocupacional)
-- Quando ja esta atualiza, tem dados que nao faz sentido atualizar, como sequencia da conta, do conta proc, do conta mat

-- pois nao vai mudar.

when	matched then
	update set	dest.cd_guia				= src.cd_guia,
			dest.cd_guia_referencia			= src.cd_guia_referencia,
			dest.ie_tipo_guia			= src.ie_tipo_guia,
			dest.nm_usuario				= nm_usuario_p,
			dest.dt_atualizacao			= clock_timestamp(),
			dest.cd_procedimento			= src.cd_procedimento,
			dest.ie_origem_proced			= src.ie_origem_proced,
			dest.nr_seq_prestador_exec		= src.nr_seq_prestador_exec,
			dest.nr_seq_cbo_saude			= src.nr_seq_cbo_saude,
			dest.cd_doenca_dig			= src.cd_doenca_dig, 	
			dest.cd_categoria_cid			= src.cd_categoria_cid,
			dest.nr_seq_tipo_atendimento		= src.nr_seq_tipo_atendimento,
			dest.nr_seq_clinica			= src.nr_seq_clinica, 
			dest.ie_regime_internacao		= src.ie_regime_internacao,
			dest.dt_nascimento			= src.dt_nascimento,
			dest.ie_sexo				= src.ie_sexo,
			dest.qt_proc_mat			= src.qt_proc_mat,
			dest.ie_glosa_conta			= src.ie_glosa_conta,
			dest.ie_glosa_item			= src.ie_glosa_item,
			dest.ie_tipo_protocolo			= src.ie_tipo_protocolo,
			dest.nr_seq_congenere			= src.nr_seq_congenere,
			dest.sg_uf 				= src.sg_uf, 
			dest.ie_tipo_contratacao		= src.ie_tipo_contratacao,
			dest.ie_segmentacao			= src.ie_segmentacao,
			dest.ie_tipo_segurado			= src.ie_tipo_segurado,
			dest.dt_mes_competencia			= src.dt_mes_competencia,
			dest.qt_idade				= src.qt_idade,
			dest.qt_idade_mes			= src.qt_idade_mes,
			dest.qt_idade_dia			= src.qt_idade_dia,
			dest.ie_tipo_atendimento		= src.ie_tipo_atendimento,
			dest.vl_liberado			= src.vl_liberado,
			dest.ie_segmentacao_sip			 = NULL,
			dest.nr_seq_segurado			= src.nr_seq_segurado,
			dest.ie_controle_upd			= 'S',
			dest.ie_tipo_despesa			= src.ie_tipo_despesa,
			dest.qt_nasc_vivos_total		= src.qt_nasc_vivos_total,
			dest.nr_documento			= src.nr_documento,
			dest.dt_inicio_atendimento		= src.dt_inicio_atendimento,
			dest.dt_fim_atendimento			= src.dt_fim_atendimento,
			dest.qt_horas_atendimento		= src.qt_horas_atendimento,
			dest.dt_atendimento			= src.dt_atendimento,
			dest.cd_pf_reembolso			= src.cd_pf_reembolso, 
			dest.cd_pj_reembolso			= src.cd_pj_reembolso,
			dest.nr_seq_pacote			= src.nr_seq_pacote,
			dest.dt_item_referencia			= src.dt_item_referencia,
			dest.ie_regime_atendimento		= src.ie_regime_atendimento,
			dest.ie_saude_ocupacional		= src.ie_saude_ocupacional;
commit;

-- Faz o merge dos materiais do recurso de glosa.

merge into sip_nv_dados dest
using 	(SELECT	b.cd_guia,
		CASE WHEN b.ie_tipo_guia='3' THEN  null  ELSE b.cd_guia_referencia END  cd_guia_referencia,
		b.nr_seq_conta,
		b.nr_sequencia nr_seq_conta_mat,
		a.vl_liberado,
		nr_seq_lote_p nr_seq_lote_sip,
		b.nr_seq_protocolo,
		b.ie_tipo_guia,
		b.nr_seq_clinica,
		b.ie_regime_internacao,
		b.nr_seq_tipo_atendimento,
		b.nr_seq_prestador_exec,
		b.qt_nasc_vivos_total_conta qt_nasc_vivos_total,
		b.nr_seq_cbo_saude,
		b.cd_cid_principal_conta cd_doenca_dig,
		b.ie_sexo_benef ie_sexo,
		b.dt_nascimento_benef dt_nascimento,
		-- Calculo de quantidade estimada.

		-- Esse calculo visa estimar a quantidade recursada, atualmente a ANS nao destaca no TISS um campo explicito para

		-- quantidade recursada, ela apenas entende o recurso de valor. Com base nisto sera avaliado o estado do recurso e estimado a quantidade recursada

		-- Sempre que usar o vl unitario liberado, verificar se a quantidade liberada e diferente de null ou zero, se for igual a null ou zero tem que usar o valor unitario apresentado

			-- Quando a quantidade liberada e quantidade apresentada for igual, sera considerado glosa somente de valor e a quantidade recursada sera fixo 0, para nao duplicar com a conta original

			
		-- feito um case para separar o calculo novo do antigo, depois esse case deve sumir

		(case 	when(current_setting('pls_sip_pck.param_w')::param.ie_novo_sip = 'S')
			then
				(case	when(b.qt_material_imp = b.qt_material)	then 0
					-- Quando o valor acatado(na view esta como vl_liberado) for menor que o valor unitario e existe algum procedimento liberado, indica que foi recursado apenas o valor, deixando a quantidade fixa como 0, para nao duplicar com a conta original

					when 	((a.vl_liberado < b.vl_unitario) and (coalesce(b.qt_material,0) > 0)) then 0
						
					-- Caso a quantidade liberada maior que zero, e nao caiu nas situacoes acima, tenta apurar a quantidade fazendo a divisao entre o valor total acatado e o valor unitario liberado

					when	((coalesce(a.vl_liberado,0) >= coalesce(b.vl_unitario,0)) and (coalesce(a.vl_liberado,0) > 0) and (coalesce(b.vl_unitario,0) >0) and (coalesce(b.qt_material,0) > 0))	then ceil(a.vl_liberado / b.vl_unitario)
					-- se ainda nao encontrou usando o valor unitario liberado, tenta utilizar o valor unitario apresentado

					-- Se o valor acatado for menor que o valor unitario apresentado e nao tem quantidade liberada, indica que esta recursando valor de um item de uma conta totalmente glosada, entao deve ser Fixo 1

					when 	((a.vl_liberado < b.vl_unitario_imp) and (coalesce(b.qt_material,0) = 0)) then 1
					-- Se o valor acatado for maior que o valor unitario apresentado e nao tem quantidade liberada, indica que esta recursando varios itens de uma conta totalmente glosada, entao deve ser estimada a quantidade com base nos valores

					when	((coalesce(a.vl_liberado,0) >= coalesce(b.vl_unitario_imp,0)) and (coalesce(a.vl_liberado,0) > 0) and (coalesce(b.vl_unitario_imp,0) >0) and (coalesce(b.qt_material,0) = 0))	then ceil(a.vl_liberado / b.vl_unitario_imp)
					
					-- Se nao se encontrou nenhuma situacao prevista, utiliza 1 (conforme monitoramento)

					else	1
				end)
			else b.qt_material 
		end) qt_proc_mat,
		b.cd_cat_cid_principal_conta cd_categoria_cid,
		b.ie_tipo_protocolo,
		b.nr_seq_congenere,
		-- Como so recursos com valor liberado sao considerados entao o item ou a conta nunca estarao glosados

		'N' ie_glosa_conta,
		'N' ie_glosa_item,
		pls_sip_pck.sip_nv_retorna_uf(
			b.ie_tipo_protocolo, b.nr_seq_congenere, 
			b.nr_seq_prestador_exec, b.nr_sequencia, 
			b.cd_pessoa_fisica_conta, b.cd_cgc_conta) sg_uf,
		b.ie_segmentacao_benef ie_segmentacao,
		b.ie_tipo_contratacao_benef ie_tipo_contratacao,
		coalesce(b.ie_tipo_segurado,c.ie_tipo_segurado) ie_tipo_segurado,
		a.dt_mes_competencia,
		CASE WHEN current_setting('pls_sip_pck.param_w')::param.ie_vinc_internacao='N' THEN  CASE WHEN b.ie_internado='S' THEN  'I'  ELSE 'A' END  WHEN current_setting('pls_sip_pck.param_w')::param.ie_vinc_internacao='S' THEN  CASE WHEN pls_obter_se_internado_alt(b.nr_seq_conta, 'S', b.ie_tipo_guia, b.nr_seq_guia, b.nr_seq_segurado, b.cd_guia_referencia, b.nr_seq_analise)='I' THEN  'I'  ELSE 'A' END  END  ie_tipo_atendimento,
		b.qt_idade_benef qt_idade,
		b.qt_idade_benef_mes qt_idade_mes,
		b.qt_idade_benef_dia qt_idade_dia,
		b.nr_seq_segurado,
		b.nr_seq_material,
		b.cd_material_inf cd_material,
		b.cd_pessoa_fisica_conta cd_pf_reembolso,
		b.cd_cgc_conta cd_pj_reembolso,
		b.ie_tipo_despesa,
		b.nr_documento,
		b.dt_entrada_conta dt_inicio_atendimento,
		b.dt_alta_conta dt_fim_atendimento,
		b.qt_horas_atendimento_conta qt_horas_atendimento,
		a.nr_seq_rec_protocolo,
		a.nr_seq_rec_conta,
		a.nr_seq_rec_mat,
		'RG' ie_origem_info,
		-- Se nao tem a data de atendimento da conta considera a data incial do lote

		trunc(coalesce(b.dt_atendimento_conta, dt_inicio_w), 'Q') dt_atendimento,
		b.nr_seq_pacote,
		b.dt_atendimento dt_item_referencia,
		b.ie_regime_atendimento,
		b.ie_saude_ocupacional
	from	sip_recurso_glosa_mat_v		a,
		pls_conta_mat_v			b,
		pls_segurado			c
	where	a.dt_mes_competencia 		between dt_inicio_w and dt_fim_w
	and	b.nr_sequencia			= a.nr_seq_conta_mat
	and	b.cd_estabelecimento_prot	= cd_estabelecimento_p
	-- se for segurado de operadora ou transferencia de responsabilidade ou nao tiver tipo informado

	and	c.nr_sequencia			= b.nr_seq_segurado
	and (b.ie_tipo_segurado in ('B', 'R') or coalesce(b.ie_tipo_segurado::text, '') = '')) src
on (dest.nr_seq_lote_sip	= src.nr_seq_lote_sip and 
	dest.nr_seq_rec_mat	= src.nr_seq_rec_mat and
	-- Verifica se a origem da informacao e de Contas medicas, se faz necessario por que 

	-- para recurso e contestacao gravamos a sequencia do conta proc e conta mat

	-- estes itens de contas medicas so devem atualizar este tipo de origem.

	-- Nao podemos fazer com que neste merge seja atualizado as informacoes de recurso  ou contestacao

	-- por que os itens dessas origens podem nao pertencer ao periodo do SIP informado, fazendo com

	-- que itens nao entrem ou nao sejam atualizados.

	dest.ie_origem_info	= src.ie_origem_info)
-- Quando o registro ainda nao esta na tabela grava ele

when	not matched then
	insert(	dest.nr_sequencia, dest.nr_seq_lote_sip, dest.cd_guia, dest.cd_guia_referencia, 
			dest.nr_seq_conta, dest.nr_seq_conta_mat, dest.ie_tipo_guia, 
			dest.nr_seq_protocolo, dest.cd_material, dest.nr_seq_material, dest.nr_seq_prestador_exec, 
			dest.nr_seq_cbo_saude, dest.cd_doenca_dig, dest.cd_categoria_cid, dest.nr_seq_tipo_atendimento,
			dest.nr_seq_clinica, dest.ie_regime_internacao, dest.dt_nascimento, dest.ie_sexo, 
			dest.qt_proc_mat, dest.ie_glosa_conta, dest.ie_glosa_item, dest.ie_tipo_protocolo, 
			dest.nr_seq_congenere, dest.sg_uf, dest.ie_tipo_contratacao, dest.ie_segmentacao, 
			dest.ie_tipo_segurado, dest.dt_mes_competencia, dest.qt_idade, dest.qt_idade_mes, 
			dest.qt_idade_dia, dest.ie_tipo_atendimento, dest.vl_liberado, dest.ie_segmentacao_sip, 
			dest.nr_seq_segurado, dest.ie_controle_upd, dest.ie_tipo_despesa, dest.qt_nasc_vivos_total,
			dest.nr_documento, dest.dt_inicio_atendimento, dest.dt_fim_atendimento, dest.qt_horas_atendimento, 
			dest.ie_origem_info, dest.dt_atendimento, dest.nm_usuario, dest.nm_usuario_nrec,
			dest.dt_atualizacao, dest.dt_atualizacao_nrec, dest.nr_seq_rec_protocolo, dest.nr_seq_rec_conta,
			dest.nr_seq_rec_mat, dest.cd_pf_reembolso, dest.cd_pj_reembolso, dest.nr_seq_pacote,
			dest.dt_item_referencia, dest.ie_regime_atendimento, dest.ie_saude_ocupacional)
	values (nextval('sip_nv_dados_seq'), src.nr_seq_lote_sip, src.cd_guia, src.cd_guia_referencia, 
			src.nr_seq_conta, src.nr_seq_conta_mat, src.ie_tipo_guia, 
			src.nr_seq_protocolo, src.cd_material, src.nr_seq_material, src.nr_seq_prestador_exec, 
			src.nr_seq_cbo_saude, src.cd_doenca_dig, src.cd_categoria_cid, src.nr_seq_tipo_atendimento, 
			src.nr_seq_clinica, src.ie_regime_internacao, src.dt_nascimento, src.ie_sexo,
			src.qt_proc_mat, src.ie_glosa_conta, src.ie_glosa_item, src.ie_tipo_protocolo, 
			src.nr_seq_congenere, src.sg_uf, src.ie_tipo_contratacao, src.ie_segmentacao, 
			src.ie_tipo_segurado, src.dt_mes_competencia, src.qt_idade, src.qt_idade_mes, 
			src.qt_idade_dia, src.ie_tipo_atendimento, src.vl_liberado, null /*ie_segmentacao_sip */
, 
			src.nr_seq_segurado, 'S' /*ie_controle_upd*/
, src.ie_tipo_despesa, src.qt_nasc_vivos_total, 
			src.nr_documento, src.dt_inicio_atendimento, src.dt_fim_atendimento, src.qt_horas_atendimento, 
			src.ie_origem_info, src.dt_atendimento, nm_usuario_p, nm_usuario_p,
			clock_timestamp(), clock_timestamp(), src.nr_seq_rec_protocolo, src.nr_seq_rec_conta,
			src.nr_seq_rec_mat, src.cd_pf_reembolso, src.cd_pj_reembolso, src.nr_seq_pacote,
			src.dt_item_referencia, src.ie_regime_atendimento, src.ie_saude_ocupacional)
-- Quando ja esta atualiza, tem dados que nao faz sentido atualizar, como sequencia da conta, do conta proc, do conta mat

-- pois nao vai mudar.

when	matched then
	update set	dest.cd_guia				= src.cd_guia,
			dest.cd_guia_referencia			= src.cd_guia_referencia,
			dest.ie_tipo_guia			= src.ie_tipo_guia,
			dest.nm_usuario				= nm_usuario_p,
			dest.dt_atualizacao			= clock_timestamp(),
			dest.cd_material			= src.cd_material,
			dest.nr_seq_material			= src.nr_seq_material,
			dest.nr_seq_prestador_exec		= src.nr_seq_prestador_exec,
			dest.nr_seq_cbo_saude			= src.nr_seq_cbo_saude,
			dest.cd_doenca_dig			= src.cd_doenca_dig, 	
			dest.cd_categoria_cid			= src.cd_categoria_cid,
			dest.nr_seq_tipo_atendimento		= src.nr_seq_tipo_atendimento,
			dest.nr_seq_clinica			= src.nr_seq_clinica, 
			dest.ie_regime_internacao		= src.ie_regime_internacao,
			dest.dt_nascimento			= src.dt_nascimento,
			dest.ie_sexo				= src.ie_sexo,
			dest.qt_proc_mat			= src.qt_proc_mat,
			dest.ie_glosa_conta			= src.ie_glosa_conta,
			dest.ie_glosa_item			= src.ie_glosa_item,
			dest.ie_tipo_protocolo			= src.ie_tipo_protocolo,
			dest.nr_seq_congenere			= src.nr_seq_congenere,
			dest.sg_uf 				= src.sg_uf, 
			dest.ie_tipo_contratacao		= src.ie_tipo_contratacao,
			dest.ie_segmentacao			= src.ie_segmentacao,
			dest.ie_tipo_segurado			= src.ie_tipo_segurado,
			dest.dt_mes_competencia			= src.dt_mes_competencia,
			dest.qt_idade				= src.qt_idade,
			dest.qt_idade_mes			= src.qt_idade_mes,
			dest.qt_idade_dia			= src.qt_idade_dia,
			dest.ie_tipo_atendimento		= src.ie_tipo_atendimento,
			dest.vl_liberado			= src.vl_liberado,
			dest.ie_segmentacao_sip			 = NULL,
			dest.nr_seq_segurado			= src.nr_seq_segurado,
			dest.ie_controle_upd			= 'S',
			dest.ie_tipo_despesa			= src.ie_tipo_despesa,
			dest.qt_nasc_vivos_total		= src.qt_nasc_vivos_total,
			dest.nr_documento			= src.nr_documento,
			dest.dt_inicio_atendimento		= src.dt_inicio_atendimento,
			dest.dt_fim_atendimento			= src.dt_fim_atendimento,
			dest.qt_horas_atendimento		= src.qt_horas_atendimento,
			dest.dt_atendimento			= src.dt_atendimento,
			dest.cd_pf_reembolso			= src.cd_pf_reembolso, 
			dest.cd_pj_reembolso			= src.cd_pj_reembolso,
			dest.nr_seq_pacote			= src.nr_seq_pacote,
			dest.dt_item_referencia			= src.dt_item_referencia, 
			dest.ie_regime_atendimento		= src.ie_regime_atendimento, 
			dest.ie_saude_ocupacional		= src.ie_saude_ocupacional;
commit;

-- Faz o merge dos procedimentos da discussao.

merge into sip_nv_dados dest
using(SELECT	b.cd_guia,
		CASE WHEN b.ie_tipo_guia='3' THEN  null  ELSE b.cd_guia_referencia END  cd_guia_referencia,
		b.nr_seq_conta,
		b.nr_sequencia nr_seq_conta_proc,
		a.vl_liberado,
		nr_seq_lote_p nr_seq_lote_sip,
		b.nr_seq_protocolo,
		b.ie_tipo_guia,
		b.ie_origem_proced,
		b.cd_procedimento,
		b.nr_seq_clinica,
		b.ie_regime_internacao,
		b.nr_seq_tipo_atendimento,
		b.nr_seq_prestador_exec,
		b.qt_nasc_vivos_total_conta qt_nasc_vivos_total,
		pls_sip_pck.sip_retorna_cbo( b.ie_tipo_guia, b.nr_seq_cbo_saude, b.nr_sequencia, b.nr_seq_nota_cobranca, nr_versao_ptu_w) nr_seq_cbo_saude,
		b.cd_cid_principal_conta cd_doenca_dig,
		b.ie_sexo_benef ie_sexo,
		b.dt_nascimento_benef dt_nascimento,
		CASE WHEN current_setting('pls_sip_pck.param_w')::param.ie_novo_sip='S' THEN  CASE WHEN a.qt_procedimento=0 THEN  1  ELSE a.qt_procedimento END   ELSE CASE WHEN b.qt_procedimento=0 THEN  1  ELSE b.qt_procedimento END  END  qt_proc_mat, -- ver com o Leo		
		b.cd_cat_cid_principal_conta cd_categoria_cid,
		b.ie_tipo_protocolo,
		b.nr_seq_congenere,
		-- Como so discussoes com valor liberado sao considerados entao o item ou a conta nunca estarao glosados

		'N' ie_glosa_conta,
		'N' ie_glosa_item,
		pls_sip_pck.sip_nv_retorna_uf(
			b.ie_tipo_protocolo, b.nr_seq_congenere,
			b.nr_seq_prestador_exec, b.nr_sequencia, 
			b.cd_pessoa_fisica_conta, b.cd_cgc_conta) sg_uf,
		b.ie_segmentacao_benef ie_segmentacao,
		b.ie_tipo_contratacao_benef ie_tipo_contratacao,
		coalesce(b.ie_tipo_segurado,c.ie_tipo_segurado) ie_tipo_segurado,
		a.dt_mes_competencia,
		CASE WHEN current_setting('pls_sip_pck.param_w')::param.ie_vinc_internacao='N' THEN  CASE WHEN b.ie_internado='S' THEN  'I'  ELSE 'A' END  WHEN current_setting('pls_sip_pck.param_w')::param.ie_vinc_internacao='S' THEN  CASE WHEN pls_obter_se_internado_alt(b.nr_seq_conta, 'S', b.ie_tipo_guia, b.nr_seq_guia, b.nr_seq_segurado, b.cd_guia_referencia, b.nr_seq_analise)='I' THEN  'I'  ELSE 'A' END  END  ie_tipo_atendimento,
		b.qt_idade_benef qt_idade,
		b.qt_idade_benef_mes qt_idade_mes,
		b.qt_idade_benef_dia qt_idade_dia,
		b.nr_seq_segurado,
		b.cd_pessoa_fisica_conta cd_pf_reembolso,
		b.cd_cgc_conta cd_pj_reembolso,
		b.ie_tipo_despesa,
		b.nr_documento,
		b.dt_entrada_conta dt_inicio_atendimento,
		b.dt_alta_conta dt_fim_atendimento,
		b.qt_horas_atendimento_conta qt_horas_atendimento,
		a.nr_seq_lote nr_seq_lote_discussao,
		a.nr_seq_discussao,
		a.nr_seq_discussao_proc,
		'CI' ie_origem_info,
		-- Se nao tem a data de atendimento da conta considera a data incial do lote

		trunc(coalesce(b.dt_atendimento_conta, dt_inicio_w), 'Q') dt_atendimento,
		b.nr_seq_pacote,
		b.dt_procedimento dt_item_referencia,
		b.ie_regime_atendimento,
		b.ie_saude_ocupacional
	from	sip_discussao_proc_v	a,
		pls_conta_proc_v	b,
		pls_segurado		c
	where	a.dt_mes_competencia 		between dt_inicio_w and dt_fim_w
	and	b.nr_sequencia 			= a.nr_seq_conta_proc
	and	b.cd_estabelecimento_prot	= cd_estabelecimento_p
	-- se for segurado de operadora ou transferencia de responsabilidade ou nao tiver tipo informado

	and	c.nr_sequencia			= b.nr_seq_segurado
	and (b.ie_tipo_segurado   in ('B', 'R') or coalesce(b.ie_tipo_segurado::text, '') = '')) src
on (dest.nr_seq_lote_sip		= src.nr_seq_lote_sip and 
	dest.nr_seq_discussao_proc	= src.nr_seq_discussao_proc and
	-- Verifica se a origem da informacao e de Contas medicas, se faz necessario por que 

	-- para recurso e contestacao gravamos a sequencia do conta proc e conta mat

	-- estes itens de contas medicas so devem atualizar este tipo de origem.

	-- Nao podemos fazer com que neste merge seja atualizado as informacoes de recurso  ou contestacao

	-- por que os itens dessas origens podem nao pertencer ao periodo do SIP informado, fazendo com

	-- que itens nao entrem ou nao sejam atualizados.

	dest.ie_origem_info	= src.ie_origem_info)
-- Quando o registro ainda nao esta na tabela grava ele

when	not matched then
	insert(	dest.nr_sequencia, dest.nr_seq_lote_sip, dest.cd_guia, dest.cd_guia_referencia, 
			dest.nr_seq_conta, dest.nr_seq_conta_proc, dest.ie_tipo_guia, 
			dest.nr_seq_protocolo, dest.cd_procedimento, dest.ie_origem_proced, dest.nr_seq_prestador_exec, 
			dest.nr_seq_cbo_saude, dest.cd_doenca_dig, dest.cd_categoria_cid, dest.nr_seq_tipo_atendimento,
			dest.nr_seq_clinica, dest.ie_regime_internacao, dest.dt_nascimento, dest.ie_sexo, 
			dest.qt_proc_mat, dest.ie_glosa_conta, dest.ie_glosa_item, dest.ie_tipo_protocolo, 
			dest.nr_seq_congenere, dest.sg_uf, dest.ie_tipo_contratacao, dest.ie_segmentacao, 
			dest.ie_tipo_segurado, dest.dt_mes_competencia, dest.qt_idade, dest.qt_idade_mes, 
			dest.qt_idade_dia, dest.ie_tipo_atendimento, dest.vl_liberado, dest.ie_segmentacao_sip, 
			dest.nr_seq_segurado, dest.ie_controle_upd, dest.ie_tipo_despesa, dest.qt_nasc_vivos_total,
			dest.nr_documento, dest.dt_inicio_atendimento, dest.dt_fim_atendimento, dest.qt_horas_atendimento, 
			dest.ie_origem_info, dest.dt_atendimento, dest.nm_usuario, dest.nm_usuario_nrec,
			dest.dt_atualizacao, dest.dt_atualizacao_nrec, dest.nr_seq_lote_discussao, dest.nr_seq_discussao, 
			dest.nr_seq_discussao_proc, dest.cd_pf_reembolso, dest.cd_pj_reembolso, dest.nr_seq_pacote,
			dest.dt_item_referencia, dest.ie_regime_atendimento, dest.ie_saude_ocupacional)
	values (nextval('sip_nv_dados_seq'), src.nr_seq_lote_sip, src.cd_guia, src.cd_guia_referencia, 
			src.nr_seq_conta, src.nr_seq_conta_proc, src.ie_tipo_guia, 
			src.nr_seq_protocolo, src.cd_procedimento, src.ie_origem_proced, src.nr_seq_prestador_exec, 
			src.nr_seq_cbo_saude, src.cd_doenca_dig, src.cd_categoria_cid, src.nr_seq_tipo_atendimento, 
			src.nr_seq_clinica, src.ie_regime_internacao, src.dt_nascimento, src.ie_sexo,
			src.qt_proc_mat, src.ie_glosa_conta, src.ie_glosa_item, src.ie_tipo_protocolo, 
			src.nr_seq_congenere, src.sg_uf, src.ie_tipo_contratacao, src.ie_segmentacao, 
			src.ie_tipo_segurado, src.dt_mes_competencia, src.qt_idade, src.qt_idade_mes, 
			src.qt_idade_dia, src.ie_tipo_atendimento, src.vl_liberado, null /*ie_segmentacao_sip */
, 
			src.nr_seq_segurado, 'S' /*ie_controle_upd*/
, src.ie_tipo_despesa, src.qt_nasc_vivos_total, 
			src.nr_documento, src.dt_inicio_atendimento, src.dt_fim_atendimento, src.qt_horas_atendimento, 
			src.ie_origem_info, src.dt_atendimento, nm_usuario_p, nm_usuario_p,
			clock_timestamp(), clock_timestamp(), src.nr_seq_lote_discussao, src.nr_seq_discussao, 
			src.nr_seq_discussao_proc, src.cd_pf_reembolso, src.cd_pj_reembolso, src.nr_seq_pacote,
			src.dt_item_referencia, src.ie_regime_atendimento, src.ie_saude_ocupacional)
-- Quando ja esta atualiza, tem dados que nao faz sentido atualizar, como sequencia da conta, do conta proc, do conta mat

-- pois nao vai mudar.

when	matched then
	update set	dest.cd_guia				= src.cd_guia,
			dest.cd_guia_referencia			= src.cd_guia_referencia,
			dest.ie_tipo_guia			= src.ie_tipo_guia,
			dest.nm_usuario				= nm_usuario_p,
			dest.dt_atualizacao			= clock_timestamp(),
			dest.cd_procedimento			= src.cd_procedimento,
			dest.ie_origem_proced			= src.ie_origem_proced,
			dest.nr_seq_prestador_exec		= src.nr_seq_prestador_exec,
			dest.nr_seq_cbo_saude			= src.nr_seq_cbo_saude,
			dest.cd_doenca_dig			= src.cd_doenca_dig, 	
			dest.cd_categoria_cid			= src.cd_categoria_cid,
			dest.nr_seq_tipo_atendimento		= src.nr_seq_tipo_atendimento,
			dest.nr_seq_clinica			= src.nr_seq_clinica, 
			dest.ie_regime_internacao		= src.ie_regime_internacao,
			dest.dt_nascimento			= src.dt_nascimento,
			dest.ie_sexo				= src.ie_sexo,
			dest.qt_proc_mat			= src.qt_proc_mat,
			dest.ie_glosa_conta			= src.ie_glosa_conta,
			dest.ie_glosa_item			= src.ie_glosa_item,
			dest.ie_tipo_protocolo			= src.ie_tipo_protocolo,
			dest.nr_seq_congenere			= src.nr_seq_congenere,
			dest.sg_uf 				= src.sg_uf, 
			dest.ie_tipo_contratacao		= src.ie_tipo_contratacao,
			dest.ie_segmentacao			= src.ie_segmentacao,
			dest.ie_tipo_segurado			= src.ie_tipo_segurado,
			dest.dt_mes_competencia			= src.dt_mes_competencia,
			dest.qt_idade				= src.qt_idade,
			dest.qt_idade_mes			= src.qt_idade_mes,
			dest.qt_idade_dia			= src.qt_idade_dia,
			dest.ie_tipo_atendimento		= src.ie_tipo_atendimento,
			dest.vl_liberado			= src.vl_liberado,
			dest.ie_segmentacao_sip			 = NULL,
			dest.nr_seq_segurado			= src.nr_seq_segurado,
			dest.ie_controle_upd			= 'S',
			dest.ie_tipo_despesa			= src.ie_tipo_despesa,
			dest.qt_nasc_vivos_total		= src.qt_nasc_vivos_total,
			dest.nr_documento			= src.nr_documento,
			dest.dt_inicio_atendimento		= src.dt_inicio_atendimento,
			dest.dt_fim_atendimento			= src.dt_fim_atendimento,
			dest.qt_horas_atendimento		= src.qt_horas_atendimento,
			dest.dt_atendimento			= src.dt_atendimento,
			dest.cd_pf_reembolso			= src.cd_pf_reembolso, 
			dest.cd_pj_reembolso			= src.cd_pj_reembolso,
			dest.nr_seq_pacote			= src.nr_seq_pacote,
			dest.dt_item_referencia			= src.dt_item_referencia,
			dest.ie_regime_atendimento		= src.ie_regime_atendimento, 
			dest.ie_saude_ocupacional		= src.ie_saude_ocupacional;
commit;

-- Faz o merge dos materiais da discussao.

merge into sip_nv_dados dest
using(SELECT	b.cd_guia,
		CASE WHEN b.ie_tipo_guia='3' THEN  null  ELSE b.cd_guia_referencia END  cd_guia_referencia,
		b.nr_seq_conta,
		b.nr_sequencia nr_seq_conta_mat,
		a.vl_liberado,
		nr_seq_lote_p nr_seq_lote_sip,
		b.nr_seq_protocolo,
		b.ie_tipo_guia,
		b.nr_seq_clinica,
		b.ie_regime_internacao,
		b.nr_seq_tipo_atendimento,
		b.nr_seq_prestador_exec,
		b.qt_nasc_vivos_total_conta qt_nasc_vivos_total,
		b.nr_seq_cbo_saude,
		b.cd_cid_principal_conta cd_doenca_dig,
		b.ie_sexo_benef ie_sexo,
		b.dt_nascimento_benef dt_nascimento,
		CASE WHEN current_setting('pls_sip_pck.param_w')::param.ie_novo_sip='S' THEN  a.qt_material  ELSE b.qt_material END  qt_proc_mat,
		b.cd_cat_cid_principal_conta cd_categoria_cid,
		b.ie_tipo_protocolo,
		b.nr_seq_congenere,
		-- Como so discussoes com valor liberado sao considerados entao o item ou a conta nunca estarao glosados

		'N' ie_glosa_conta,
		'N' ie_glosa_item,
		pls_sip_pck.sip_nv_retorna_uf(
			b.ie_tipo_protocolo, b.nr_seq_congenere,
			b.nr_seq_prestador_exec, b.nr_sequencia, 
			b.cd_pessoa_fisica_conta, b.cd_cgc_conta) sg_uf,
		b.ie_segmentacao_benef ie_segmentacao,
		b.ie_tipo_contratacao_benef ie_tipo_contratacao,
		coalesce(b.ie_tipo_segurado,c.ie_tipo_segurado) ie_tipo_segurado,
		a.dt_mes_competencia,
		CASE WHEN current_setting('pls_sip_pck.param_w')::param.ie_vinc_internacao='N' THEN  CASE WHEN b.ie_internado='S' THEN  'I'  ELSE 'A' END  WHEN current_setting('pls_sip_pck.param_w')::param.ie_vinc_internacao='S' THEN  CASE WHEN pls_obter_se_internado_alt(b.nr_seq_conta, 'S', b.ie_tipo_guia, b.nr_seq_guia, b.nr_seq_segurado, b.cd_guia_referencia, b.nr_seq_analise)='I' THEN  'I'  ELSE 'A' END  END  ie_tipo_atendimento,
		b.qt_idade_benef qt_idade,
		b.qt_idade_benef_mes qt_idade_mes,
		b.qt_idade_benef_dia qt_idade_dia,
		b.nr_seq_segurado,
		b.nr_seq_material,
		b.cd_material_inf cd_material,
		b.cd_pessoa_fisica_conta cd_pf_reembolso,
		b.cd_cgc_conta cd_pj_reembolso,
		b.ie_tipo_despesa,
		b.nr_documento,
		b.dt_entrada_conta dt_inicio_atendimento,
		b.dt_alta_conta dt_fim_atendimento,
		b.qt_horas_atendimento_conta qt_horas_atendimento,
		a.nr_seq_lote nr_seq_lote_discussao,
		a.nr_seq_discussao,
		a.nr_seq_discussao_mat,
		'CI' ie_origem_info,
		-- Se nao tem a data de atendimento da conta considera a data incial do lote

		trunc(coalesce(b.dt_atendimento_conta, dt_inicio_w), 'Q') dt_atendimento,
		b.nr_seq_pacote,
		b.dt_atendimento dt_item_referencia,
		b.ie_regime_atendimento,
		b.ie_saude_ocupacional
	from	sip_discussao_mat_v		a,
		pls_conta_mat_v			b,
		pls_segurado			c 
	where	a.dt_mes_competencia 		between dt_inicio_w and dt_fim_w
	and	b.nr_sequencia			= a.nr_seq_conta_mat
	and	b.cd_estabelecimento_prot	= cd_estabelecimento_p
	-- se for segurado de operadora ou transferencia de responsabilidade ou nao tiver tipo informado

	and	c.nr_sequencia			= b.nr_seq_segurado
	and (b.ie_tipo_segurado in ('B', 'R') or coalesce(b.ie_tipo_segurado::text, '') = '')) src
on (dest.nr_seq_lote_sip		= src.nr_seq_lote_sip and 
	dest.nr_seq_discussao_mat	= src.nr_seq_discussao_mat and
	-- Verifica se a origem da informacao e de Contas medicas, se faz necessario por que 

	-- para recurso e contestacao gravamos a sequencia do conta proc e conta mat

	-- estes itens de contas medicas so devem atualizar este tipo de origem.

	-- Nao podemos fazer com que neste merge seja atualizado as informacoes de recurso  ou contestacao

	-- por que os itens dessas origens podem nao pertencer ao periodo do SIP informado, fazendo com

	-- que itens nao entrem ou nao sejam atualizados.

	dest.ie_origem_info	= src.ie_origem_info)
-- Quando o registro ainda nao esta na tabela grava ele

when	not matched then
	insert(	dest.nr_sequencia, dest.nr_seq_lote_sip, dest.cd_guia, dest.cd_guia_referencia, 
			dest.nr_seq_conta, dest.nr_seq_conta_mat, dest.ie_tipo_guia, 
			dest.nr_seq_protocolo, dest.cd_material, dest.nr_seq_material, dest.nr_seq_prestador_exec, 
			dest.nr_seq_cbo_saude, dest.cd_doenca_dig, dest.cd_categoria_cid, dest.nr_seq_tipo_atendimento,
			dest.nr_seq_clinica, dest.ie_regime_internacao, dest.dt_nascimento, dest.ie_sexo, 
			dest.qt_proc_mat, dest.ie_glosa_conta, dest.ie_glosa_item, dest.ie_tipo_protocolo, 
			dest.nr_seq_congenere, dest.sg_uf, dest.ie_tipo_contratacao, dest.ie_segmentacao, 
			dest.ie_tipo_segurado, dest.dt_mes_competencia, dest.qt_idade, dest.qt_idade_mes, 
			dest.qt_idade_dia, dest.ie_tipo_atendimento, dest.vl_liberado, dest.ie_segmentacao_sip, 
			dest.nr_seq_segurado, dest.ie_controle_upd, dest.ie_tipo_despesa, dest.qt_nasc_vivos_total,
			dest.nr_documento, dest.dt_inicio_atendimento, dest.dt_fim_atendimento, dest.qt_horas_atendimento, 
			dest.ie_origem_info, dest.dt_atendimento, dest.nm_usuario, dest.nm_usuario_nrec,
			dest.dt_atualizacao, dest.dt_atualizacao_nrec, dest.nr_seq_lote_discussao, dest.nr_seq_discussao,
			dest.nr_seq_discussao_mat, dest.cd_pf_reembolso, dest.cd_pj_reembolso, dest.nr_seq_pacote,
			dest.dt_item_referencia, dest.ie_regime_atendimento, dest.ie_saude_ocupacional)
	values (nextval('sip_nv_dados_seq'), src.nr_seq_lote_sip, src.cd_guia, src.cd_guia_referencia, 
			src.nr_seq_conta, src.nr_seq_conta_mat, src.ie_tipo_guia, 
			src.nr_seq_protocolo, src.cd_material, src.nr_seq_material, src.nr_seq_prestador_exec, 
			src.nr_seq_cbo_saude, src.cd_doenca_dig, src.cd_categoria_cid, src.nr_seq_tipo_atendimento, 
			src.nr_seq_clinica, src.ie_regime_internacao, src.dt_nascimento, src.ie_sexo,
			src.qt_proc_mat, src.ie_glosa_conta, src.ie_glosa_item, src.ie_tipo_protocolo, 
			src.nr_seq_congenere, src.sg_uf, src.ie_tipo_contratacao, src.ie_segmentacao, 
			src.ie_tipo_segurado, src.dt_mes_competencia, src.qt_idade, src.qt_idade_mes, 
			src.qt_idade_dia, src.ie_tipo_atendimento, src.vl_liberado, null /*ie_segmentacao_sip */
, 
			src.nr_seq_segurado, 'S' /*ie_controle_upd*/
, src.ie_tipo_despesa, src.qt_nasc_vivos_total, 
			src.nr_documento, src.dt_inicio_atendimento, src.dt_fim_atendimento, src.qt_horas_atendimento, 
			src.ie_origem_info, src.dt_atendimento, nm_usuario_p, nm_usuario_p,
			clock_timestamp(), clock_timestamp(), src.nr_seq_lote_discussao, src.nr_seq_discussao,
			src.nr_seq_discussao_mat, src.cd_pf_reembolso, src.cd_pj_reembolso, src.nr_seq_pacote,
			src.dt_item_referencia, src.ie_regime_atendimento, src.ie_saude_ocupacional)
-- Quando ja esta atualiza, tem dados que nao faz sentido atualizar, como sequencia da conta, do conta proc, do conta mat

-- pois nao vai mudar.

when	matched then
	update set	dest.cd_guia				= src.cd_guia,
			dest.cd_guia_referencia			= src.cd_guia_referencia,
			dest.ie_tipo_guia			= src.ie_tipo_guia,
			dest.nm_usuario				= nm_usuario_p,
			dest.dt_atualizacao			= clock_timestamp(),
			dest.cd_material			= src.cd_material,
			dest.nr_seq_material			= src.nr_seq_material,
			dest.nr_seq_prestador_exec		= src.nr_seq_prestador_exec,
			dest.nr_seq_cbo_saude			= src.nr_seq_cbo_saude,
			dest.cd_doenca_dig			= src.cd_doenca_dig, 	
			dest.cd_categoria_cid			= src.cd_categoria_cid,
			dest.nr_seq_tipo_atendimento		= src.nr_seq_tipo_atendimento,
			dest.nr_seq_clinica			= src.nr_seq_clinica, 
			dest.ie_regime_internacao		= src.ie_regime_internacao,
			dest.dt_nascimento			= src.dt_nascimento,
			dest.ie_sexo				= src.ie_sexo,
			dest.qt_proc_mat			= src.qt_proc_mat,
			dest.ie_glosa_conta			= src.ie_glosa_conta,
			dest.ie_glosa_item			= src.ie_glosa_item,
			dest.ie_tipo_protocolo			= src.ie_tipo_protocolo,
			dest.nr_seq_congenere			= src.nr_seq_congenere,
			dest.sg_uf 				= src.sg_uf, 
			dest.ie_tipo_contratacao		= src.ie_tipo_contratacao,
			dest.ie_segmentacao			= src.ie_segmentacao,
			dest.ie_tipo_segurado			= src.ie_tipo_segurado,
			dest.dt_mes_competencia			= src.dt_mes_competencia,
			dest.qt_idade				= src.qt_idade,
			dest.qt_idade_mes			= src.qt_idade_mes,
			dest.qt_idade_dia			= src.qt_idade_dia,
			dest.ie_tipo_atendimento		= src.ie_tipo_atendimento,
			dest.vl_liberado			= src.vl_liberado,
			dest.ie_segmentacao_sip			 = NULL,
			dest.nr_seq_segurado			= src.nr_seq_segurado,
			dest.ie_controle_upd			= 'S',
			dest.ie_tipo_despesa			= src.ie_tipo_despesa,
			dest.qt_nasc_vivos_total		= src.qt_nasc_vivos_total,
			dest.nr_documento			= src.nr_documento,
			dest.dt_inicio_atendimento		= src.dt_inicio_atendimento,
			dest.dt_fim_atendimento			= src.dt_fim_atendimento,
			dest.qt_horas_atendimento		= src.qt_horas_atendimento,
			dest.dt_atendimento			= src.dt_atendimento,
			dest.cd_pf_reembolso			= src.cd_pf_reembolso, 
			dest.cd_pj_reembolso			= src.cd_pj_reembolso,
			dest.nr_seq_pacote			= src.nr_seq_pacote,
			dest.dt_item_referencia			= src.dt_item_referencia,
			dest.ie_regime_atendimento		= src.ie_regime_atendimento, 
			dest.ie_saude_ocupacional		= src.ie_saude_ocupacional;
commit;


-- se for o "novo sip" e o parametro da operadora estiver marcado para considerar pacotes

if	((coalesce(current_setting('pls_sip_pck.param_w')::param.ie_sip_contagem_evento, 'N') = 'N') and (coalesce(current_setting('pls_sip_pck.param_w')::param.ie_novo_sip, 'N') = 'S')) then

	-- ajusta o cd_guia_ok para as contas de intercambio

	CALL pls_sip_pck.ajusta_cd_guia_ok_intercambio(nr_seq_lote_p);
	
	
	-- Atualiza a quantidade de eventos para pacotes.

	-- Essa rotina utiliza como base a propria sip_nv_dados, portanto ela deve ser executada apos a sua insersao

	CALL pls_sip_pck.sip_atualiza_qt_evento_pct(nr_seq_lote_p);

	-- Define os procedimentos "principais" para os pacotes

	CALL pls_sip_pck.sip_atualiza_proc_princ_pct(nr_seq_lote_p, nm_usuario_p);
end if;


-- delete para excluir as inconsistencias dos registros existentes que nao retornaram

open dados_incon(nr_seq_lote_p, 'N');
loop
	tb_rowid_w.delete;
	
	fetch dados_incon bulk collect into tb_rowid_w
	limit current_setting('pls_sip_pck.qt_registro_transacao_w')::integer;
	
	exit when tb_rowid_w.count = 0;
	
	forall i in tb_rowid_w.first .. tb_rowid_w.last
		delete from sip_nv_vinc_incon_sist
		where	rowid = tb_rowid_w(i);
	commit;
end loop;
close dados_incon;

-- delete para excluir os registros existentes que nao retornaram

open dados(nr_seq_lote_p, 'N');
loop
	tb_rowid_w.delete;
	
	fetch dados bulk collect into tb_rowid_w
	limit current_setting('pls_sip_pck.qt_registro_transacao_w')::integer;
	
	exit when tb_rowid_w.count = 0;
	
	forall i in tb_rowid_w.first .. tb_rowid_w.last
		delete from sip_nv_dados
		where	rowid = tb_rowid_w(i);
	commit;
end loop;
close dados;

-- atualiza o ie_glosa_conta e ie_glosa_item para N em tudo o que for reembolso

-- seguranca e performance para nao precisar fazer or em select

open dados_reembolso(nr_seq_lote_p);
loop
	tb_rowid_w.delete;
	
	fetch dados_reembolso bulk collect into tb_rowid_w
	limit current_setting('pls_sip_pck.qt_registro_transacao_w')::integer;
	
	exit when tb_rowid_w.count = 0;
	
	forall i in tb_rowid_w.first .. tb_rowid_w.last
		update	sip_nv_dados set
			ie_glosa_conta = 'N',
			ie_glosa_item = 'N'
		where	rowid = tb_rowid_w(i);
	commit;
end loop;
close dados_reembolso;

if (current_setting('pls_sip_pck.ie_rio_preto_w')::varchar(1) = 'S') then
	-- deleta alguns protocolo que nao devem entrar no periodo 3 da USJRP

	CALL pls_sip_pck.ajuste_periodo_3_usjrp(nr_seq_lote_p);
end if;	

-- alimenta o ie_glosa_conta para todos os registros da SIP_NV_DADOS

CALL pls_sip_pck.sip_nv_popula_ie_glosa_conta(nr_seq_lote_p, nm_usuario_p);

-- busca os dados da conta de referencia e popula nas contas de honorario individual

-- isso porque na Rio Preto temos o processo de abertura das contas

-- quando geramos uma de honorario individual varios dados nao sao "copiados" e o SIP necessita destes dados

-- isso tudo e alimentado aqui

CALL pls_sip_pck.sip_nv_popula_dado_cta_aberta(nr_seq_lote_p, nm_usuario_p);

-- copia os dados da conta principal de internacao para as outras contas caso nao exista valor alimentado

CALL pls_sip_pck.sip_nv_popula_dado_res_inter(nr_seq_lote_p, nm_usuario_p, cd_estabelecimento_p);

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_sip_pck.sip_nv_alimenta_dados ( nr_seq_lote_p pls_lote_sip.nr_sequencia%type, dt_periodo_inicial_p pls_lote_sip.dt_periodo_inicial%type, dt_periodo_final_p pls_lote_sip.dt_periodo_final%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
