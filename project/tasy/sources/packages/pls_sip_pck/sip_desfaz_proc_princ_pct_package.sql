-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_sip_pck.sip_desfaz_proc_princ_pct ( nr_seq_lote_p pls_lote_sip.nr_sequencia%type) AS $body$
DECLARE

_ora2pg_r RECORD;
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Apaga os procedimentos principais para os pacotes.

	Apenas os campos cd_procedimento_pct e ie_origem_pct vao receber null,
	nenhuma linha da sip_nv_dados deve ser excluida.
	
	
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


tb_cd_procedimento_w		dbms_sql.number_table;
tb_ie_origem_proced_w		dbms_sql.number_table;
tb_nr_seq_sip_nv_dados_w	dbms_sql.number_table;

-- Carrega os pacotes a serem limpos

c01 CURSOR(	nr_seq_lote_pc	pls_lote_sip.nr_sequencia%type) FOR
	SELECT	null cd_procedimento,
		null ie_origem_proced,
		a.nr_sequencia
	from	sip_nv_dados_pct_v	a
	where	a.nr_seq_lote_sip	= nr_seq_lote_pc
	and	(a.cd_procedimento_pct IS NOT NULL AND a.cd_procedimento_pct::text <> '');

BEGIN

-- carrega os pacotes

open c01(nr_seq_lote_p);
-- navega entre eles

loop

	fetch c01 bulk collect into	tb_cd_procedimento_w,
					tb_ie_origem_proced_w,
					tb_nr_seq_sip_nv_dados_w limit current_setting('pls_sip_pck.qt_registro_transacao_w')::integer;
	exit when tb_nr_seq_sip_nv_dados_w.count = 0;
	
	-- manda pro banco com os valores null

	SELECT * FROM pls_sip_pck.grava_proc_princ_comp_pct(tb_cd_procedimento_w, tb_ie_origem_proced_w, tb_nr_seq_sip_nv_dados_w, 'S', 'S') INTO STRICT _ora2pg_r;
 tb_cd_procedimento_w := _ora2pg_r.tb_cd_procedimento_p; tb_ie_origem_proced_w := _ora2pg_r.tb_ie_origem_proced_p; tb_nr_seq_sip_nv_dados_w := _ora2pg_r.tb_nr_seq_sip_nv_dados_p;

end loop;

-- se estiver aberto, fecha

if (c01%isopen) then

	close c01;
end if;


END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_sip_pck.sip_desfaz_proc_princ_pct ( nr_seq_lote_p pls_lote_sip.nr_sequencia%type) FROM PUBLIC;
