-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_sip_pck.sip_atz_proc_princ_comp_pct ( nr_seq_lote_p pls_lote_sip.nr_sequencia%type) AS $body$
DECLARE

_ora2pg_r RECORD;
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Levanta e grava o procedimento considerado principal para o pacote baseado 
	na sua composicao.
	
	Os pacotes que forem abertos ou ja tiverem o procedimento principal informado
	serao ignorados.

-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


-- tabelas virtuais

tb_cd_procedimento_w		dbms_sql.number_table;
tb_ie_origem_proced_w		dbms_sql.number_table;
tb_nr_seq_sip_nv_dados_w	dbms_sql.number_table;


-- Cursor para carregar o proc principal do pacote por composicao

c01 CURSOR(	nr_seq_lote_sip_pc	pls_lote_sip.nr_sequencia%type) FOR
	SELECT	t.cd_procedimento,
		t.ie_origem_proced,
		t.nr_seq_sip_nv_dados
	from (	SELECT	c.cd_procedimento,
			c.ie_origem_proced,
			c.qt_procedimento,
			a.nr_sequencia nr_seq_sip_nv_dados,
			max(c.qt_procedimento) over (partition by c.nr_seq_composicao) qt_proc_max
		from	sip_nv_dados_pct_v	a,
			pls_pacote_composicao	b,
			pls_pacote_procedimento	c,
			procedimento		d
		where	b.nr_seq_pacote		= a.nr_seq_pacote
		and	a.qt_itens_aberto	= 0
		and	coalesce(a.cd_procedimento_pct::text, '') = ''
		and	c.nr_seq_composicao	= b.nr_sequencia
		and	d.cd_procedimento	= c.cd_procedimento
		and	d.ie_origem_proced	= c.ie_origem_proced
		-- Regras para selecionar o procedimento dentro do pacote.

		and	((coalesce(b.dt_inicio_vigencia::text, '') = '') or (b.dt_inicio_vigencia	<= a.dt_item_ref_comp))
		and	((coalesce(b.dt_fim_vigencia::text, '') = '') or (b.dt_fim_vigencia		>= a.dt_item_ref_comp))
		and	((coalesce(c.nr_seq_prestador::text, '') = '') or (c.nr_seq_prestador		= a.nr_seq_prestador_exec))
		and     ((coalesce(c.ie_tipo_guia::text, '') = '') or (c.ie_tipo_guia		= a.ie_tipo_guia))
		-- Considerar apenas os procedimentos "procedimentos", desconsiderar taxas e diarias da soma

		and	d.ie_classificacao	= '1'
		and	a.nr_seq_lote_sip	= nr_seq_lote_sip_pc )	t
	where	t.qt_procedimento	= t.qt_proc_max;
	

BEGIN

open c01(nr_seq_lote_p);
loop
	fetch c01 bulk collect into	tb_cd_procedimento_w,
					tb_ie_origem_proced_w,
					tb_nr_seq_sip_nv_dados_w limit current_setting('pls_sip_pck.qt_registro_transacao_w')::integer;
	exit when tb_nr_seq_sip_nv_dados_w.count = 0;
	
	SELECT * FROM pls_sip_pck.grava_proc_princ_comp_pct(tb_cd_procedimento_w, tb_ie_origem_proced_w, tb_nr_seq_sip_nv_dados_w, 'S', 'S') INTO STRICT _ora2pg_r;
 tb_cd_procedimento_w := _ora2pg_r.tb_cd_procedimento_p; tb_ie_origem_proced_w := _ora2pg_r.tb_ie_origem_proced_p; tb_nr_seq_sip_nv_dados_w := _ora2pg_r.tb_nr_seq_sip_nv_dados_p;

end loop;


END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_sip_pck.sip_atz_proc_princ_comp_pct ( nr_seq_lote_p pls_lote_sip.nr_sequencia%type) FROM PUBLIC;
