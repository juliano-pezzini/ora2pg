-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_sip_pck.gera_itens_zerados ( nr_seq_lote_sip_p pls_lote_sip.nr_sequencia%type, nr_seq_item_assist_p sip_item_assistencial.nr_sequencia%type, ie_tipo_geracao_uf_p text, dt_inicio_lote_p pls_lote_sip.dt_periodo_inicial%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


cs_cursor_w		pls_util_pck.t_cursor;
	
ds_sql_w		varchar(1000);
ds_filtro_sql_w		varchar(100);

nr_seq_item_assist_w	sip_item_assistencial.nr_sequencia%type;
nr_seq_apres_w		sip_item_assistencial.nr_seq_apres%type;
ie_item_gerado_w	boolean;
nr_seq_item_lote_ger_w	sip_lote_item_assistencial.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	vl_dominio ie_tipo_contratacao_sip,
		nr_seq_apresent
	from	valor_dominio_v
	where	cd_dominio = 1666
	and	ie_situacao = 'A'
	order by nr_seq_apresent;

C02 CURSOR FOR
	SELECT	vl_dominio ie_segmentacao
	from	valor_dominio_v
	where	cd_dominio = 3543
	and	ie_situacao = 'A';

C03 CURSOR FOR
	SELECT	vl_dominio sg_uf
	from	valor_dominio_v
	where	cd_dominio = 3620
	and	ie_situacao = 'A';
BEGIN

	if (coalesce(nr_seq_item_assist_p::text, '') = '') then
	
		ds_filtro_sql_w := ' and a.nr_seq_superior is null ';
	else
		ds_filtro_sql_w := ' and a.nr_seq_superior = :nr_seq_superior';
	end if;

	ds_sql_w := 'select	a.nr_sequencia, a.nr_seq_apres '||
		'from	sip_item_assistencial	a '||
		'where	1 = 1 '||
		ds_filtro_sql_w ||
		' order by a.nr_seq_apres';
	
	if (nr_seq_item_assist_p IS NOT NULL AND nr_seq_item_assist_p::text <> '') then
		
		open cs_cursor_w for EXECUTE ds_sql_w using nr_seq_item_assist_p;
	else
		open cs_cursor_w for EXECUTE ds_sql_w;
	end if;

	loop
		fetch cs_cursor_w into nr_seq_item_assist_w, nr_seq_apres_w;
		EXIT WHEN NOT FOUND; /* apply on cs_cursor_w */
		
		-- tipo de contratacao

		for r_C01_w in C01 loop
		
			-- segmentacao do SIP

			for r_C02_w in C02 loop
			
				-- verifica se vai ser gerado por uf ou nao

				if (ie_tipo_geracao_uf_p = 'por_uf') then
					-- busca todos os estados

					for r_C03_w in C03 loop
					
						ie_item_gerado_w := pls_sip_pck.obter_se_item_gerado(
									nr_seq_lote_sip_p, nr_seq_item_assist_w,
									r_C01_w.ie_tipo_contratacao_sip, 
									r_C02_w.ie_segmentacao, r_C03_w.sg_uf);
						
						if (not ie_item_gerado_w) then
						
							nr_seq_item_lote_ger_w := pls_sip_pck.sip_nv_insere_lote(
								nr_seq_item_assist_w, nr_seq_lote_sip_p, r_C03_w.sg_uf, r_C01_w.ie_tipo_contratacao_sip, r_C02_w.ie_segmentacao, dt_inicio_lote_p, 0, 0, nm_usuario_p, nr_seq_item_lote_ger_w);
						end if;
					end loop;
				else
					ie_item_gerado_w := pls_sip_pck.obter_se_item_gerado(nr_seq_lote_sip_p, nr_seq_item_assist_w,
										r_C01_w.ie_tipo_contratacao_sip,
										r_C02_w.ie_segmentacao, 'NC');
					
					if (not ie_item_gerado_w) then
					
						nr_seq_item_lote_ger_w := pls_sip_pck.sip_nv_insere_lote(nr_seq_item_assist_w, nr_seq_lote_sip_p, 'NC', r_C01_w.ie_tipo_contratacao_sip, r_C02_w.ie_segmentacao, dt_inicio_lote_p, 0, 0, nm_usuario_p, nr_seq_item_lote_ger_w);
					end if;	
				end if;
			end loop; -- C02
		end loop;-- C01
		
		-- chama novamente para gerar para os itens filhos

		CALL pls_sip_pck.gera_itens_zerados(nr_seq_lote_sip_p, nr_seq_item_assist_w, ie_tipo_geracao_uf_p, dt_inicio_lote_p, nm_usuario_p);
		
	end loop;-- Cursor Dinamico 
	close cs_cursor_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_sip_pck.gera_itens_zerados ( nr_seq_lote_sip_p pls_lote_sip.nr_sequencia%type, nr_seq_item_assist_p sip_item_assistencial.nr_sequencia%type, ie_tipo_geracao_uf_p text, dt_inicio_lote_p pls_lote_sip.dt_periodo_inicial%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
