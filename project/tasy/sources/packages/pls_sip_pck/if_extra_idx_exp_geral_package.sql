-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_sip_pck.if_extra_idx_exp_geral ( tb_indice_exp_origem_w t_exposicao_benef, tb_indice_exp_filtrado_w INOUT t_exposicao_benef) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Aplica as restricoes gerais nos indices levantadas

	Por questoes de performance, nem todos os filtros podem ser aplicados diretamente no where
	da query principal, entao estas inf sao filtradas atravez de IF logicos no proprio PL
	
	Esta rotina vai aplicar os filtros que forem considerados "Gerais", ou seja, vao contemplar
	tanto a carencia por plano, contrato ou benef.
	
	Ao final do processo, sera devolvido um vetor com as informacoes filtradas e concatenadas 
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

	O Primeiro "IF Extra" deve ser o que verifica se o indice de carencia esta repetido ou nao
	Apos este, os demais devem validar apenas se o ie_atualiza_w estiver marcado como 'S', para que 
	sejam testados apenas os indices que vao realmente entrar na listagem.
	A regra do "IF Extra" nesta rotina, e que somente entrem os indices que cumprirem todos os testes com sucesso
	Caso algum teste nao seja satisfeito, o indice nao sera mais testados nos testes seguintes, e nao ira ser incluido na 
	listagem definitiva
	
Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


i		integer;
idx_w		integer;
ie_atualiza_w	varchar(1);

BEGIN

idx_w := 0;

-- navega pelos registros e plica os if

for	i in tb_indice_exp_origem_w.nr_seq_segurado.first..tb_indice_exp_origem_w.nr_seq_segurado.last loop

	-- como podem existir varios IF que podem ou nao 

	ie_atualiza_w := 'N';
	
	-- O Primeiro "IF Extra" deve ser o que verifica se o indice de carencia esta repetido ou nao

	-- Apos este, os demais devem validar apenas se o ie_atualiza_w estiver marcado como 'S', para que 

	-- sejam testados apenas os indices que vao realmente entrar na listagem.

	-- A regra do "IF Extra" nesta rotina, e que somente entrem os indices que cumprirem todos os testes com sucesso

	-- Caso algum teste nao seja satisfeito, o indice nao sera mais testados nos testes seguintes, e nao ira ser incluido na 

	-- listagem definitiva

	
	-- nao pode existir um indice informado por lote, item e segurado repetido

	if (tb_indice_exp_origem_w.qt_benef_exp_item(i) = 0) then
	
		ie_atualiza_w := 'S';		
	end if;
	
	-- segundo FAQ da ANS, deve-se desconsiderar os indices baseados em CPT

	if (ie_atualiza_w = 'S') and (tb_indice_exp_origem_w.ie_origem_exposicao(i) != 'CPT') then
	
		ie_atualiza_w := 'S';
	else
		-- importante manter a negativa do teste, para que os proximos testes possam ser executados somente

		-- se o anterior foi aprovado

		ie_atualiza_w := 'N';
	end if;
	

	
	-- se encaixou em algum filtro, replica

	if (ie_atualiza_w = 'S') then
	
		tb_indice_exp_filtrado_w := pls_sip_pck.replica_indice_exp(tb_indice_exp_origem_w, i, tb_indice_exp_filtrado_w, idx_w);
	
		idx_w := idx_w + 1;
	end if;
	
end loop;


end;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_sip_pck.if_extra_idx_exp_geral ( tb_indice_exp_origem_w t_exposicao_benef, tb_indice_exp_filtrado_w INOUT t_exposicao_benef) FROM PUBLIC;
