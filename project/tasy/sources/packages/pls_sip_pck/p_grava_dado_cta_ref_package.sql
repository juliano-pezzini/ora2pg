-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_sip_pck.p_grava_dado_cta_ref ( tb_rowid_p INOUT pls_util_cta_pck.t_rowid, tb_nr_seq_clinica_p INOUT pls_util_cta_pck.t_number_table, tb_ie_regime_internacao_p INOUT pls_util_cta_pck.t_varchar2_table_1, tb_nr_seq_tipo_atendimento_p INOUT pls_util_cta_pck.t_number_table, tb_ie_regime_atendimento_p INOUT pls_util_cta_pck.t_varchar2_table_5, tb_ie_saude_ocupacional_p INOUT pls_util_cta_pck.t_varchar2_table_5, tb_qt_nasc_vivos_total_p INOUT pls_util_cta_pck.t_number_table, tb_nr_seq_cbo_saude_p INOUT pls_util_cta_pck.t_number_table, tb_cd_cid_principal_p INOUT pls_util_cta_pck.t_varchar2_table_10, tb_cd_cat_cid_principal_p INOUT pls_util_cta_pck.t_varchar2_table_10, nm_usuario_p usuario.nm_usuario%type) AS $body$
BEGIN

-- se tiver algo para atualizar

if (tb_rowid_p.count > 0) then

	-- atualiza os dados no banco

	-- se ja tiver valor nao substitui

	forall i in tb_rowid_p.first..tb_rowid_p.last
		update	sip_nv_dados set
			nr_seq_clinica = coalesce(nr_seq_clinica, tb_nr_seq_clinica_p(i)),
			ie_regime_internacao = coalesce(ie_regime_internacao, tb_ie_regime_internacao_p(i)),
			nr_seq_tipo_atendimento = coalesce(nr_seq_tipo_atendimento, tb_nr_seq_tipo_atendimento_p(i)),
			ie_regime_atendimento = coalesce(ie_regime_atendimento, tb_ie_regime_atendimento_p(i)),
			ie_saude_ocupacional = coalesce(ie_saude_ocupacional, tb_ie_saude_ocupacional_p(i)),
			qt_nasc_vivos_total = coalesce(qt_nasc_vivos_total, tb_qt_nasc_vivos_total_p(i)),
			nr_seq_cbo_saude = coalesce(nr_seq_cbo_saude, tb_nr_seq_cbo_saude_p(i)),
			cd_doenca_dig = coalesce(cd_doenca_dig, tb_cd_cid_principal_p(i)),
			cd_categoria_cid = coalesce(cd_categoria_cid, tb_cd_cat_cid_principal_p(i)),
			nm_usuario = nm_usuario_p,
			dt_atualizacao = clock_timestamp()
		where	rowid = tb_rowid_p(i);
		commit;
		
	-- limpa as variaveis

	tb_rowid_p.delete;
	tb_nr_seq_clinica_p.delete;
	tb_ie_regime_internacao_p.delete;
	tb_nr_seq_tipo_atendimento_p.delete;
	tb_ie_regime_atendimento_p.delete;
	tb_ie_saude_ocupacional_p.delete;
	tb_qt_nasc_vivos_total_p.delete;
	tb_nr_seq_cbo_saude_p.delete;
	tb_cd_cid_principal_p.delete;
	tb_cd_cat_cid_principal_p.delete;
end if;
	
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_sip_pck.p_grava_dado_cta_ref ( tb_rowid_p INOUT pls_util_cta_pck.t_rowid, tb_nr_seq_clinica_p INOUT pls_util_cta_pck.t_number_table, tb_ie_regime_internacao_p INOUT pls_util_cta_pck.t_varchar2_table_1, tb_nr_seq_tipo_atendimento_p INOUT pls_util_cta_pck.t_number_table, tb_ie_regime_atendimento_p INOUT pls_util_cta_pck.t_varchar2_table_5, tb_ie_saude_ocupacional_p INOUT pls_util_cta_pck.t_varchar2_table_5, tb_qt_nasc_vivos_total_p INOUT pls_util_cta_pck.t_number_table, tb_nr_seq_cbo_saude_p INOUT pls_util_cta_pck.t_number_table, tb_cd_cid_principal_p INOUT pls_util_cta_pck.t_varchar2_table_10, tb_cd_cat_cid_principal_p INOUT pls_util_cta_pck.t_varchar2_table_10, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
