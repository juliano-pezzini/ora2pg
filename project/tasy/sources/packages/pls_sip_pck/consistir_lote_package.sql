-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_sip_pck.consistir_lote ( nr_seq_lote_p pls_lote_sip.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p pls_outorgante.cd_estabelecimento%type) AS $body$
DECLARE

				
-- Inconsistencia 11 - Numero de eventos nao pode ser inferior ao somatorio dos subitens.

-- Deve ser aplicada a todos os itens que tenham subitens, sem discriminacao, um pai nunca pode ter menos que seus filhos.

cs_inc_11 CURSOR(	nr_seq_lote_pc		pls_lote_sip.nr_sequencia%type) FOR
	SELECT	t.nr_sequencia nr_seq_inconsistencia,
		a.nr_sequencia nr_seq_item_lote,
		a.qt_evento,
		(SELECT	sum(y.qt_evento)
		from	sip_item_assistencial		x,
			sip_lote_item_assistencial	y
		where	x.nr_seq_superior	= a.nr_seq_item_sip
		and	x.ie_evento		= 'S'
		and	y.nr_seq_item_sip 	= x.nr_sequencia
		and	y.nr_seq_lote		= a.nr_seq_lote
		and	y.sg_uf			= a.sg_uf
		and	y.ie_segmentacao_sip	= a.ie_segmentacao_sip
		and	y.ie_tipo_contratacao	= a.ie_tipo_contratacao
		and	y.dt_ocorrencia		= a.dt_ocorrencia) qt_evento_filho
	from	sip_inconsistencia		t,
		sip_lote_item_assistencial	a,
		sip_item_assistencial		b
	where	t.cd_inconsistencia		= 11
	and	t.ie_situacao			= 'A'
	and	a.nr_seq_lote			= nr_seq_lote_pc
	and	b.nr_sequencia			= a.nr_seq_item_sip
	-- Para internacoes tem que ser igual aos dois filhos, isto e tratado na inconsistencia 20

	and	b.ie_evento			= 'S'
	and	b.cd_classificacao <> 'E'
	and	exists (select	1
			from	sip_item_assistencial	w
			where	w.nr_seq_superior	= b.nr_sequencia);

-- Inconsistencia 12 - Numero de eventos nao pode ser diferente do informado nos subitens.

-- Deve ser aplicada a itens quais a ANS exija que o total seja identico ao dos subitens.

cs_inc_12 CURSOR(	nr_seq_lote_pc		pls_lote_sip.nr_sequencia%type) FOR
	SELECT	t.nr_sequencia nr_seq_inconsistencia,
		a.nr_sequencia nr_seq_item_lote,
		a.qt_evento,
		(SELECT	sum(y.qt_evento)
		from	sip_item_assistencial		x,
			sip_lote_item_assistencial	y
		where	x.nr_seq_superior	= a.nr_seq_item_sip
		and	x.ie_evento		= 'S'
		and	y.nr_seq_item_sip 	= x.nr_sequencia
		and	y.nr_seq_lote		= a.nr_seq_lote
		and	y.sg_uf			= a.sg_uf
		and	y.ie_segmentacao_sip	= a.ie_segmentacao_sip
		and	y.ie_tipo_contratacao	= a.ie_tipo_contratacao
		and	y.dt_ocorrencia		= a.dt_ocorrencia) qt_evento_filho
	from	sip_inconsistencia		t,
		sip_lote_item_assistencial	a,
		sip_item_assistencial		b
	where	t.cd_inconsistencia	= 12
	and	t.ie_situacao		= 'A'
	and	a.nr_seq_lote		= nr_seq_lote_pc
	and	b.nr_sequencia		= a.nr_seq_item_sip
	and	b.ie_evento		= 'S'
	and	b.cd_classificacao	in ('EX','EY');
			
-- Inconsistencia 13 - Numero de expostos nao pode ser diferente do informado no mesmo quadro assistencial.

-- Deve ser aplicada a todos os Itens Assistenciais

cs_inc_13 CURSOR(	nr_seq_lote_pc		pls_lote_sip.nr_sequencia%type) FOR
	SELECT	t.nr_sequencia nr_seq_inconsistencia,
		a.nr_sequencia nr_seq_item_lote
	from	sip_inconsistencia		t,
		sip_lote_item_assistencial	a,
		sip_item_assistencial		b
	where	t.cd_inconsistencia	= 13
	and	t.ie_situacao		= 'A'
	and	a.nr_seq_lote		= nr_seq_lote_pc
	and	b.nr_sequencia		= a.nr_seq_item_sip
	and	b.ie_benef_carencia	= 'S'
	and	b.cd_classificacao not in (	'C3', 'C10.1', 'C14','E', 'EX2.4', 'EX3', 'EX4', 'EX4.1', 'EX4.2', 'EX4.2.1', 'EY1', 'EY2', 'EY3',
								'F1.1', 'F1.4', 'I3.3', 'I4', 'I5', 'I6', 'I7', 'I8', 'I9')
	and	exists (SELECT	0
			from	sip_item_assistencial		x,
				sip_lote_item_assistencial	y
			where	x.cd_classificacao not in (	'C3', 'C10.1', 'C14', 'E', 'EX2.4', 'EX3', 'EX4', 'EX4.1', 'EX4.2', 'EX4.2.1','EY1', 'EY2', 'EY3',
								'F1.1', 'F1.4', 'I3.3', 'I4', 'I5', 'I6', 'I7', 'I8', 'I9')
			and	x.ie_benef_carencia	= 'S'
			and	y.nr_seq_item_sip 	= x.nr_sequencia
			and	y.nr_seq_lote		= a.nr_seq_lote
			and	y.sg_uf			= a.sg_uf
			and	y.ie_segmentacao_sip	= a.ie_segmentacao_sip
			and	y.ie_tipo_contratacao	= a.ie_tipo_contratacao
			and	y.dt_ocorrencia		= a.dt_ocorrencia
			and	y.qt_beneficiario	<> a.qt_beneficiario);
			
-- Inconsistencia 14 - Valor de despesa nao pode ser inferior ao somatorio dos subitens.

-- Deve ser aplicada a todos os itens que tenham subitens, sem discriminacao, um pai nunca pode ter menos que seus filhos.

cs_inc_14 CURSOR(	nr_seq_lote_pc		pls_lote_sip.nr_sequencia%type) FOR
	SELECT	t.nr_sequencia nr_seq_inconsistencia,
		a.nr_sequencia nr_seq_item_lote,
		a.vl_despesa,
		(SELECT	sum(y.vl_despesa)
		from	sip_item_assistencial		x,
			sip_lote_item_assistencial	y
		where	x.nr_seq_superior	= a.nr_seq_item_sip
		and	x.ie_despesa		= 'S'
		and	y.nr_seq_item_sip 	= x.nr_sequencia
		and	y.nr_seq_lote		= a.nr_seq_lote
		and	y.sg_uf			= a.sg_uf
		and	y.ie_segmentacao_sip	= a.ie_segmentacao_sip
		and	y.ie_tipo_contratacao	= a.ie_tipo_contratacao
		and	y.dt_ocorrencia		= a.dt_ocorrencia) vl_despesa_filhos
	from	sip_inconsistencia		t,
		sip_lote_item_assistencial	a,
		sip_item_assistencial		b
	where	t.cd_inconsistencia	= 14
	and	t.ie_situacao		= 'A'
	and	a.nr_seq_lote		= nr_seq_lote_pc
	and	b.nr_sequencia		= a.nr_seq_item_sip
	and	b.ie_despesa		= 'S'
	and	exists (select	1
			from	sip_item_assistencial	w
			where	w.nr_seq_superior	= b.nr_sequencia
			and	b.ie_despesa		= 'S')
	and	b.cd_classificacao	not in ('E');
			
-- Inconsistencia 16 - Foi informado quantidade de eventos de promocao a saude porem nao foram informados beneficiarios expostos.

-- Deve ser aplicada a todos os itens que tenham subitens, sem discriminacao.

cs_inc_16 CURSOR(	nr_seq_lote_pc		pls_lote_sip.nr_sequencia%type) FOR
	SELECT	t.nr_sequencia nr_seq_inconsistencia,
		a.nr_sequencia nr_seq_item_lote
	from	sip_inconsistencia		t,
		sip_lote_item_assistencial	a,
		sip_item_assistencial		b
	where	t.cd_inconsistencia	= 16
	and	t.ie_situacao		= 'A'
	and	a.nr_seq_lote		= nr_seq_lote_pc
	and	a.qt_evento		> 0
	and	a.qt_beneficiario	= 0
	and	b.nr_sequencia		= a.nr_seq_item_sip
	and	b.ie_benef_carencia	= 'S'
	and	b.ie_evento		= 'S';
	
-- Inconsistencia 17 - Foi informado valor de despesa para eventos de promocao a saude sem informar a quantidade de eventos realizados.

-- Deve ser aplicada a todos os itens que tenham subitens, sem discriminacao.

cs_inc_17 CURSOR(	nr_seq_lote_pc		pls_lote_sip.nr_sequencia%type) FOR
	SELECT	t.nr_sequencia nr_seq_inconsistencia,
		a.nr_sequencia nr_seq_item_lote
	from	sip_inconsistencia		t,
		sip_lote_item_assistencial	a,
		sip_item_assistencial		b
	where	t.cd_inconsistencia	= 17
	and	t.ie_situacao		= 'A'
	and	a.nr_seq_lote		= nr_seq_lote_pc
	and	b.nr_sequencia		= a.nr_seq_item_sip
	and	b.ie_evento		= 'S'
	and	b.ie_despesa		= 'S'
	and	a.vl_despesa		> 0
	and	a.qt_evento		= 0;
	
-- Inconsistencia 18 - Numero de expostos nao pode ser diferente do informado no Item Assistencial superior.

-- Deve ser aplicada a todos os itens que nao restringem caracteristicas de beneficiarios, como sexo ou idade.

cs_inc_18 CURSOR(	nr_seq_lote_pc		pls_lote_sip.nr_sequencia%type) FOR
	SELECT	t.nr_sequencia nr_seq_inconsistencia,
		a.nr_sequencia nr_seq_item_lote
	from	sip_inconsistencia		t,
		sip_lote_item_assistencial	a,
		sip_item_assistencial		b
	where	t.cd_inconsistencia	= 18
	and	t.ie_situacao		= 'A'
	and	a.nr_seq_lote		= nr_seq_lote_pc
	and	b.nr_sequencia		= a.nr_seq_item_sip
	-- TUDO O QUE FOR CLASSIFICADO AQUI POSSIVELMENTE DEVE SER CONSIDERADO NA INCONSISTENCIA 19

	and	b.cd_classificacao	not in ('C3', 'C10.1', 'C14', 'EX2.4', 'EX3', 'EX4', 'EX4.1', 'EX4.2', 'EX4.2.1',
						'F1.1', 'F1.4', 'I3.3', 'I4', 'I5', 'I6', 'I7', 'I8', 'I9')
	and	b.ie_benef_carencia	= 'S'
	and	(b.nr_seq_superior IS NOT NULL AND b.nr_seq_superior::text <> '')
	and	exists (	SELECT	1
				from	sip_item_assistencial		x,
					sip_lote_item_assistencial	y
				where	x.nr_sequencia		= b.nr_seq_superior
				and	x.ie_benef_carencia	= 'S'
				and	y.nr_seq_item_sip 	= x.nr_sequencia
				and	y.nr_seq_lote		= a.nr_seq_lote
				and	y.sg_uf			= a.sg_uf
				and	y.ie_segmentacao_sip	= a.ie_segmentacao_sip
				and	y.ie_tipo_contratacao	= a.ie_tipo_contratacao
				and	y.dt_ocorrencia		= a.dt_ocorrencia
				and	y.qt_beneficiario	<> a.qt_beneficiario);
				
-- Inconsistencia 19 - Numero de expostos nao pode ser igual ou superior ao informado no Item Assistencial superior.

-- Deve ser aplicada a todos os itens que restringem caracteristicas de beneficiarios, como sexo ou idade.

cs_inc_19 CURSOR(	nr_seq_lote_pc		pls_lote_sip.nr_sequencia%type) FOR
	SELECT	t.nr_sequencia nr_seq_inconsistencia,
		a.nr_sequencia nr_seq_item_lote
	from	sip_inconsistencia		t,
		sip_lote_item_assistencial	a,
		sip_item_assistencial		b
	where	t.cd_inconsistencia	= 19
	and	t.ie_situacao		= 'A'
	and	a.nr_seq_lote		= nr_seq_lote_pc
	and	b.nr_sequencia		= a.nr_seq_item_sip
	-- TUDO O QUE FOR CLASSIFICADO AQUI NAO PODE SER CONSIDERADO NA INCONSISTENCIA 18

	and	b.cd_classificacao	in (	'C3', 'C10.1', 'C14','EX2.4', 'EX3', 'EX4', 'EX4.1', 'EX4.2', 'EX4.2.1',
						'F1.1', 'F1.4', 'I3.3', 'I4', 'I5', 'I6', 'I7', 'I8', 'I9')
	and	b.ie_benef_carencia	= 'S'
	and	(b.nr_seq_superior IS NOT NULL AND b.nr_seq_superior::text <> '')
	and	exists (	SELECT	1
				from	sip_item_assistencial		x,
					sip_lote_item_assistencial	y
				where	x.nr_sequencia		= b.nr_seq_superior
				and	x.ie_benef_carencia	= 'S'
				and	y.nr_seq_item_sip 	= x.nr_sequencia
				and	y.nr_seq_lote		= a.nr_seq_lote
				and	y.sg_uf			= a.sg_uf
				and	y.ie_segmentacao_sip	= a.ie_segmentacao_sip
				and	y.ie_tipo_contratacao	= a.ie_tipo_contratacao
				and	y.dt_ocorrencia		= a.dt_ocorrencia
				and	y.qt_beneficiario	<= a.qt_beneficiario);
				
-- Inconsistencia 20 - Valor de despesa nao pode ser diferente do informado no Item Assistencial superior.

-- Deve ser aplicada aos 0tens que tenham "filhos gemeos" como e o caso das internacoes, onde EX e EY devem ter os mesmos valores do item E.

cs_inc_20 CURSOR(	nr_seq_lote_pc		pls_lote_sip.nr_sequencia%type) FOR
	SELECT	t.nr_sequencia nr_seq_inconsistencia,
		a.nr_sequencia nr_seq_item_lote
	from	sip_inconsistencia		t,
		sip_lote_item_assistencial	a,
		sip_item_assistencial		b
	where	t.cd_inconsistencia	= 20
	and	t.ie_situacao		= 'A'
	and	a.nr_seq_lote		= nr_seq_lote_pc
	and	b.nr_sequencia		= a.nr_seq_item_sip
	and	b.cd_classificacao	in ('EX', 'EY')
	and	b.ie_evento		= 'S'
	and	(b.nr_seq_superior IS NOT NULL AND b.nr_seq_superior::text <> '')
	and	exists (	SELECT	1
				from	sip_item_assistencial		x,
					sip_lote_item_assistencial	y
				where	x.nr_sequencia		= b.nr_seq_superior
				and	x.ie_evento		= 'S'
				and	y.nr_seq_item_sip 	= x.nr_sequencia
				and	y.nr_seq_lote		= a.nr_seq_lote
				and	y.sg_uf			= a.sg_uf
				and	y.ie_segmentacao_sip	= a.ie_segmentacao_sip
				and	y.ie_tipo_contratacao	= a.ie_tipo_contratacao
				and	y.dt_ocorrencia		= a.dt_ocorrencia
				and	y.qt_evento		<> a.qt_evento);
				
-- Inconsistencia 21 - Valor de despesa nao pode ser diferente do informado no Item Assistencial superior.

-- Deve ser aplicada aos itens que tenham "filhos gemeos" como e o caso das internacoes, onde EX e EY devem ter os mesmos valores do item E.

cs_inc_21 CURSOR(	nr_seq_lote_pc		pls_lote_sip.nr_sequencia%type) FOR
	SELECT	t.nr_sequencia nr_seq_inconsistencia,
		a.nr_sequencia nr_seq_item_lote
	from	sip_inconsistencia		t,
		sip_lote_item_assistencial	a,
		sip_item_assistencial		b
	where	t.cd_inconsistencia	= 21
	and	t.ie_situacao		= 'A'
	and	a.nr_seq_lote		= nr_seq_lote_pc
	and	b.nr_sequencia		= a.nr_seq_item_sip
	and	b.cd_classificacao	in ('EX', 'EY')
	and	b.ie_despesa		= 'S'
	and	(b.nr_seq_superior IS NOT NULL AND b.nr_seq_superior::text <> '')
	and	exists (	SELECT	1
				from	sip_item_assistencial		x,
					sip_lote_item_assistencial	y
				where	x.nr_sequencia		= b.nr_seq_superior
				and	x.ie_despesa		= 'S'
				and	y.nr_seq_item_sip 	= x.nr_sequencia
				and	y.nr_seq_lote		= a.nr_seq_lote
				and	y.sg_uf			= a.sg_uf
				and	y.ie_segmentacao_sip	= a.ie_segmentacao_sip
				and	y.ie_tipo_contratacao	= a.ie_tipo_contratacao
				and	y.dt_ocorrencia		= a.dt_ocorrencia
				and	y.vl_despesa		<> a.vl_despesa);

cs_inc_22 CURSOR(	nr_seq_lote_pc		pls_lote_sip.nr_sequencia%type) FOR
	SELECT	t.nr_sequencia nr_seq_inconsistencia,
		a.nr_sequencia nr_seq_item_lote
	from	sip_inconsistencia		t,
		sip_lote_item_assistencial	a
	where	t.cd_inconsistencia	= 22
	and	t.ie_situacao		= 'A'
	and	a.nr_seq_lote		= nr_seq_lote_pc	
	-- UF permitidos no schema do SIP

	and	a.sg_uf			not in ('NC','AC','AL','AM','AP','BA','CE','DF','ES','GO','MA','MG','MS','MT','PA','PB','PE','PI','PR','RJ','RN','RO','RR','RS','SC','SE','SP','TO');
	
	
				
BEGIN

-- Limpar as inconsistencias geradas anteriormente;

delete	FROM sip_lote_inconsistencia
where	nr_seq_lote = nr_seq_lote_p;
commit;	

for rw_inc_11_w in cs_inc_11(nr_seq_lote_p) loop
				
	if (rw_inc_11_w.qt_evento < rw_inc_11_w.qt_evento_filho) then
		
		CALL pls_sip_pck.gravar_inconsistencia_ans(rw_inc_11_w.nr_seq_inconsistencia, nr_seq_lote_p,
				rw_inc_11_w.nr_seq_item_lote, nm_usuario_p, cd_estabelecimento_p);
	end if;
end loop; -- cs_inc_11
commit;

for rw_inc_12_w in cs_inc_12(nr_seq_lote_p) loop
				
	if (rw_inc_12_w.qt_evento != rw_inc_12_w.qt_evento_filho) then
		
		CALL pls_sip_pck.gravar_inconsistencia_ans(rw_inc_12_w.nr_seq_inconsistencia, nr_seq_lote_p,
				rw_inc_12_w.nr_seq_item_lote, nm_usuario_p, cd_estabelecimento_p);
	end if;
end loop; -- cs_inc_12
commit;


for rw_inc_13_w in cs_inc_13(nr_seq_lote_p) loop
				
	CALL pls_sip_pck.gravar_inconsistencia_ans(rw_inc_13_w.nr_seq_inconsistencia, nr_seq_lote_p,
			rw_inc_13_w.nr_seq_item_lote, nm_usuario_p, cd_estabelecimento_p);
end loop; -- cs_inc_13
commit;

for rw_inc_14_w in cs_inc_14(nr_seq_lote_p) loop
	
	if (rw_inc_14_w.vl_despesa < rw_inc_14_w.vl_despesa_filhos) then
	
		CALL pls_sip_pck.gravar_inconsistencia_ans(rw_inc_14_w.nr_seq_inconsistencia, nr_seq_lote_p,
				rw_inc_14_w.nr_seq_item_lote, nm_usuario_p, cd_estabelecimento_p);
	end if;
end loop; -- cs_inc_14
commit;

for rw_inc_16_w in cs_inc_16(nr_seq_lote_p) loop
				
	CALL pls_sip_pck.gravar_inconsistencia_ans(rw_inc_16_w.nr_seq_inconsistencia, nr_seq_lote_p,
			rw_inc_16_w.nr_seq_item_lote, nm_usuario_p, cd_estabelecimento_p);
end loop; -- cs_inc_16
commit;

for rw_inc_17_w in cs_inc_17(nr_seq_lote_p) loop
				
	CALL pls_sip_pck.gravar_inconsistencia_ans(rw_inc_17_w.nr_seq_inconsistencia, nr_seq_lote_p,
			rw_inc_17_w.nr_seq_item_lote, nm_usuario_p, cd_estabelecimento_p);
end loop; -- cs_inc_17
commit;

for rw_inc_18_w in cs_inc_18(nr_seq_lote_p) loop
				
	CALL pls_sip_pck.gravar_inconsistencia_ans(rw_inc_18_w.nr_seq_inconsistencia, nr_seq_lote_p,
			rw_inc_18_w.nr_seq_item_lote, nm_usuario_p, cd_estabelecimento_p);
end loop; -- cs_inc_18
commit;

for rw_inc_19_w in cs_inc_19(nr_seq_lote_p) loop
				
	CALL pls_sip_pck.gravar_inconsistencia_ans(rw_inc_19_w.nr_seq_inconsistencia, nr_seq_lote_p,
			rw_inc_19_w.nr_seq_item_lote, nm_usuario_p, cd_estabelecimento_p);
end loop; -- cs_inc_19
commit;

for rw_inc_20_w in cs_inc_20(nr_seq_lote_p) loop
				
	CALL pls_sip_pck.gravar_inconsistencia_ans(rw_inc_20_w.nr_seq_inconsistencia, nr_seq_lote_p,
			rw_inc_20_w.nr_seq_item_lote, nm_usuario_p, cd_estabelecimento_p);
end loop; -- cs_inc_20
commit;

for rw_inc_21_w in cs_inc_21(nr_seq_lote_p) loop
				
	CALL pls_sip_pck.gravar_inconsistencia_ans(rw_inc_21_w.nr_seq_inconsistencia, nr_seq_lote_p,
			rw_inc_21_w.nr_seq_item_lote, nm_usuario_p, cd_estabelecimento_p);
end loop; -- cs_inc_21
commit;

for rw_inc_22_w in cs_inc_22(nr_seq_lote_p) loop
				
	CALL pls_sip_pck.gravar_inconsistencia_ans(rw_inc_22_w.nr_seq_inconsistencia, nr_seq_lote_p,
			rw_inc_22_w.nr_seq_item_lote, nm_usuario_p, cd_estabelecimento_p);
end loop; -- cs_inc_22
commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_sip_pck.consistir_lote ( nr_seq_lote_p pls_lote_sip.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p pls_outorgante.cd_estabelecimento%type) FROM PUBLIC;
