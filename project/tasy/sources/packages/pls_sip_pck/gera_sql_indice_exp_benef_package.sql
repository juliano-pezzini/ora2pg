-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_sip_pck.gera_sql_indice_exp_benef ( ie_tipo_contratacao_in_sip_p text, cd_classificacao_p sip_item_assistencial.cd_classificacao%type, nr_seq_lote_p pls_lote_sip.nr_sequencia%type, nr_seq_item_assist_p sip_item_assistencial.nr_sequencia%type, dt_periodo_inicial_p pls_lote_sip.dt_periodo_inicial%type, dt_periodo_final_p pls_lote_sip.dt_periodo_final%type, dados_bind_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Rotina responsavel por gerar o indice de exposicao do beneficiario com base nas carencias a nivel
	de beneficiario.
	
	E montado um sql dinamico, que vai buscar as informacoes necessarias para o calculo do indce.
	
	O Calculo do indice nao deve ser feito diretamente no sql dinamico, embora isto seja possivel,
	essa pratica foi desconsiderada para poder centralizar o calculo em apenas uma rotina, evitando
	a duplicacao de codigo, e como sera em PL SQL, ficara mais legivel para os desenvolvedores.

-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


ds_retorno_w		varchar(32000) := '';
ds_sql_base_benef_w	varchar(32000) := '';

BEGIN

-- Levanta o sql base que carrega os beneficiarios do lote SIP, conforme o item assitencial

dados_bind_p := pls_sip_pck.gera_sql_benef_exp_item(	ie_tipo_contratacao_in_sip_p, cd_classificacao_p, dados_bind_p);
							
-- Monta o sql que possui as informacoes pertinentes a carencia direta do beneficiario

ds_retorno_w	:=	'select	a.nr_seq_segurado, ' || pls_util_pck.enter_w ||
			'	c.nr_sequencia nr_seq_tipo_carencia, ' || pls_util_pck.enter_w ||
			'	trunc(b.dt_inicio_vigencia, ''dd'') dt_inicio_vig_carencia, ' || pls_util_pck.enter_w ||
			'	b.qt_dias qt_dias_conf_car, ' || pls_util_pck.enter_w ||
			'	b.qt_dias_fora_abrang_ant, ' || pls_util_pck.enter_w ||
			'	a.dt_contratacao, ' || pls_util_pck.enter_w ||
			'	a.dt_rescisao, ' || pls_util_pck.enter_w ||
			'	:dt_inicio_periodo_p dt_inicio_lote_sip, ' || pls_util_pck.enter_w ||
			'	:dt_fim_periodo_p dt_fim_lote_sip, ' || pls_util_pck.enter_w ||
			'	0 qt_dias_exposicao, ' || pls_util_pck.enter_w ||
			'	0 qt_exposicao, ' || pls_util_pck.enter_w ||
			'	0 qt_dias_carencia_lote, ' || pls_util_pck.enter_w ||
			'	''N'' ie_envio_sip, ' || pls_util_pck.enter_w ||
			'	:nr_seq_lote_p nr_seq_lote, ' || pls_util_pck.enter_w ||
			'	:nr_seq_item_assist_p nr_seq_item_assist, ' || pls_util_pck.enter_w ||
			'	decode(c.ie_cpt, ''S'', ''CPT'', ''CAB'') ie_origem_exposicao, ' || pls_util_pck.enter_w ||
			'	(	select	count(1) ' || pls_util_pck.enter_w ||
			'		from	sip_nv_benef_exp_item	x ' || pls_util_pck.enter_w ||
			'		where	x.nr_seq_lote		= to_number(:nr_seq_lote_p) ' || pls_util_pck.enter_w ||
			'		and	x.nr_seq_item_assist	= to_number(:nr_seq_item_assist_p) ' || pls_util_pck.enter_w ||
			'		and	x.nr_seq_segurado	= a.nr_seq_segurado ) qt_benef_exp_item, ' || pls_util_pck.enter_w ||
			'	b.nr_sequencia nr_seq_carencia ,' || pls_util_pck.enter_w ||
			'	null dt_ini_contratacao ' || pls_util_pck.enter_w ||
			'from (	' || ds_sql_base_benef_w || pls_util_pck.enter_w ||
			'	) a, ' || pls_util_pck.enter_w ||
			'	pls_carencia			b, ' || pls_util_pck.enter_w ||
			'	pls_tipo_carencia		c, ' || pls_util_pck.enter_w ||
			'	w_sip_car_item_assist		d, ' || pls_util_pck.enter_w ||
			'	w_sip_exp_carencia		e ' || pls_util_pck.enter_w ||
			'where	b.nr_seq_segurado	= a.nr_seq_segurado ' || pls_util_pck.enter_w ||
			'and	c.nr_sequencia		= b.nr_seq_tipo_carencia ' || pls_util_pck.enter_w ||
			'and	d.nr_seq_w_sip_exp_car	= e.nr_sequencia ' || pls_util_pck.enter_w ||
			'and	d.nr_seq_item_assist	= to_number(:nr_seq_item_assist_p) ' || pls_util_pck.enter_w ||
			'and	e.nr_seq_tipo_carencia	= c.nr_sequencia ' || pls_util_pck.enter_w ||
			'and	e.nr_seq_lote		= to_number(:nr_seq_lote_p) ' || pls_util_pck.enter_w ||
			-- apenas benef que seja entendido que o nivel de carencia seja beneficiario

			'and	a.ie_nivel_carencia	= ''B'' ' || pls_util_pck.enter_w ||
			'and	c.ie_sexo		in (a.ie_sexo, ''A'') ' || pls_util_pck.enter_w ||
			'and	trunc(b.dt_inicio_vigencia + nvl(b.qt_dias_fora_abrang_ant, b.qt_dias) , ''dd'') >= trunc(to_date(:dt_inicio_periodo_p), ''dd'') ' || pls_util_pck.enter_w ||
			-- para os casos de "Carencia futura", quando existe troca de plano

			'and	trunc(b.dt_inicio_vigencia, ''dd'') <= trunc(to_date(:dt_fim_periodo_p), ''dd'') ' || pls_util_pck.enter_w || 
			'and	b.qt_dias		> 0 ' || pls_util_pck.enter_w ||
			'union ' || pls_util_pck.enter_w ||
			-- Busca as carencias dentro do grupo vinculado diretamente ao beneficiario

			'select	a.nr_seq_segurado, ' || pls_util_pck.enter_w ||
			'	c.nr_sequencia nr_seq_tipo_carencia, ' || pls_util_pck.enter_w ||
			'	trunc(b.dt_inicio_vigencia, ''dd'') dt_inicio_vig_carencia, ' || pls_util_pck.enter_w ||
			'	b.qt_dias qt_dias_conf_car, ' || pls_util_pck.enter_w ||
			'	b.qt_dias_fora_abrang_ant, ' || pls_util_pck.enter_w ||
			'	a.dt_contratacao, ' || pls_util_pck.enter_w ||
			'	a.dt_rescisao, ' || pls_util_pck.enter_w ||
			'	:dt_inicio_periodo_p dt_inicio_lote_sip, ' || pls_util_pck.enter_w ||
			'	:dt_fim_periodo_p dt_fim_lote_sip, ' || pls_util_pck.enter_w ||
			'	0 qt_dias_exposicao, ' || pls_util_pck.enter_w ||
			'	0 qt_exposicao, ' || pls_util_pck.enter_w ||
			'	0 qt_dias_carencia_lote, ' || pls_util_pck.enter_w ||
			'	''N'' ie_envio_sip, ' || pls_util_pck.enter_w ||
			'	:nr_seq_lote_p nr_seq_lote, ' || pls_util_pck.enter_w ||
			'	:nr_seq_item_assist_p nr_seq_item_assist, ' || pls_util_pck.enter_w ||
			'	decode(c.ie_cpt, ''S'', ''CPT'', ''CAB'') ie_origem_exposicao, ' || pls_util_pck.enter_w ||
			'	(	select	count(1) ' || pls_util_pck.enter_w ||
			'		from	sip_nv_benef_exp_item	x ' || pls_util_pck.enter_w ||
			'		where	x.nr_seq_lote		= to_number(:nr_seq_lote_p) ' || pls_util_pck.enter_w ||
			'		and	x.nr_seq_item_assist	= to_number(:nr_seq_item_assist_p) ' || pls_util_pck.enter_w ||
			'		and	x.nr_seq_segurado	= a.nr_seq_segurado ) qt_benef_exp_item, ' || pls_util_pck.enter_w ||
			'	b.nr_sequencia nr_seq_carencia, ' || pls_util_pck.enter_w ||
			'	null dt_ini_contratacao ' || pls_util_pck.enter_w ||
			'from (	' || ds_sql_base_benef_w || pls_util_pck.enter_w ||
			'	) a, ' || pls_util_pck.enter_w ||
			'	pls_carencia			b, ' || pls_util_pck.enter_w ||
			'	pls_tipo_carencia		c, ' || pls_util_pck.enter_w ||
			'	w_sip_car_item_assist		d, ' || pls_util_pck.enter_w ||
			'	w_sip_exp_carencia		e ' || pls_util_pck.enter_w ||
			'where	b.nr_seq_segurado	= a.nr_seq_segurado ' || pls_util_pck.enter_w ||
			'and	c.nr_seq_grupo		= b.nr_seq_grupo_carencia ' || pls_util_pck.enter_w ||
			'and	d.nr_seq_w_sip_exp_car	= e.nr_sequencia ' || pls_util_pck.enter_w ||
			'and	d.nr_seq_item_assist	= to_number(:nr_seq_item_assist_p) ' || pls_util_pck.enter_w ||
			'and	e.nr_seq_tipo_carencia	= c.nr_sequencia ' || pls_util_pck.enter_w ||
			-- apenas benef que seja entendido que o nivel de carencia seja beneficiario

			'and	a.ie_nivel_carencia	= ''B'' ' || pls_util_pck.enter_w || 
			'and	c.ie_sexo		in (a.ie_sexo, ''A'') ' || pls_util_pck.enter_w ||
			'and	trunc(b.dt_inicio_vigencia + nvl(b.qt_dias_fora_abrang_ant, b.qt_dias) , ''dd'') >= trunc(to_date(:dt_inicio_periodo_p), ''dd'') ' || pls_util_pck.enter_w ||
			-- para os casos de "Carencia futura", quando existe troca de plano

			'and	trunc(b.dt_inicio_vigencia, ''dd'') <= trunc(to_date(:dt_fim_periodo_p), ''dd'') ' || pls_util_pck.enter_w || 
			'and	b.qt_dias		> 0 ' || pls_util_pck.enter_w;			

dados_bind_p := sql_pck.bind_variable(':nr_seq_lote_p', nr_seq_lote_p, dados_bind_p);
dados_bind_p := sql_pck.bind_variable(':nr_seq_item_assist_p', nr_seq_item_assist_p, dados_bind_p);
dados_bind_p := sql_pck.bind_variable(':dt_inicio_periodo_p', dt_periodo_inicial_p, dados_bind_p);
dados_bind_p := sql_pck.bind_variable(':dt_fim_periodo_p', dt_periodo_final_p, dados_bind_p);



return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_sip_pck.gera_sql_indice_exp_benef ( ie_tipo_contratacao_in_sip_p text, cd_classificacao_p sip_item_assistencial.cd_classificacao%type, nr_seq_lote_p pls_lote_sip.nr_sequencia%type, nr_seq_item_assist_p sip_item_assistencial.nr_sequencia%type, dt_periodo_inicial_p pls_lote_sip.dt_periodo_inicial%type, dt_periodo_final_p pls_lote_sip.dt_periodo_final%type, dados_bind_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;
