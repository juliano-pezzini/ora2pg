-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_sip_pck.gera_sql_atz_indice_exp_sip ( ie_tipo_contratacao_sip_p pls_plano.ie_tipo_contratacao%type, cd_classificacao_p sip_item_assistencial.cd_classificacao%type, nr_seq_lote_p pls_lote_sip.nr_sequencia%type, nr_seq_item_assist_p sip_item_assistencial.nr_sequencia%type, ie_hospitalar_p sip_item_assistencial.ie_hospitalar%type, ie_hospitalar_obs_p sip_item_assistencial.ie_hospitalar_obs%type, ie_ambulatorial_p sip_item_assistencial.ie_ambulatorial%type, ie_odontologico_p sip_item_assistencial.ie_odontologico%type, dados_bind_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Rotina responsavel por gerar o sql que vai acumular o indice de exposicao do item assistencial
		
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
	

ds_retorno_w		varchar(32000) := '';
ds_sql_base_benef_w	varchar(32000) := '';

BEGIN

-- Levanta o sql base que carrega os beneficiarios do lote SIP, conforme o item assitencial

dados_bind_p := pls_sip_pck.gera_sql_benef_exp_item(	ie_tipo_contratacao_sip_p, cd_classificacao_p, dados_bind_p);
							

ds_retorno_w	:=	'with indice_exposto as (	select	min(y.qt_exposicao_benef) qt_exposicao_benef, ' || pls_util_pck.enter_w ||
			'					y.nr_seq_segurado ' || pls_util_pck.enter_w ||
			'					from	sip_nv_benef_exp_item	y   ' || pls_util_pck.enter_w ||
			'					where	y.nr_seq_lote		= :nr_seq_lote_p  ' || pls_util_pck.enter_w ||
			'					and	y.nr_seq_item_assist	= :nr_seq_item_assist_p  ' || pls_util_pck.enter_w ||
			'					and	y.ie_envio_sip		= ''S'' ' || pls_util_pck.enter_w ||
			'					group by y.nr_seq_segurado) ' || pls_util_pck.enter_w ||
			'select	round(sum(qt_benef_amb)) qt_benef_amb, ' || pls_util_pck.enter_w ||
			'	round(sum(qt_benef_hosp_sem_obs)) qt_benef_hosp_sem_obs, ' || pls_util_pck.enter_w ||
			'	round(sum(qt_benef_hosp)) qt_benef_hosp, ' || pls_util_pck.enter_w ||
			'	round(sum(qt_benef_odonto)) qt_benef_odonto, ' || pls_util_pck.enter_w ||
			'	ie_tipo_contratacao ' || pls_util_pck.enter_w ||
			'from (	select	decode(pls_sip_pck.obter_segmentacao_sip(:ie_hospitalar, :ie_hospitalar_obs, :ie_ambulatorial, :ie_odontologico, ie_segmentacao),''1'',t.qt_indice_exp,0) qt_benef_amb, ' || pls_util_pck.enter_w ||
			'		decode(pls_sip_pck.obter_segmentacao_sip(:ie_hospitalar, :ie_hospitalar_obs, :ie_ambulatorial, :ie_odontologico, ie_segmentacao),''2'',t.qt_indice_exp,0) qt_benef_hosp_sem_obs, ' || pls_util_pck.enter_w ||
			'		decode(pls_sip_pck.obter_segmentacao_sip(:ie_hospitalar, :ie_hospitalar_obs, :ie_ambulatorial, :ie_odontologico, ie_segmentacao),''3'',t.qt_indice_exp,0) qt_benef_hosp, ' || pls_util_pck.enter_w ||
			'		decode(pls_sip_pck.obter_segmentacao_sip(:ie_hospitalar, :ie_hospitalar_obs, :ie_ambulatorial, :ie_odontologico, ie_segmentacao),''4'',t.qt_indice_exp,0) qt_benef_odonto,  ' || pls_util_pck.enter_w ||
			'		t.ie_tipo_contratacao  ' || pls_util_pck.enter_w ||
			'	from (	select	/*+ no_merge(y) */ ' || pls_util_pck.enter_w ||
			'			x.ie_segmentacao, ' || pls_util_pck.enter_w ||
			'			x.nr_seq_segurado, ' || pls_util_pck.enter_w ||
			'			x.ie_tipo_contratacao,  ' || pls_util_pck.enter_w ||
			'			(nvl(y.qt_exposicao_benef ,1)) qt_indice_exp ' || pls_util_pck.enter_w ||
			'		from (	'|| ds_sql_base_benef_w	|| pls_util_pck.enter_w || ')	x, ' || pls_util_pck.enter_w ||
			'			indice_exposto	y ' || pls_util_pck.enter_w ||
			'		where	y.nr_seq_segurado(+)	= x.nr_seq_segurado ' || pls_util_pck.enter_w ||
			'		group by  x.ie_segmentacao, x.nr_seq_segurado, x.ie_tipo_contratacao, y.qt_exposicao_benef ' || pls_util_pck.enter_w ||
			'		) t ' || pls_util_pck.enter_w ||
			'	) ' || pls_util_pck.enter_w ||
			'group by ie_tipo_contratacao ' || pls_util_pck.enter_w;
-- Realiza os bind,

dados_bind_p := sql_pck.bind_variable(':ie_hospitalar', ie_hospitalar_p, dados_bind_p);
dados_bind_p := sql_pck.bind_variable(':ie_hospitalar_obs', ie_hospitalar_obs_p, dados_bind_p);
dados_bind_p := sql_pck.bind_variable(':ie_ambulatorial', ie_ambulatorial_p, dados_bind_p);
dados_bind_p := sql_pck.bind_variable(':ie_odontologico', ie_odontologico_p, dados_bind_p);
dados_bind_p := sql_pck.bind_variable(':nr_seq_lote_p', nr_seq_lote_p, dados_bind_p);
dados_bind_p := sql_pck.bind_variable(':nr_seq_item_assist_p', nr_seq_item_assist_p, dados_bind_p);

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_sip_pck.gera_sql_atz_indice_exp_sip ( ie_tipo_contratacao_sip_p pls_plano.ie_tipo_contratacao%type, cd_classificacao_p sip_item_assistencial.cd_classificacao%type, nr_seq_lote_p pls_lote_sip.nr_sequencia%type, nr_seq_item_assist_p sip_item_assistencial.nr_sequencia%type, ie_hospitalar_p sip_item_assistencial.ie_hospitalar%type, ie_hospitalar_obs_p sip_item_assistencial.ie_hospitalar_obs%type, ie_ambulatorial_p sip_item_assistencial.ie_ambulatorial%type, ie_odontologico_p sip_item_assistencial.ie_odontologico%type, dados_bind_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;
