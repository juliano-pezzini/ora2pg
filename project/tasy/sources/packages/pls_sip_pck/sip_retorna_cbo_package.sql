-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_sip_pck.sip_retorna_cbo ( ie_tipo_guia_p pls_conta.ie_tipo_guia%type, nr_seq_cbo_saude_cta_p pls_conta.nr_seq_cbo_saude%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_cobranca_p pls_conta.nr_seq_nota_cobranca%type default null, nr_versao_ptu_p cbo_saude_ptu.nr_versao_ptu%type default null) RETURNS PLS_PROC_PARTICIPANTE.NR_SEQ_CBO_SAUDE%TYPE AS $body$
DECLARE


nr_seq_cbo_saude_w	pls_proc_participante.nr_seq_cbo_saude%type;
nr_cbo_req_w		ptu_nota_cobranca.nr_cbo_req%type;


BEGIN
nr_seq_cbo_saude_w := null;


-- Se tiver informado um seq de cobranca, quer dizer que e conta com origem no intercambio, neste caso tem que consultar as tabelas proprias

if (nr_seq_conta_cobranca_p IS NOT NULL AND nr_seq_conta_cobranca_p::text <> '') then
	
	-- A logica se mantera identica ao monitoramento, exceto que serao considerados todos os tipos de guias

	nr_seq_cbo_saude_w := null;

	-- Busca inicialmente da cobranca

	select	max(nr_cbo_req)
	into STRICT	nr_cbo_req_w
	from	ptu_nota_cobranca
	where	nr_sequencia	= nr_seq_conta_cobranca_p;
	
	-- se nao encontrar, tenta pegar o maior encontrado nos servicos da cobranca

	if (coalesce(nr_cbo_req_w, 0) = 0) then
	
		select	max(nr_cbo_exec)
		into STRICT	nr_cbo_req_w
		from	ptu_nota_servico
		where	nr_seq_nota_cobr	= nr_seq_conta_cobranca_p;
	end if;
	
	-- Se encontrou algum, entoa converte para o nr_seq_cbo_saude

	if (coalesce(nr_cbo_req_w, 0) > 0) then
	
		-- se foi informado uma versao do PTU, entao faz a busca baseada nele

		if (nr_versao_ptu_p IS NOT NULL AND nr_versao_ptu_p::text <> '') then
		
			select	max(b.nr_sequencia)
			into STRICT	nr_seq_cbo_saude_w
			from	cbo_saude_ptu	a,
				cbo_saude	b
			where	a.nr_seq_cbo_saude	= b.nr_sequencia
			and	a.cd_cbo_ptu		= to_char(nr_cbo_req_w)
			and	b.ie_situacao		= 'A'
			and	a.nr_versao_ptu		= nr_versao_ptu_p;
		else
			-- marca como null, para tentar achar nas buscas mais abrangentes

			nr_seq_cbo_saude_w := null;
		end if;
		
		if (coalesce(nr_seq_cbo_saude_w::text, '') = '') then
		
			select	max(nr_sequencia)
			into STRICT	nr_seq_cbo_saude_w
			from	cbo_saude
			where	cd_cbo_ptu	= to_char(nr_cbo_req_w)
			and	ie_situacao	= 'A';
			
		end if;
		
		-- se ainda nao localizou o CBO, tenta agora com os inativos juntos

		if (coalesce(nr_seq_cbo_saude_w::text, '') = '') then
		
			select	max(nr_sequencia)
			into STRICT	nr_seq_cbo_saude_w
			from	cbo_saude
			where	cd_cbo_ptu	= to_char(nr_cbo_req_w);
			
		end if;
			
	end if;
else

	-- se nao for consulta busca do participante

	if (ie_tipo_guia_p != '3') then
		
		select	max(nr_seq_cbo_saude)
		into STRICT	nr_seq_cbo_saude_w
		from	pls_proc_participante a
		where	nr_seq_conta_proc = nr_seq_conta_proc_p
		and	exists (	SELECT	1
				from	pls_grau_participacao b
				where	b.nr_sequencia = a.nr_seq_grau_partic
				and	cd_tiss = '00');
		
		--Caso nao possua cirurgiao, ira procurar por anestesista

		if (coalesce(nr_seq_cbo_saude_w::text, '') = '') then
			select	max(nr_seq_cbo_saude)
			into STRICT	nr_seq_cbo_saude_w
			from	pls_proc_participante a
			where	nr_seq_conta_proc = nr_seq_conta_proc_p
			and	exists (	SELECT	1
					from	pls_grau_participacao b
					where	b.nr_sequencia = a.nr_seq_grau_partic
					and	cd_tiss = '06');
		end if;
		
		--Caso nao encontre anestesista, ira procurar por primeiro auxiliar

		if (coalesce(nr_seq_cbo_saude_w::text, '') = '') then
			select	max(nr_seq_cbo_saude)
			into STRICT	nr_seq_cbo_saude_w
			from	pls_proc_participante a
			where	nr_seq_conta_proc = nr_seq_conta_proc_p
			and	exists (	SELECT	1
					from	pls_grau_participacao b
					where	b.nr_sequencia = a.nr_seq_grau_partic
					and	cd_tiss = '01');
		end if;
		
		--Caso nao encontre primeiro auxiliar, ira pegar o maior codigo (tratativa atual)

		if (coalesce(nr_seq_cbo_saude_w::text, '') = '') then
			select	max(nr_seq_cbo_saude)
			into STRICT	nr_seq_cbo_saude_w
			from	pls_proc_participante a
			where	nr_seq_conta_proc = nr_seq_conta_proc_p;
		end if;


		-- se nao encontrar, verifica se o prestador exec e PF e tenta pegar o CBOS dele

		if (coalesce(nr_seq_cbo_saude_w::text, '') = '') then

			select	max(obter_dados_pf(b.cd_pessoa_fisica, 'CBO'))
			into STRICT	nr_seq_cbo_saude_w
			from	pls_conta_proc_v	a,
				pls_prestador		b
			where	b.nr_sequencia		= a.nr_seq_prestador_exec
			and	a.nr_sequencia		= nr_seq_conta_proc_p;
		end if;
	end if;
end if; -- Fim divisao de conta medica ou intercambio

-- se nao foi alimentado acima busca da conta

if (coalesce(nr_seq_cbo_saude_w::text, '') = '') then
	nr_seq_cbo_saude_w := nr_seq_cbo_saude_cta_p;
end if;

return 	nr_seq_cbo_saude_w;
	
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_sip_pck.sip_retorna_cbo ( ie_tipo_guia_p pls_conta.ie_tipo_guia%type, nr_seq_cbo_saude_cta_p pls_conta.nr_seq_cbo_saude%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_cobranca_p pls_conta.nr_seq_nota_cobranca%type default null, nr_versao_ptu_p cbo_saude_ptu.nr_versao_ptu%type default null) FROM PUBLIC;
