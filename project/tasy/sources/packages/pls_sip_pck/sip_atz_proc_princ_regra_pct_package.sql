-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_sip_pck.sip_atz_proc_princ_regra_pct ( nr_seq_lote_p pls_lote_sip.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

_ora2pg_r RECORD;
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Levanta e grava o procedimento considerado principal para o pacote baseado nas regras.

-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


ds_sq_cur_w		varchar(32000);
dados_bind_w		sql_pck.t_dado_bind;
rc_cursor_w		sql_pck.t_cursor;

-- tabelas virtuais

tb_cd_procedimento_w	dbms_sql.number_table;
tb_ie_origem_proced_w	dbms_sql.number_table;
tb_nr_seq_conta_w	dbms_sql.number_table;

-- Carrega as regras de procedimento principal, para os pacotes do lote SIP

c01 CURSOR(nr_seq_lote_pc	pls_lote_sip.nr_sequencia%type) FOR
	SELECT	a.nr_seq_pacote,
		a.cd_area_procedimento,
		a.cd_especialidade,
		a.cd_grupo_proc,
		a.nr_seq_grupo_servico,
		a.cd_procedimento,
		a.ie_origem_proced
	from	pls_pacote_proc_princ	a
	where	exists (	SELECT	1
				from	sip_nv_dados_pct_v	x
				where	x.nr_seq_pacote		= a.nr_seq_pacote
				and	x.nr_seq_lote_sip	= nr_seq_lote_pc);
BEGIN

-- atualiza a estrutura de servico se necessario

CALL pls_gerencia_upd_obj_pck.atualizar_objetos(nm_usuario_p, 'PLS_SIP_PCK.GERAR_SIP()', 'PLS_GRUPO_SERVICO_TM');

-- Abre o cursor com as regras 

for r_c01_w in c01(nr_seq_lote_p) loop

	-- Limpa os binds

	dados_bind_w.delete;
	
	-- monta o sql conforme filtro

	dados_bind_w := pls_sip_pck.gera_sql_proc_princ_regra_pct(	nr_seq_lote_p, r_c01_w.nr_seq_pacote, r_c01_w.cd_area_procedimento, r_c01_w.cd_especialidade, r_c01_w.cd_grupo_proc, r_c01_w.nr_seq_grupo_servico, r_c01_w.cd_procedimento, r_c01_w.ie_origem_proced, dados_bind_w);
	
	-- Abre o cursor

	dados_bind_w := sql_pck.executa_sql_cursor(ds_sq_cur_w, dados_bind_w);
	
	-- navega pelo cursor

	loop
	fetch rc_cursor_w bulk collect into	tb_cd_procedimento_w,
						tb_ie_origem_proced_w,
						tb_nr_seq_conta_w limit current_setting('pls_sip_pck.qt_registro_transacao_w')::integer;
	exit when tb_cd_procedimento_w.count = 0;
	
		SELECT * FROM pls_sip_pck.grava_proc_princ_regra_pct(	nr_seq_lote_p, r_c01_w.nr_seq_pacote, tb_cd_procedimento_w, tb_ie_origem_proced_w, tb_nr_seq_conta_w, 'S', 'S') INTO STRICT _ora2pg_r;
 tb_cd_procedimento_w := _ora2pg_r.tb_cd_procedimento_p; tb_ie_origem_proced_w := _ora2pg_r.tb_ie_origem_proced_p; tb_nr_seq_conta_w := _ora2pg_r.tb_nr_seq_conta_p;
	end loop;
	
	-- Se tiver aberto, fecha

	if (rc_cursor_w%isopen) then
	
		close rc_cursor_w;
	end if;
							

end loop;

-- Ao final do processo, se o cursor ainda estiver aberto, fecha

if (rc_cursor_w%isopen) then

	close rc_cursor_w;
end if;


END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_sip_pck.sip_atz_proc_princ_regra_pct ( nr_seq_lote_p pls_lote_sip.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
