-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_sip_pck.atualizar_indice_exp_sip ( nr_seq_lote_sip_p pls_lote_sip.nr_sequencia%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Rotina responsavel por atualizar o indice de exposicao no lote SIP

	Para cada item assistencial que necessite dispor o indice de exposicao,
	sera verificado se existe um indice eleito para cada beneficiario do item assistencial.
	Se possuir o indice ja eleito (e calculado), ele sera utilizado, senao sera partido
	da premissa que o indice e "1", ou seja, o beneficiario estava completamente
	exposto ao item assistencial atual.
	
		
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
	

ds_sql_base_benef_w	varchar(32000) := '';
dados_bind_w		sql_pck.t_dado_bind;
cur_indice_exp_w	sql_pck.t_cursor;

tb_qt_benef_ambulatorial_w	dbms_sql.number_table;
tb_qt_benef_hosp_sem_obs_w	dbms_sql.number_table;
tb_qt_benef_hospitalar_w	dbms_sql.number_table;
tb_qt_benef_odonto_w		dbms_sql.number_table;
tb_ie_tipo_contratacao_w	dbms_sql.varchar2_table;


BEGIN

-- Carrega os itens assistencias que precisa ter o calculo do exposto realizado

for r_c01_w in current_setting('pls_sip_pck.c_item_assist_exp')::CURSOR(nr_seq_lote_p(nr_seq_lote_sip_p) loop

	
	-- Limpa os registros

	dados_bind_w.delete;

	-- se o cursor estiver aberto, fecha

	if (cur_indice_exp_w%isopen) then
	
		close cur_indice_exp_w;
	end if;
	-- monta o sql que vai conter a soma dos indices

	dados_bind_w := pls_sip_pck.gera_sql_atz_indice_exp_sip(	r_c01_w.ie_tipo_contratacao_in_sip, r_c01_w.cd_classificacao, nr_seq_lote_sip_p, r_c01_w.nr_seq_item_assist, r_c01_w.ie_hospitalar, r_c01_w.ie_hospitalar_obs, r_c01_w.ie_ambulatorial, r_c01_w.ie_odontologico, dados_bind_w);
	
	
	dados_bind_w := sql_pck.executa_sql_cursor(ds_sql_base_benef_w, dados_bind_w);

	loop
	fetch cur_indice_exp_w bulk collect into	tb_qt_benef_ambulatorial_w,
							tb_qt_benef_hosp_sem_obs_w,
							tb_qt_benef_hospitalar_w,
							tb_qt_benef_odonto_w,
							tb_ie_tipo_contratacao_w limit current_setting('pls_sip_pck.qt_registro_transacao_w')::integer;
	exit when tb_qt_benef_ambulatorial_w.count = 0;
	
		forall i in tb_qt_benef_ambulatorial_w.first..tb_qt_benef_ambulatorial_w.last
			update	sip_lote_item_assistencial
			set	qt_beneficiario		= coalesce(CASE WHEN ie_segmentacao_sip=1 THEN tb_qt_benef_ambulatorial_w(i) WHEN ie_segmentacao_sip=2 THEN tb_qt_benef_hosp_sem_obs_w(i) WHEN ie_segmentacao_sip=3 THEN tb_qt_benef_hospitalar_w(i) WHEN ie_segmentacao_sip=4 THEN tb_qt_benef_odonto_w(i) END ,0)
			where	nr_seq_item_sip		= r_c01_w.nr_seq_item_assist
			and	nr_seq_lote		= nr_seq_lote_sip_p
			and	ie_tipo_contratacao	= tb_ie_tipo_contratacao_w(i);
		
		commit;
		
		tb_qt_benef_ambulatorial_w.delete;
		tb_qt_benef_hosp_sem_obs_w.delete;
		tb_qt_benef_hospitalar_w.delete;
		tb_qt_benef_odonto_w.delete;
		tb_ie_tipo_contratacao_w.delete;
	
	end loop;
	
	-- se o cursor estiver aberto, fecha

	if (cur_indice_exp_w%isopen) then
	
		close cur_indice_exp_w;
	end if;
	
	
end loop;


-- se o cursor estiver aberto, fecha

if (cur_indice_exp_w%isopen) then

	close cur_indice_exp_w;
end if;


END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_sip_pck.atualizar_indice_exp_sip ( nr_seq_lote_sip_p pls_lote_sip.nr_sequencia%type) FROM PUBLIC;
