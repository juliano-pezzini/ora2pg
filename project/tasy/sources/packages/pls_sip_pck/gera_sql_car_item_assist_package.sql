-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_sip_pck.gera_sql_car_item_assist ( cd_area_procedimento_p sip_item_exposicao_regra.cd_area_procedimento%type, cd_especialidade_p sip_item_exposicao_regra.cd_especialidade%type, cd_grupo_proc_p sip_item_exposicao_regra.cd_grupo_proc%type, nr_seq_grupo_servico_p sip_item_exposicao_regra.nr_seq_grupo_servico%type, cd_procedimento_p sip_item_exposicao_regra.cd_procedimento%type, ie_origem_proced_p sip_item_exposicao_regra.ie_origem_proced%type, nr_seq_item_assist_p sip_item_assistencial.nr_sequencia%type, nr_seq_lote_sip_p pls_lote_sip.nr_sequencia%type, dados_bind_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Monta o SQL que retorna qual as carencias encontradas para os parametros passados

	O objetivo e buscar todas as carencias que tenham filtros que se encaixam nos parametros.
	No caso, e varrido a w_sip_exp_carencia, que contem as carencias com alguma 
	incidencia no lote do SIP, e entao e verificado as regras das carencias.
	
	As regras sao aplicadas a APENAS PROCEDIMENTOS, ou seja, se a carencia
	possuir um filtro que nao seja relacionado diretamente a um procedimento, ela
	sera desconsiderada da busca.
	
	Atualmente, os seguintes filtros de carencia serao considerados:
	
		1) Area Procedimento
		2) Especialidade Procedimento
		3) Grupo Procedimento
		4) Grupo Servico
		5) Procedimento
	
	A hierarquia presente nos filtros tambem e tratada, por exemplo, pode-se ter uma regra de Carencia que tenha informado 
	uma especialidade de um procedimento, e tambem um grupo. O Grupo e hierarquicamente
	abaixo da especialidade, entao deve-se considerar apenas o grupo, ao inves de toda a especialidade.
	
	Como existem no mesmo cadastro de carencia, os filtros que adicionam procedimentos ou removem procedimentos da carencia,
	entao se faz necessario restringir o filtro ao que ele de fato se propoem. 
	
	Por exemplo, se tiver um filtro de carencia que seja por area e especialidade, o union que trata a area deve
	ser desconsiderado, pois deve-se apenas carregar os dados da especialidade. Se carregar a area neste caso,
	pode gerar um falso positivo para Carencia x Exposto, pois a regra de exposto pode ter um procedimento que se
	encaixe na area, mas a carencia se restringe a especialidade. Vale a pena lembrar, neste sistema de hierarquia, 
	caso seja configurado um filtro com uma area e procedimento, mas a area informada nao e a do procedimento informado,
	a area por hierarquia sera desconsiderada, sendo validado apenas o procedimento.
	
	Como a area, especialidade e grupo do procedimento e uma estrutura hierarquica bem definida,
	atualmente nao tem problema realizar esse tipo de restricao, pois um grupo de procedimento
	nao pode estar informado em mais de uma especialidade, por exemplo.
	
	Existe a excecao para esta estrutura hierarquia, sendo atualmente o grupo de servico.
	Estas excecoes sao tratadas de forma diferentes ela serao todas inclusas nos filtros.
	Como nao existe a estrutura hierarquica, e necessario considerar todo o conjunto do filtro
	para levantar a carencia, ao inves de buscar o mais restritivo.
	
	
	Todas as regras acimas sao aplicadas tambem na "regra de excecao" da carencia.
	
	Estas "regras de excecao" sao as regras com o campo IE_LIBERADO = 'N', onde
	o objetivo e pegar a composicao do filtro e remover do conjunto que forma a carenca.
	
	Elas sao levantadas da mesma forma que as regras de inclusao na carencia, mas com
	o operador "MINUS", para remover a sua composicao da carencia. E importante ressaltar
	que a tratativa atual aplica os filtros de excecao na sua propria carencia, nao deve
	ser aplicado os filtros de uma carencia para outra.

-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


ds_retorno_w	varchar(32000) := '';
ds_filtro_exp_w	varchar(10000) := '';


BEGIN


-- Monta o filtro de exposicao, que sera repassado ao sql que busca as carencias

-- Procedimento

if (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') then

	ds_filtro_exp_w	:=	ds_filtro_exp_w ||	'and	b.cd_procedimento	= :cd_procedimento '|| pls_util_pck.enter_w ||
				'and	b.ie_origem_proced	= :ie_origem_proced ' || pls_util_pck.enter_w;
	
	dados_bind_p := sql_pck.bind_variable(':cd_procedimento', cd_procedimento_p, dados_bind_p);
	dados_bind_p := sql_pck.bind_variable(':ie_origem_proced', ie_origem_proced_p, dados_bind_p);

end if;

-- Grupo de Procedimento

if (cd_grupo_proc_p IS NOT NULL AND cd_grupo_proc_p::text <> '') then

	ds_filtro_exp_w	:=	ds_filtro_exp_w ||	'and	b.cd_grupo_proc		= :cd_grupo_proc '|| pls_util_pck.enter_w;
	
	dados_bind_p := sql_pck.bind_variable(':cd_grupo_proc', cd_grupo_proc_p, dados_bind_p);
	
end if;

-- Especialidade

if (cd_especialidade_p IS NOT NULL AND cd_especialidade_p::text <> '') then

	ds_filtro_exp_w	:=	ds_filtro_exp_w ||	'and	b.cd_especialidade	= :cd_especialidade '|| pls_util_pck.enter_w;
	
	dados_bind_p := sql_pck.bind_variable(':cd_especialidade', cd_especialidade_p, dados_bind_p);

end if;

-- Area

if (cd_area_procedimento_p IS NOT NULL AND cd_area_procedimento_p::text <> '') then

	ds_filtro_exp_w	:=	ds_filtro_exp_w ||	'and	b.cd_area_procedimento	= :cd_area_procedimento '|| pls_util_pck.enter_w;
	
	dados_bind_p := sql_pck.bind_variable(':cd_area_procedimento', cd_area_procedimento_p, dados_bind_p);

end if;

-- Grupo de Servico

if (nr_seq_grupo_servico_p IS NOT NULL AND nr_seq_grupo_servico_p::text <> '') then

	ds_filtro_exp_w	:=	ds_filtro_exp_w ||	'  and	exists (	select	1 ' || pls_util_pck.enter_w ||
							'			from	pls_grupo_servico_tm	tm ' || pls_util_pck.enter_w ||
							'			where	tm.cd_procedimento	= b.cd_procedimento ' || pls_util_pck.enter_w ||
							'			and	tm.ie_origem_proced	= b.ie_origem_proced ' || pls_util_pck.enter_w ||
							'			and	tm.nr_seq_grupo_servico	= :nr_seq_grupo_servico ) '|| pls_util_pck.enter_w;
	
	dados_bind_p := sql_pck.bind_variable(':nr_seq_grupo_servico', nr_seq_grupo_servico_p, dados_bind_p);
	
end if;


-- Monta o sql que vai retornar a carencia

ds_retorno_w	:=	'select	x.nr_seq_w_exp_carencia ' || pls_util_pck.enter_w ||
			'from (	' || pls_util_pck.enter_w || -- Cruzamento entre as regras, no caso, atuando o MINUS para remover os itens necessarios
				'select	t.nr_seq_tipo_carencia, ' || pls_util_pck.enter_w ||
					't.cd_area_procedimento, ' || pls_util_pck.enter_w ||
					't.cd_especialidade, ' || pls_util_pck.enter_w ||
					't.cd_grupo_proc, ' || pls_util_pck.enter_w ||
					't.cd_procedimento, ' || pls_util_pck.enter_w ||
					't.ie_origem_proced, ' || pls_util_pck.enter_w ||
					't.nr_seq_w_exp_carencia ' || pls_util_pck.enter_w ||
					-- Area procedimento

				'from (	' || pls_util_pck.enter_w ||
					'select	a.nr_seq_tipo_carencia, ' || pls_util_pck.enter_w ||
						'b.cd_area_procedimento, ' || pls_util_pck.enter_w ||
						'b.cd_especialidade, ' || pls_util_pck.enter_w ||
						'b.cd_grupo_proc, ' || pls_util_pck.enter_w ||
						'b.cd_procedimento, ' || pls_util_pck.enter_w ||
						'b.ie_origem_proced, ' || pls_util_pck.enter_w ||
						'd.nr_sequencia nr_seq_w_exp_carencia ' || pls_util_pck.enter_w ||
					'from	pls_carencia_proc		a, ' || pls_util_pck.enter_w ||
						'estrutura_procedimento_v	b, ' || pls_util_pck.enter_w ||
						'w_sip_exp_carencia		d ' || pls_util_pck.enter_w ||
					'where	a.nr_seq_tipo_carencia		= d.nr_seq_tipo_carencia ' || pls_util_pck.enter_w ||
					'and	d.nr_seq_lote			= :nr_seq_lote_p ' || pls_util_pck.enter_w ||
					-- esse and que determina aonde devera ser vinculada a estrutura de proc a regra de carencia 

					'and	b.cd_area_procedimento		= a.cd_area_procedimento ' || pls_util_pck.enter_w ||
					'and	a.ie_liberado			= ''S'' ' || pls_util_pck.enter_w ||
					-- Evita buscar regras onde tem informado um filtro hierarquicamente inferior, estes casos ja sao tratados nos proprios union

					'and	a.cd_procedimento		is null ' || pls_util_pck.enter_w ||
					'and	a.cd_grupo_proc			is null ' || pls_util_pck.enter_w ||
					'and	a.cd_especialidade		is null ' || pls_util_pck.enter_w ||
					'and	a.nr_seq_grupo_servico		is null ' || pls_util_pck.enter_w;
					-- inf vem da regra de exposto do item assistencial, para aplicar o filtro 

ds_retorno_w	:=	ds_retorno_w ||	ds_filtro_exp_w || pls_util_pck.enter_w ||
					'union all ' || pls_util_pck.enter_w ||
					-- Especialidade procedimento

					'select	a.nr_seq_tipo_carencia, ' || pls_util_pck.enter_w ||
						'b.cd_area_procedimento, ' || pls_util_pck.enter_w ||
						'b.cd_especialidade, ' || pls_util_pck.enter_w ||
						'b.cd_grupo_proc, ' || pls_util_pck.enter_w ||
						'b.cd_procedimento, ' || pls_util_pck.enter_w ||
						'b.ie_origem_proced, ' || pls_util_pck.enter_w ||
						'd.nr_sequencia nr_seq_w_exp_carencia ' || pls_util_pck.enter_w ||
					'from	pls_carencia_proc		a, ' || pls_util_pck.enter_w ||
						'estrutura_procedimento_v	b, ' || pls_util_pck.enter_w ||
						'w_sip_exp_carencia		d ' || pls_util_pck.enter_w ||
					'where	a.nr_seq_tipo_carencia		= d.nr_seq_tipo_carencia ' || pls_util_pck.enter_w ||
					'and	d.nr_seq_lote			= :nr_seq_lote_p ' || pls_util_pck.enter_w ||
					-- esse and que determina aonde devera ser vinculada a estrutura de proc a regra de carencia

					'and	b.cd_especialidade		= a.cd_especialidade ' || pls_util_pck.enter_w ||
					'and	a.ie_liberado			= ''S'' ' || pls_util_pck.enter_w ||
					-- Evita buscar regras onde tem informado um filtro hierarquicamente inferior, estes casos ja sao tratados nos proprios union 

					'and	a.cd_procedimento		is null ' || pls_util_pck.enter_w ||
					'and	a.cd_grupo_proc			is null ' || pls_util_pck.enter_w ||
					'and	a.nr_seq_grupo_servico		is null ' || pls_util_pck.enter_w;
					-- inf vem da regra de exposto do item assistencial, para aplicar o filtro

ds_retorno_w	:=	ds_retorno_w ||	ds_filtro_exp_w || pls_util_pck.enter_w ||
					'union all ' || pls_util_pck.enter_w ||
					-- Grupo procedimento

					'select	a.nr_seq_tipo_carencia, ' || pls_util_pck.enter_w ||
						'b.cd_area_procedimento, ' || pls_util_pck.enter_w ||
						'b.cd_especialidade, ' || pls_util_pck.enter_w ||
						'b.cd_grupo_proc, ' || pls_util_pck.enter_w ||
						'b.cd_procedimento, ' || pls_util_pck.enter_w ||
						'b.ie_origem_proced, ' || pls_util_pck.enter_w ||
						'd.nr_sequencia nr_seq_w_exp_carencia ' || pls_util_pck.enter_w ||
					'from	pls_carencia_proc		a, ' || pls_util_pck.enter_w ||
						'estrutura_procedimento_v	b, ' || pls_util_pck.enter_w ||
						'w_sip_exp_carencia		d ' || pls_util_pck.enter_w ||
					'where	a.nr_seq_tipo_carencia		= d.nr_seq_tipo_carencia ' || pls_util_pck.enter_w ||
					'and	d.nr_seq_lote			= :nr_seq_lote_p ' || pls_util_pck.enter_w ||
					-- esse and que determina aonde devera ser vinculada a estrutura de proc a regra de carencia

					'and	b.cd_grupo_proc			= a.cd_grupo_proc ' || pls_util_pck.enter_w ||
					'and	a.ie_liberado			= ''S'' ' || pls_util_pck.enter_w ||
					-- Evita buscar regras onde tem informado um filtro hierarquicamente inferior, estes casos ja sao tratados nos proprios union

					'and	a.cd_procedimento		is null ' || pls_util_pck.enter_w ||
					'and	a.nr_seq_grupo_servico		is null ' || pls_util_pck.enter_w;
					-- inf vem da regra de exposto do item assistencial, para aplicar o filtro

ds_retorno_w	:=	ds_retorno_w ||	ds_filtro_exp_w || pls_util_pck.enter_w ||
					'union all ' || pls_util_pck.enter_w ||
					-- Grupo de servico

					'select	a.nr_seq_tipo_carencia, ' || pls_util_pck.enter_w ||
						'b.cd_area_procedimento, ' || pls_util_pck.enter_w ||
						'b.cd_especialidade, ' || pls_util_pck.enter_w ||
						'b.cd_grupo_proc, ' || pls_util_pck.enter_w ||
						'b.cd_procedimento, ' || pls_util_pck.enter_w ||
						'b.ie_origem_proced, ' || pls_util_pck.enter_w ||
						'd.nr_sequencia nr_seq_w_exp_carencia ' || pls_util_pck.enter_w ||
					'from	pls_carencia_proc		a, ' || pls_util_pck.enter_w ||
						'estrutura_procedimento_v	b, ' || pls_util_pck.enter_w ||
						'pls_grupo_servico_tm		c, ' || pls_util_pck.enter_w ||
						'w_sip_exp_carencia		d ' || pls_util_pck.enter_w ||
					'where	a.nr_seq_tipo_carencia		= d.nr_seq_tipo_carencia ' || pls_util_pck.enter_w ||
					'and	c.nr_seq_grupo_servico		= a.nr_seq_grupo_servico ' || pls_util_pck.enter_w ||
					'and	d.nr_seq_lote			= :nr_seq_lote_p ' || pls_util_pck.enter_w ||
					-- esse and que determina aonde devera ser vinculada a estrutura de proc a regra de carencia

					'and	b.cd_procedimento		= c.cd_procedimento ' || pls_util_pck.enter_w ||
					'and	b.ie_origem_proced		= c.ie_origem_proced ' || pls_util_pck.enter_w ||
					'and	a.ie_liberado			= ''S'' ' || pls_util_pck.enter_w ||
					-- Evita buscar regras onde tem informado um filtro hierarquicamente inferior, estes casos ja sao tratados nos proprios union

					'and	a.cd_procedimento		is null ' || pls_util_pck.enter_w;
					-- inf vem da regra de exposto do item assistencial, para aplicar o filtro

ds_retorno_w	:=	ds_retorno_w ||	ds_filtro_exp_w || pls_util_pck.enter_w ||
					'union all ' || pls_util_pck.enter_w ||
					-- Procedimento

					'select	a.nr_seq_tipo_carencia, ' || pls_util_pck.enter_w ||
						'b.cd_area_procedimento, ' || pls_util_pck.enter_w ||
						'b.cd_especialidade, ' || pls_util_pck.enter_w ||
						'b.cd_grupo_proc, ' || pls_util_pck.enter_w ||
						'b.cd_procedimento, ' || pls_util_pck.enter_w ||
						'b.ie_origem_proced, ' || pls_util_pck.enter_w ||
						'd.nr_sequencia nr_seq_w_exp_carencia ' || pls_util_pck.enter_w ||
					'from	pls_carencia_proc		a, ' || pls_util_pck.enter_w ||
						'estrutura_procedimento_v	b, ' || pls_util_pck.enter_w ||
						'w_sip_exp_carencia		d ' || pls_util_pck.enter_w ||
					'where	a.nr_seq_tipo_carencia		= d.nr_seq_tipo_carencia ' || pls_util_pck.enter_w ||
					'and	d.nr_seq_lote			= :nr_seq_lote_p ' || pls_util_pck.enter_w ||
					-- esse and que determina aonde devera ser vinculada a estrutura de proc a regra de carencia

					'and	b.cd_procedimento		= a.cd_procedimento ' || pls_util_pck.enter_w ||
					'and	b.ie_origem_proced		= a.ie_origem_proced ' || pls_util_pck.enter_w ||
					'and	a.ie_liberado			= ''S'' ' || pls_util_pck.enter_w;
					-- inf vem da regra de exposto do item assistencial, para aplicar o filtro

ds_retorno_w	:=	ds_retorno_w ||	ds_filtro_exp_w || pls_util_pck.enter_w ||
				') t ' || pls_util_pck.enter_w ||
				'minus ' || pls_util_pck.enter_w ||
				'select	t.nr_seq_tipo_carencia, ' || pls_util_pck.enter_w ||
					't.cd_area_procedimento, ' || pls_util_pck.enter_w ||
					't.cd_especialidade, ' || pls_util_pck.enter_w ||
					't.cd_grupo_proc, ' || pls_util_pck.enter_w ||
					't.cd_procedimento, ' || pls_util_pck.enter_w ||
					't.ie_origem_proced, ' || pls_util_pck.enter_w ||
					't.nr_seq_w_exp_carencia ' || pls_util_pck.enter_w ||
					-- Area procedimento

				'from (	' || pls_util_pck.enter_w ||
					'select	a.nr_seq_tipo_carencia, ' || pls_util_pck.enter_w ||
						'b.cd_area_procedimento, ' || pls_util_pck.enter_w ||
						'b.cd_especialidade, ' || pls_util_pck.enter_w ||
						'b.cd_grupo_proc, ' || pls_util_pck.enter_w ||
						'b.cd_procedimento, ' || pls_util_pck.enter_w ||
						'b.ie_origem_proced, ' || pls_util_pck.enter_w ||
						'd.nr_sequencia nr_seq_w_exp_carencia ' || pls_util_pck.enter_w ||
					'from	pls_carencia_proc		a, ' || pls_util_pck.enter_w ||
						'estrutura_procedimento_v	b, ' || pls_util_pck.enter_w ||
						'w_sip_exp_carencia		d ' || pls_util_pck.enter_w ||
					'where	a.nr_seq_tipo_carencia		= d.nr_seq_tipo_carencia ' || pls_util_pck.enter_w ||
					'and	d.nr_seq_lote			= :nr_seq_lote_p ' || pls_util_pck.enter_w ||
					-- esse and que determina aonde devera ser vinculada a estrutura de proc a regra de carencia

					'and	b.cd_area_procedimento		= a.cd_area_procedimento ' || pls_util_pck.enter_w ||
					'and	a.ie_liberado			= ''N'' ' || pls_util_pck.enter_w ||
					-- Evita buscar regras onde tem informado um filtro hierarquicamente inferior, estes casos ja sao tratados nos proprios union

					'and	a.cd_procedimento		is null ' || pls_util_pck.enter_w ||
					'and	a.cd_grupo_proc			is null ' || pls_util_pck.enter_w ||
					'and	a.cd_especialidade		is null ' || pls_util_pck.enter_w ||
					'and	a.nr_seq_grupo_servico		is null ' || pls_util_pck.enter_w;
					-- inf vem da regra de exposto do item assistencial, para aplicar o filtro

ds_retorno_w	:=	ds_retorno_w ||	ds_filtro_exp_w || pls_util_pck.enter_w ||
					'union all ' || pls_util_pck.enter_w ||
					-- Especialidade procedimento

					'select	a.nr_seq_tipo_carencia, ' || pls_util_pck.enter_w ||
						'b.cd_area_procedimento, ' || pls_util_pck.enter_w ||
						'b.cd_especialidade, ' || pls_util_pck.enter_w ||
						'b.cd_grupo_proc, ' || pls_util_pck.enter_w ||
						'b.cd_procedimento, ' || pls_util_pck.enter_w ||
						'b.ie_origem_proced, ' || pls_util_pck.enter_w ||
						'd.nr_sequencia nr_seq_w_exp_carencia ' || pls_util_pck.enter_w ||
					'from	pls_carencia_proc		a, ' || pls_util_pck.enter_w ||
						'estrutura_procedimento_v	b, ' || pls_util_pck.enter_w ||
						'w_sip_exp_carencia		d ' || pls_util_pck.enter_w ||
					'where	a.nr_seq_tipo_carencia		= d.nr_seq_tipo_carencia ' || pls_util_pck.enter_w ||
					'and	d.nr_seq_lote			= :nr_seq_lote_p ' || pls_util_pck.enter_w ||
					-- esse and que determina aonde devera ser vinculada a estrutura de proc a regra de carencia

					'and	b.cd_especialidade		= a.cd_especialidade ' || pls_util_pck.enter_w ||
					'and	a.ie_liberado			= ''N'' ' || pls_util_pck.enter_w ||
					-- Evita buscar regras onde tem informado um filtro hierarquicamente inferior, estes casos ja sao tratados nos proprios union

					'and	a.cd_procedimento		is null ' || pls_util_pck.enter_w ||
					'and	a.cd_grupo_proc			is null ' || pls_util_pck.enter_w ||
					'and	a.nr_seq_grupo_servico		is null ' || pls_util_pck.enter_w;
					-- inf vem da regra de exposto do item assistencial, para aplicar o filtro

ds_retorno_w	:=	ds_retorno_w ||	ds_filtro_exp_w || pls_util_pck.enter_w ||
					'union all ' || pls_util_pck.enter_w ||
					-- Grupo procedimento

					'select	a.nr_seq_tipo_carencia, ' || pls_util_pck.enter_w ||
						'b.cd_area_procedimento, ' || pls_util_pck.enter_w ||
						'b.cd_especialidade, ' || pls_util_pck.enter_w ||
						'b.cd_grupo_proc, ' || pls_util_pck.enter_w ||
						'b.cd_procedimento, ' || pls_util_pck.enter_w ||
						'b.ie_origem_proced, ' || pls_util_pck.enter_w ||
						'd.nr_sequencia nr_seq_w_exp_carencia ' || pls_util_pck.enter_w ||
					'from	pls_carencia_proc		a, ' || pls_util_pck.enter_w ||
						'estrutura_procedimento_v	b, ' || pls_util_pck.enter_w ||
						'w_sip_exp_carencia		d ' || pls_util_pck.enter_w ||
					'where	a.nr_seq_tipo_carencia		= d.nr_seq_tipo_carencia ' || pls_util_pck.enter_w ||
					'and	d.nr_seq_lote			= :nr_seq_lote_p ' || pls_util_pck.enter_w ||
					-- esse and que determina aonde devera ser vinculada a estrutura de proc a regra de carencia

					'and	b.cd_grupo_proc			= a.cd_grupo_proc ' || pls_util_pck.enter_w ||
					'and	a.ie_liberado			= ''N'' ' || pls_util_pck.enter_w ||
					-- Evita buscar regras onde tem informado um filtro hierarquicamente inferior, estes casos ja sao tratados nos proprios union

					'and	a.nr_seq_grupo_servico		is null ' || pls_util_pck.enter_w ||
					'and	a.cd_procedimento		is null ' || pls_util_pck.enter_w;
					-- inf vem da regra de exposto do item assistencial, para aplicar o filtro

ds_retorno_w	:=	ds_retorno_w ||	ds_filtro_exp_w || pls_util_pck.enter_w ||
					'union all ' || pls_util_pck.enter_w ||
					-- Grupo de Servico

					'select	a.nr_seq_tipo_carencia, ' || pls_util_pck.enter_w ||
						'b.cd_area_procedimento, ' || pls_util_pck.enter_w ||
						'b.cd_especialidade, ' || pls_util_pck.enter_w ||
						'b.cd_grupo_proc, ' || pls_util_pck.enter_w ||
						'b.cd_procedimento, ' || pls_util_pck.enter_w ||
						'b.ie_origem_proced, ' || pls_util_pck.enter_w ||
						'd.nr_sequencia nr_seq_w_exp_carencia ' || pls_util_pck.enter_w ||
					'from	pls_carencia_proc		a, ' || pls_util_pck.enter_w ||
						'estrutura_procedimento_v	b, ' || pls_util_pck.enter_w ||
						'pls_grupo_servico_tm		c, ' || pls_util_pck.enter_w ||
						'w_sip_exp_carencia		d ' || pls_util_pck.enter_w ||
					'where	a.nr_seq_tipo_carencia		= d.nr_seq_tipo_carencia ' || pls_util_pck.enter_w ||
					'and	c.nr_seq_grupo_servico		= a.nr_seq_grupo_servico ' || pls_util_pck.enter_w ||
					'and	d.nr_seq_lote			= :nr_seq_lote_p ' || pls_util_pck.enter_w ||
					-- esse and que determina aonde devera ser vinculada a estrutura de proc a regra de carencia

					'and	b.cd_procedimento		= c.cd_procedimento ' || pls_util_pck.enter_w ||
					'and	b.ie_origem_proced		= c.ie_origem_proced ' || pls_util_pck.enter_w ||
					'and	a.ie_liberado			= ''N'' ' || pls_util_pck.enter_w ||
					-- Evita buscar regras onde tem informado um filtro hierarquicamente inferior, estes casos ja sao tratados nos proprios union

					'and	a.cd_procedimento		is null ' || pls_util_pck.enter_w;
					-- inf vem da regra de exposto do item assistencial, para aplicar o filtro

ds_retorno_w	:=	ds_retorno_w ||	ds_filtro_exp_w || pls_util_pck.enter_w ||
					'union all ' || pls_util_pck.enter_w ||
					-- Procedimento

					'select	a.nr_seq_tipo_carencia, ' || pls_util_pck.enter_w ||
						'b.cd_area_procedimento, ' || pls_util_pck.enter_w ||
						'b.cd_especialidade, ' || pls_util_pck.enter_w ||
						'b.cd_grupo_proc, ' || pls_util_pck.enter_w ||
						'b.cd_procedimento, ' || pls_util_pck.enter_w ||
						'b.ie_origem_proced, ' || pls_util_pck.enter_w ||
						'd.nr_sequencia nr_seq_w_exp_carencia ' || pls_util_pck.enter_w ||
					'from	pls_carencia_proc		a, ' || pls_util_pck.enter_w ||
						'estrutura_procedimento_v	b, ' || pls_util_pck.enter_w ||
						'w_sip_exp_carencia		d ' || pls_util_pck.enter_w ||
					'where	a.nr_seq_tipo_carencia		= d.nr_seq_tipo_carencia ' || pls_util_pck.enter_w ||
					'and	d.nr_seq_lote			= :nr_seq_lote_p ' || pls_util_pck.enter_w ||
					-- esse and que determina aonde devera ser vinculada a estrutura de proc a regra de carencia

					'and	b.cd_procedimento		= a.cd_procedimento ' || pls_util_pck.enter_w ||
					'and	b.ie_origem_proced		= a.ie_origem_proced ' || pls_util_pck.enter_w ||
					'and	a.ie_liberado			= ''N'' ' || pls_util_pck.enter_w;
					-- inf vem da regra de exposto do item assistencial, para aplicar o filtro

ds_retorno_w	:=	ds_retorno_w ||	ds_filtro_exp_w || pls_util_pck.enter_w ||
				') t ' || pls_util_pck.enter_w ||
			') x ' || pls_util_pck.enter_w ||
			-- Impede de carregar carencias ja gravadas para o item assistencial em questao.

			'where not exists (	select	1 ' || pls_util_pck.enter_w ||
			'			from	w_sip_car_item_assist	z ' || pls_util_pck.enter_w ||
			'			where	z.nr_seq_item_assist	= :nr_seq_item_assist ' || pls_util_pck.enter_w ||
			'			and	z.nr_seq_lote		= :nr_seq_lote_p ' || pls_util_pck.enter_w ||
			'			and	z.nr_seq_w_sip_exp_car	= x.nr_seq_w_exp_carencia ) ' || pls_util_pck.enter_w ||
			'group by x.nr_seq_w_exp_carencia ' || pls_util_pck.enter_w;

dados_bind_p := sql_pck.bind_variable(':nr_seq_item_assist', nr_seq_item_assist_p, dados_bind_p);
dados_bind_p := sql_pck.bind_variable(':nr_seq_lote_p', nr_seq_lote_sip_p, dados_bind_p);

return;


END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_sip_pck.gera_sql_car_item_assist ( cd_area_procedimento_p sip_item_exposicao_regra.cd_area_procedimento%type, cd_especialidade_p sip_item_exposicao_regra.cd_especialidade%type, cd_grupo_proc_p sip_item_exposicao_regra.cd_grupo_proc%type, nr_seq_grupo_servico_p sip_item_exposicao_regra.nr_seq_grupo_servico%type, cd_procedimento_p sip_item_exposicao_regra.cd_procedimento%type, ie_origem_proced_p sip_item_exposicao_regra.ie_origem_proced%type, nr_seq_item_assist_p sip_item_assistencial.nr_sequencia%type, nr_seq_lote_sip_p pls_lote_sip.nr_sequencia%type, dados_bind_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;
