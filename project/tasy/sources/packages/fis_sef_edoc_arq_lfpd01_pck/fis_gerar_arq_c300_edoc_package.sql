-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE fis_sef_edoc_arq_lfpd01_pck.fis_gerar_arq_c300_edoc (nr_seq_superior_p bigint) AS $body$
DECLARE


nr_sequencia_w    bigint := 0;
qt_cursor_w       bigint := 0;
nr_vetor_w        bigint := 0;
tx_aliq_icms_w    varchar(15):= '';
tx_aliq_st_w   varchar(15):= '';

c_reg_C300 CURSOR FOR
SELECT   *
from   fis_sef_edoc_C300
where   nr_seq_controle = current_setting('fis_sef_edoc_arq_lfpd01_pck.nr_seq_controle_w')::bigint
and  nr_seq_superior = nr_seq_superior_p;

type reg_c_reg_C300 is table of fis_sef_edoc_C300%RowType;
vetRegC300 reg_c_reg_C300;

type registro is table of fis_sef_edoc_arquivo%rowtype index by integer;
fis_registros_w registro;

BEGIN

qt_cursor_w := 0;

open c_reg_C300;
loop
fetch c_reg_C300 bulk collect into vetRegC300 limit 1000;
  for i in 1 .. vetRegC300.Count loop
  begin

  tx_aliq_icms_w    :=  '';
  tx_aliq_st_w    := '';
  if vetRegC300[i].tx_aliq_icms > 0 then
     tx_aliq_icms_w    := substr(sped_obter_campo_valor(vetRegC300[i].tx_aliq_icms ), 1, 30);
  end if;

  if vetRegC300[i].tx_aliq_icms > 0 then
     tx_aliq_st_w    := substr(sped_obter_campo_valor(vetRegC300[i].tx_aliq_st ), 1, 30);
  end if;


  qt_cursor_w := qt_cursor_w + 1;

  PERFORM set_config('fis_sef_edoc_arq_lfpd01_pck.nr_linha_w', current_setting('fis_sef_edoc_arq_lfpd01_pck.nr_linha_w')::fis_sef_edoc_arquivo.nr_linha%type + 1, false);
  PERFORM set_config('fis_sef_edoc_arq_lfpd01_pck.ds_linha_w', substr(  current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_sep_w')::varchar(1) || vetRegC300[i].cd_reg                      || --01
        current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_sep_w')::varchar(1) || vetRegC300[i].nr_item                       || --02
        current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_sep_w')::varchar(1) || vetRegC300[i].cd_item                       || --03
        current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_sep_w')::varchar(1) || vetRegC300[i].cd_unid                       || --04
        current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_sep_w')::varchar(1) || substr(sped_obter_campo_valor(vetRegC300[i].vl_unit ), 1, 30)    || --05
        current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_sep_w')::varchar(1) || replace(campo_mascara_casas( vetRegC300[i].qt_item ,6),'.','') || --06
        current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_sep_w')::varchar(1) || substr(sped_obter_campo_valor(vetRegC300[i].vl_desc ), 1, 30)    || --07
        current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_sep_w')::varchar(1) || substr(sped_obter_campo_valor(vetRegC300[i].vl_acmo ), 1, 30)    || --08
        current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_sep_w')::varchar(1) || substr(sped_obter_campo_valor(vetRegC300[i].vl_item ), 1, 30)    || --09
        current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_sep_w')::varchar(1) || vetRegC300[i].cd_ncm                       || --10
        current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_sep_w')::varchar(1) || vetRegC300[i].cd_cst                       || --11
        current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_sep_w')::varchar(1) || vetRegC300[i].cd_cfop                       || --12
        current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_sep_w')::varchar(1) || substr(sped_obter_campo_valor(vetRegC300[i].vl_bc_icms ), 1, 30)     || --13
        current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_sep_w')::varchar(1) || tx_aliq_icms_w || --14
        current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_sep_w')::varchar(1) || substr(sped_obter_campo_valor(vetRegC300[i].vl_icms ), 1, 30)     || --15
        current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_sep_w')::varchar(1) || substr(sped_obter_campo_valor(vetRegC300[i].vl_bc_icms_st ), 1, 30) || --16
        current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_sep_w')::varchar(1) || tx_aliq_st_w     || --17
        current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_sep_w')::varchar(1) || substr(sped_obter_campo_valor(vetRegC300[i].vl_icms_st ), 1, 30)     || --18
        current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_sep_w')::varchar(1) || substr(sped_obter_campo_valor(vetRegC300[i].vl_bc_ipi ), 1, 30)     || --19
        current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_sep_w')::varchar(1) || substr(sped_obter_campo_valor(vetRegC300[i].tx_aliq_ipi ), 1, 30)   || --20
        current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_sep_w')::varchar(1) || substr(sped_obter_campo_valor(vetRegC300[i].vl_ipi ), 1, 30)     || --21
        current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_sep_w')::varchar(1),
        1,
        8000), false);

  select nextval('fis_sef_edoc_arquivo_seq')  into STRICT nr_sequencia_w;


  fis_registros_w[qt_cursor_w].nr_sequencia     := nr_sequencia_w;
  fis_registros_w[qt_cursor_w].dt_atualizacao_nrec   := clock_timestamp();
  fis_registros_w[qt_cursor_w].nm_usuario_nrec     := current_setting('fis_sef_edoc_arq_lfpd01_pck.nm_usuario_w')::usuario.nm_usuario%type;
  fis_registros_w[qt_cursor_w].dt_atualizacao     := clock_timestamp();
  fis_registros_w[qt_cursor_w].nm_usuario     := current_setting('fis_sef_edoc_arq_lfpd01_pck.nm_usuario_w')::usuario.nm_usuario%type;
  fis_registros_w[qt_cursor_w].nr_seq_controle     := current_setting('fis_sef_edoc_arq_lfpd01_pck.nr_seq_controle_w')::bigint;
  fis_registros_w[qt_cursor_w].nr_linha       := current_setting('fis_sef_edoc_arq_lfpd01_pck.nr_linha_w')::fis_sef_edoc_arquivo.nr_linha%type;
  fis_registros_w[qt_cursor_w].ds_arquivo     := substr(current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_linha_w')::varchar(8000),1,4000);
  fis_registros_w[qt_cursor_w].ds_arquivo_compl     := substr(current_setting('fis_sef_edoc_arq_lfpd01_pck.ds_linha_w')::varchar(8000),4001,4000);
  fis_registros_w[qt_cursor_w].cd_registro     := vetRegC300[i].cd_reg;


if (nr_vetor_w >= 1000) then
begin
  forall i in fis_registros_w.first .. fis_registros_w.last

  insert into fis_sef_edoc_arquivo values fis_registros_w(i);


  nr_vetor_w := 0;
  fis_registros_w.delete;

  commit;

end;
end if;

nr_vetor_w := nr_vetor_w + 1;

end;
end loop;
EXIT WHEN NOT FOUND; /* apply on c_reg_C300 */
end loop;

close c_reg_C300;

if (fis_registros_w.count > 0) then
begin

  forall i in fis_registros_w.first .. fis_registros_w.last

  insert into fis_sef_edoc_arquivo values fis_registros_w(i);

  fis_registros_w.delete;

  commit;

end;
end if;

dbms_session.free_unused_user_memory;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_sef_edoc_arq_lfpd01_pck.fis_gerar_arq_c300_edoc (nr_seq_superior_p bigint) FROM PUBLIC;
