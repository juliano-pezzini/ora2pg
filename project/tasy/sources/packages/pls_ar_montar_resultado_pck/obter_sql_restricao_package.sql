-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- OBTER_SQL_RESTRICAO



CREATE OR REPLACE FUNCTION pls_ar_montar_resultado_pck.obter_sql_restricao ( dados_filtro_p tb_filtros_analise_resultado, ie_origem_p text, ds_tabela_p text, valor_bind_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE


sql_restricao_w		varchar(32000);

/* ie_origem_p
'A' - Analise
'D' - Despesas contas 
'M' - Mensaldiade */



BEGIN
-- Grupo de relacionamento

if (dados_filtro_p.nr_seq_grupo_contrato IS NOT NULL AND dados_filtro_p.nr_seq_grupo_contrato::text <> '') then
	sql_restricao_w := sql_restricao_w ||	' and exists	(select	1 ' || pls_util_pck.enter_w ||
						'		from	pls_ar_grupo_contrato x ' || pls_util_pck.enter_w ||
						'		where	x.nr_seq_reg_tabela = a.nr_sequencia ' || pls_util_pck.enter_w ||
						'		and	x.nr_seq_grupo_contrato = ' || dados_filtro_p.nr_seq_grupo_contrato || pls_util_pck.enter_w;
	if (ds_tabela_p IS NOT NULL AND ds_tabela_p::text <> '') then
		sql_restricao_w := sql_restricao_w ||	'		and	x.ds_tabela		= '''||ds_tabela_p||''''|| pls_util_pck.enter_w;
	end if;
	sql_restricao_w := sql_restricao_w ||	'		) ';
end if;

-- Contrato

if (dados_filtro_p.nr_seq_contrato IS NOT NULL AND dados_filtro_p.nr_seq_contrato::text <> '') then
	sql_restricao_w := sql_restricao_w || ' and a.nr_seq_contrato = ' || dados_filtro_p.nr_seq_contrato || pls_util_pck.enter_w;
end if;

-- Contrato de intercambio

if (dados_filtro_p.nr_seq_intercambio IS NOT NULL AND dados_filtro_p.nr_seq_intercambio::text <> '') then
	sql_restricao_w := sql_restricao_w || ' and a.nr_seq_intercambio = ' || dados_filtro_p.nr_seq_intercambio || pls_util_pck.enter_w;
end if;

-- Grupo de intercambio

if (dados_filtro_p.nr_seq_grupo_intercambio IS NOT NULL AND dados_filtro_p.nr_seq_grupo_intercambio::text <> '') then
	sql_restricao_w := sql_restricao_w || ' and a.nr_seq_grupo_intercambio = ' || dados_filtro_p.nr_seq_grupo_intercambio || pls_util_pck.enter_w;
end if;

-- Pagador

if (dados_filtro_p.nr_seq_pagador IS NOT NULL AND dados_filtro_p.nr_seq_pagador::text <> '') then
	sql_restricao_w := sql_restricao_w || ' and a.nr_seq_pagador = ' || dados_filtro_p.nr_seq_pagador || pls_util_pck.enter_w;
end if;

-- Beneficiario

if (dados_filtro_p.nr_seq_segurado IS NOT NULL AND dados_filtro_p.nr_seq_segurado::text <> '') then
	if (dados_filtro_p.ie_considerar_dependentes = 'S') then
		sql_restricao_w := sql_restricao_w || ' and (s.nr_sequencia = ' || dados_filtro_p.nr_seq_segurado || ' or s.nr_seq_titular = ' || dados_filtro_p.nr_seq_segurado || ')' || pls_util_pck.enter_w;
	else
		sql_restricao_w := sql_restricao_w || ' and a.nr_seq_segurado = ' || dados_filtro_p.nr_seq_segurado || pls_util_pck.enter_w;
	end if;
end if;

-- Estabelecimento

if (dados_filtro_p.cd_estabelecimento IS NOT NULL AND dados_filtro_p.cd_estabelecimento::text <> '') then
	sql_restricao_w := sql_restricao_w || ' and a.cd_estabelecimento = ' || dados_filtro_p.cd_estabelecimento || pls_util_pck.enter_w;
	valor_bind_p := sql_pck.bind_variable(':cd_estabelecimento', dados_filtro_p.cd_estabelecimento, valor_bind_p);
end if;

-- Vinculo operadora

if (dados_filtro_p.ie_tipo_vinculo_operadora IS NOT NULL AND dados_filtro_p.ie_tipo_vinculo_operadora::text <> '') then
	if (dados_filtro_p.ie_tipo_vinculo_operadora = '1') then
		sql_restricao_w := sql_restricao_w || ' and a.ie_tipo_vinculo_operadora is not null '|| pls_util_pck.enter_w;
	else
		sql_restricao_w := sql_restricao_w || ' and a.ie_tipo_vinculo_operadora is null '|| pls_util_pck.enter_w;
	end if;
end if;

-- Faixa etaria

if (dados_filtro_p.nr_seq_faixa_etaria IS NOT NULL AND dados_filtro_p.nr_seq_faixa_etaria::text <> '') then
	sql_restricao_w := sql_restricao_w || ' and a.nr_seq_faixa_etaria = ' || dados_filtro_p.nr_seq_faixa_etaria || pls_util_pck.enter_w;
end if;

-- Regulamentacao

if (dados_filtro_p.ie_regulamentacao IS NOT NULL AND dados_filtro_p.ie_regulamentacao::text <> '') then
	sql_restricao_w := sql_restricao_w || ' and a.ie_regulamentacao = ''' || dados_filtro_p.ie_regulamentacao || ''''|| pls_util_pck.enter_w;
	valor_bind_p := sql_pck.bind_variable(':ie_regulamentacao', dados_filtro_p.ie_regulamentacao, valor_bind_p);
end if;

-- Formacao do preco

if (dados_filtro_p.ie_preco IS NOT NULL AND dados_filtro_p.ie_preco::text <> '') then
	sql_restricao_w := sql_restricao_w ||' and a.ie_preco = ''' || dados_filtro_p.ie_preco || ''''|| pls_util_pck.enter_w;
end if;

-- Tipo contratacao

if (dados_filtro_p.ie_tipo_contratacao IS NOT NULL AND dados_filtro_p.ie_tipo_contratacao::text <> '') then
	sql_restricao_w := sql_restricao_w ||' and a.ie_tipo_contratacao = ''' || dados_filtro_p.ie_tipo_contratacao || '''' || pls_util_pck.enter_w;
end if;

-- Tipo beneficiario

if (dados_filtro_p.ie_tipo_segurado IS NOT NULL AND dados_filtro_p.ie_tipo_segurado::text <> '') then
	sql_restricao_w := sql_restricao_w ||' and a.ie_tipo_segurado in ('|| dados_filtro_p.ie_tipo_segurado || ') ' || pls_util_pck.enter_w;
end if;

-- Situacao trabalhista

if (dados_filtro_p.ie_situacao_trabalhista IS NOT NULL AND dados_filtro_p.ie_situacao_trabalhista::text <> '') then
	if (dados_filtro_p.ie_situacao_trabalhista = 'S') then
		sql_restricao_w := sql_restricao_w || ' and a.ie_situacao_trabalhista is not null '|| pls_util_pck.enter_w;		
	else
		sql_restricao_w := sql_restricao_w || ' and a.ie_situacao_trabalhista is null '|| pls_util_pck.enter_w;		
	end if;
end if;

-- Tipo de contrato

if (dados_filtro_p.ie_tipo_contrato IS NOT NULL AND dados_filtro_p.ie_tipo_contrato::text <> '') then
	if (dados_filtro_p.ie_tipo_contrato = 'PF') then
		sql_restricao_w := sql_restricao_w || ' and a.ie_tipo_contrato = ''PF''' || pls_util_pck.enter_w;
	else
		sql_restricao_w := sql_restricao_w || ' and a.ie_tipo_contrato = ''PJ''' || pls_util_pck.enter_w;
	end if;
end if;

-- Beneficiario Remido

if (dados_filtro_p.ie_benef_remido = 'S') then
	sql_restricao_w := sql_restricao_w || ' and  pls_obter_se_benef_remido(s.nr_sequencia,lote.dt_inicio) = ''S''' || pls_util_pck.enter_w;	
elsif (dados_filtro_p.ie_benef_remido = 'N')then
	sql_restricao_w := sql_restricao_w || ' and  pls_obter_se_benef_remido(s.nr_sequencia,lote.dt_inicio) = ''N''' || pls_util_pck.enter_w;			

end if;


-- Congenere repasse

if (dados_filtro_p.nr_seq_congenere IS NOT NULL AND dados_filtro_p.nr_seq_congenere::text <> '') then
	sql_restricao_w := sql_restricao_w || ' and a.nr_seq_congenere_repasse = ' || dados_filtro_p.nr_seq_congenere;
end if;

-- Apenas restringe data para geracao da analise de resultados.

if (ie_origem_p = 'A') then
	-- Periodo

	if (dados_filtro_p.dt_inicial IS NOT NULL AND dados_filtro_p.dt_inicial::text <> '') then
		sql_restricao_w := sql_restricao_w || ' and lote.dt_inicio between to_date(''' || dados_filtro_p.dt_inicial || ''') and to_date(''' || coalesce(dados_filtro_p.dt_final, dados_filtro_p.dt_inicial) || ''')' || pls_util_pck.enter_w;
	end if;
end if;

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_ar_montar_resultado_pck.obter_sql_restricao ( dados_filtro_p tb_filtros_analise_resultado, ie_origem_p text, ds_tabela_p text, valor_bind_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;
