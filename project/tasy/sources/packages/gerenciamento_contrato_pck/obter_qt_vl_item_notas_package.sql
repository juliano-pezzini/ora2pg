-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

	
	-->>>>>>> >>>>>>>>>>>>>>>>>>>>>> Quantidade/Valor total dos itens de notas fiscais vinculados ao contrato <<<<<<<<<<<<<<<<<<<<<<<<<<<--	
	/*
	Objetivo: Retornar a quantidade/valor total dos itens de notas fiscais vinculados ao contrato.
	Parametros: 
	nr_seq_contrato_p = Numero de sequencia do contrato.
	ie_qt_vl_p        = Quando passado 'QT': Ira retornar a quantidade total dos itens de notas vinculados ao contrato.
	                    Quando passado 'VL': Ira retornar o valor total total dos itens de notas vinculados ao contrato.
	ie_atual_p        = Quando 'S': Ira calcular a quantidade/valor atual dos itens de notas vinculados ao contrato.
					    Quando 'N': Ira retornar o valor de acordo com o ultimo gerenciamento de saldo do contrato existente na tabela "contrato_gerenciamento".
	*/
CREATE OR REPLACE FUNCTION gerenciamento_contrato_pck.obter_qt_vl_item_notas (nr_seq_contrato_p bigint, ie_qt_vl_p text, ie_atual_p text, nr_seq_regra_contrato_p bigint default null) RETURNS bigint AS $body$
DECLARE

									
		vl_nota_fiscal_w 		contrato_gerenciamento.vl_nota_fiscal%type;
		qt_nota_fiscal_item_w	contrato_gerenciamento.qt_nota_fiscal_item%type;
		ie_pagar_receber_w	    contrato.ie_pagar_receber%type;
									
		/* Nota Fiscal */

		c01 CURSOR(nr_seq_contrato_c bigint, ie_pagar_receber_c text) FOR
			SELECT a.nr_sequencia nr_seq_nf
			  from nota_fiscal a,
				operacao_nota b
			 where a.ie_situacao = 1
			   and (a.dt_atualizacao_estoque IS NOT NULL AND a.dt_atualizacao_estoque::text <> '')
			   and a.cd_operacao_nf = b.cd_operacao_nf
			   and b.ie_operacao_fiscal = CASE WHEN ie_pagar_receber_c='R' THEN  'S'  ELSE 'E' END
			   and exists (SELECT 	1 
							 from nota_fiscal_item b
							where a.nr_sequencia = b.nr_sequencia
							  and b.nr_contrato = nr_seq_contrato_c
							  and (((nr_seq_regra_contrato_p IS NOT NULL AND nr_seq_regra_contrato_p::text <> '') and nr_seq_regra_contrato_p > 0 and b.nr_seq_regra_contrato = nr_seq_regra_contrato_p) or
									coalesce(nr_seq_regra_contrato_p::text, '') = ''));

		
BEGIN
		
			ie_pagar_receber_w := gerenciamento_contrato_pck.obter_tipo_contrato(nr_seq_contrato_p);
			vl_nota_fiscal_w      := 0;
			qt_nota_fiscal_item_w := 0;
			
			For r01 in c01(nr_seq_contrato_p, ie_pagar_receber_w) loop
				if (ie_qt_vl_p = 'QT') then
					qt_nota_fiscal_item_w := qt_nota_fiscal_item_w + gerenciamento_contrato_pck.obter_qt_vl_item_nf(nr_seq_contrato_p, r01.nr_seq_nf, 'QT', nr_seq_regra_contrato_p);
				else
					vl_nota_fiscal_w := vl_nota_fiscal_w + gerenciamento_contrato_pck.obter_qt_vl_item_nf(nr_seq_contrato_p, r01.nr_seq_nf, 'VL');
				end if;
			end loop;
		
		if (ie_qt_vl_p = 'QT') then
			return qt_nota_fiscal_item_w;
		else
			return vl_nota_fiscal_w;
		end if;
																
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION gerenciamento_contrato_pck.obter_qt_vl_item_notas (nr_seq_contrato_p bigint, ie_qt_vl_p text, ie_atual_p text, nr_seq_regra_contrato_p bigint default null) FROM PUBLIC;
