-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pfcs_pck_db_utils.remove_establishment_data (cd_establishment_p bigint) AS $body$
DECLARE

        nr_seq_organization_w   pfcs_organization.nr_sequencia%type;
        tb_sequence_w           pls_util_cta_pck.t_number_table;

        cursor_encounters CURSOR(nr_seq_organization_p bigint) FOR
        SELECT enc.nr_sequencia nr_seq_encounter
        from pfcs_encounter enc
        where enc.nr_seq_organization = nr_seq_organization_p
            or coalesce(enc.nr_seq_patient::text, '') = '';

        cursor_observations CURSOR(nr_seq_organization_p  bigint) FOR
        SELECT obs.nr_sequencia nr_seq_observation
        from pfcs_observation obs
        where obs.nr_seq_encounter in (
            SELECT enc.nr_sequencia
            from pfcs_encounter enc
            where enc.nr_seq_organization = nr_seq_organization_p
                or coalesce(enc.nr_seq_organization::text, '') = ''
        );

        cursor_pfcs_details CURSOR(cd_establishment_p  bigint) FOR
        SELECT p.nr_sequencia
        from pfcs_panel_detail p
        where p.nr_seq_operational_level = cd_establishment_p
            or coalesce(p.nr_seq_operational_level::text, '') = '';


BEGIN
        select  max(nr_sequencia)
        into STRICT    nr_seq_organization_w
        from    pfcs_organization
        where   cd_estabelecimento = cd_establishment_p;

        if (nr_seq_organization_w IS NOT NULL AND nr_seq_organization_w::text <> '') then
            -- ================================= FHIR Tables =================================
            open cursor_observations(nr_seq_organization_w);
            loop
                tb_sequence_w.delete;
                fetch cursor_observations bulk collect into tb_sequence_w limit pls_util_pck.qt_registro_transacao_w;
                exit when tb_sequence_w.count = 0;

                forall i in tb_sequence_w.first..tb_sequence_w.last
                    delete FROM pfcs_observ_component where nr_seq_observation = tb_sequence_w(i);
                commit;
                forall i in tb_sequence_w.first..tb_sequence_w.last
                    delete FROM pfcs_observ_extension where nr_seq_observation = tb_sequence_w(i);
                commit;
                forall i in tb_sequence_w.first..tb_sequence_w.last
                    delete FROM pfcs_observation where nr_sequencia = tb_sequence_w(i);
                commit;
            end loop;
            close cursor_observations;

            open cursor_encounters(nr_seq_organization_w);
            loop
                tb_sequence_w.delete;
                fetch cursor_encounters bulk collect into tb_sequence_w limit pls_util_pck.qt_registro_transacao_w;
                exit when tb_sequence_w.count = 0;

                forall i in tb_sequence_w.first..tb_sequence_w.last
                    delete FROM pfcs_service_request where nr_seq_encounter = tb_sequence_w(i);
                commit;
                forall i in tb_sequence_w.first..tb_sequence_w.last
                    delete FROM pfcs_patient_flag where nr_seq_encounter = tb_sequence_w(i);
                commit;
                forall i in tb_sequence_w.first..tb_sequence_w.last
                    delete FROM pfcs_encounter_location where nr_seq_encounter = tb_sequence_w(i);
                commit;
                forall i in tb_sequence_w.first..tb_sequence_w.last
                    delete FROM pfcs_procedure where nr_seq_encounter = tb_sequence_w(i);
                commit;
            end loop;
            close cursor_encounters;

            delete FROM pfcs_appointment appt where appt.nr_seq_patient in (
                SELECT pat.nr_sequencia
                from pfcs_patient pat
                where pat.nr_seq_organization = nr_seq_organization_w
            ) or coalesce(appt.nr_seq_patient::text, '') = '';
            delete FROM pfcs_slot sl where sl.nr_seq_schedule in (
                SELECT distinct sch.nr_sequencia
                from pfcs_schedule sch,
                    pfcs_location loc
                where sch.nr_seq_location = loc.nr_sequencia
                and loc.nr_seq_organization = nr_seq_organization_w
                or coalesce(sch.nr_seq_location::text, '') = ''
            ) or coalesce(sl.nr_seq_schedule::text, '') = '';
            delete FROM pfcs_schedule sch where sch.nr_seq_location in (
                SELECT loc.nr_sequencia
                from pfcs_location loc
                where loc.nr_seq_organization = nr_seq_organization_w
            ) or coalesce(sch.nr_seq_location::text, '') = '';
            commit;

            delete FROM pfcs_task tsk where tsk.cd_establishment = cd_establishment_p or coalesce(tsk.cd_establishment::text, '') = '';
            delete FROM pfcs_patient_loc_hist where nr_seq_organization = nr_seq_organization_w or coalesce(nr_seq_organization::text, '') = '';
            delete FROM pfcs_location where nr_seq_organization = nr_seq_organization_w or coalesce(nr_seq_organization::text, '') = '';
            delete FROM pfcs_device where nr_seq_organization = nr_seq_organization_w or cd_estabelecimento = cd_establishment_p;
            delete FROM pfcs_encounter where nr_seq_organization = nr_seq_organization_w or coalesce(nr_seq_organization::text, '') = '';
            delete FROM pfcs_patient where nr_seq_organization = nr_seq_organization_w;
            commit;

            delete FROM pfcs_practitioner_role where nr_seq_organization = nr_seq_organization_w or coalesce(nr_seq_organization::text, '') = '';
            delete FROM pfcs_practitioner prac where not exists (
                SELECT 1 from pfcs_practitioner_role prac_role
                where prac_role.nr_seq_practitioner = prac.nr_sequencia
            );
            commit;

            -- ================================= Tasy Tables =================================
            delete FROM unidade_atendimento
            where nm_usuario_nrec = PFCS_PCK_CONSTANTS.NM_USER_PFCS
                and cd_setor_atendimento in (
                    SELECT cd_setor_atendimento
                    from setor_atendimento
                    where cd_estabelecimento = cd_establishment_p
                );
            delete FROM setor_atendimento
            where nm_usuario_nrec = PFCS_PCK_CONSTANTS.NM_USER_PFCS
                and cd_estabelecimento = cd_establishment_p;
            commit;

            -- ================================= PFCS Tables =================================
            open cursor_pfcs_details(cd_establishment_p);
            loop
                tb_sequence_w.delete;
                fetch cursor_pfcs_details bulk collect into tb_sequence_w limit pls_util_pck.qt_registro_transacao_w;
                exit when tb_sequence_w.count = 0;

                forall i in tb_sequence_w.first..tb_sequence_w.last
                    delete FROM pfcs_detail_employee where nr_seq_detail = tb_sequence_w(i);
                commit;
                forall i in tb_sequence_w.first..tb_sequence_w.last
                    delete FROM pfcs_detail_exam_lab where nr_seq_detail = tb_sequence_w(i);
                commit;
                forall i in tb_sequence_w.first..tb_sequence_w.last
                    delete FROM pfcs_detail_bed where nr_seq_detail = tb_sequence_w(i);
                commit;
                forall i in tb_sequence_w.first..tb_sequence_w.last
                    delete FROM pfcs_detail_patient where nr_seq_detail = tb_sequence_w(i);
                commit;
                forall i in tb_sequence_w.first..tb_sequence_w.last
                    delete FROM pfcs_detail_schedule where nr_seq_detail = tb_sequence_w(i);
                commit;
                forall i in tb_sequence_w.first..tb_sequence_w.last
                    delete FROM pfcs_detail_surgery where nr_seq_detail = tb_sequence_w(i);
                commit;
                forall i in tb_sequence_w.first..tb_sequence_w.last
                    delete FROM pfcs_panel_detail where nr_sequencia = tb_sequence_w(i);
                commit;
            end loop;
            close cursor_pfcs_details;

            delete FROM pfcs_panel where nr_seq_operational_level = cd_establishment_p;
            delete FROM pfcs_patient_simulation where cd_estabelecimento = cd_establishment_p;
            delete FROM pfcs_simulation_flow where nr_seq_organization = nr_seq_organization_w;
            commit;
        end if;
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_pck_db_utils.remove_establishment_data (cd_establishment_p bigint) FROM PUBLIC;
