-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pfcs_pck_indicators.indicator_values ( nr_seq_indicator_p bigint, cd_establishment_p bigint, ds_department_p text default null, cd_unit_p bigint default null, vl_indicator_p INOUT bigint DEFAULT NULL, vl_indicator_help_p INOUT bigint DEFAULT NULL, vl_indicator_dec_p INOUT bigint DEFAULT NULL, cd_unit_classification_p INOUT text DEFAULT NULL) AS $body$
DECLARE

        ds_HaH_unit_classification_w    pfcs_panel.cd_reference_aux%type := null;
        nr_seq_indicator_w              pfcs_indicator.nr_sequencia%type;

BEGIN
        if (nr_seq_indicator_p IS NOT NULL AND nr_seq_indicator_p::text <> '') then
            case
                when nr_seq_indicator_p in (current_setting('pfcs_pck_indicators.nr_tele_average_wait_time')::PFCS_INDICATOR.NR_SEQUENCIA%TYPE,
                                            current_setting('pfcs_pck_indicators.nr_tele_patient_to_review')::PFCS_INDICATOR.NR_SEQUENCIA%TYPE,
                                            current_setting('pfcs_pck_indicators.nr_tele_transition_review')::PFCS_INDICATOR.NR_SEQUENCIA%TYPE,
                                            current_setting('pfcs_pck_indicators.nr_tele_overall_capacity')::PFCS_INDICATOR.NR_SEQUENCIA%TYPE,
                                            current_setting('pfcs_pck_indicators.nr_tele_average_time_tele')::PFCS_INDICATOR.NR_SEQUENCIA%TYPE,
                                            current_setting('pfcs_pck_indicators.nr_hah_average_wait_time')::PFCS_INDICATOR.NR_SEQUENCIA%TYPE,
                                            current_setting('pfcs_pck_indicators.nr_hah_special_requests')::PFCS_INDICATOR.NR_SEQUENCIA%TYPE) then
                    vl_indicator_p := pfcs_pck_indicators.get_specific_value(nr_seq_indicator_p, cd_establishment_p, ds_department_p, cd_unit_p);
                when nr_seq_indicator_p in (current_setting('pfcs_pck_indicators.nr_tele_total_request')::PFCS_INDICATOR.NR_SEQUENCIA%TYPE,
                                            current_setting('pfcs_pck_indicators.nr_tele_monitors_in_use')::PFCS_INDICATOR.NR_SEQUENCIA%TYPE,
                                            current_setting('pfcs_pck_indicators.nr_tele_discontinue_orders')::PFCS_INDICATOR.NR_SEQUENCIA%TYPE) then
                    vl_indicator_p := pfcs_pck_indicators.get_detail_count(nr_seq_indicator_p, cd_establishment_p, ds_department_p);
            else
                cd_unit_classification_p := pfcs_pck_indicators.get_unit_classification(nr_seq_indicator_p);
                nr_seq_indicator_w := pfcs_pck_indicators.get_conversion(nr_seq_indicator_p);

                select  coalesce(sum(p.vl_indicator),0),
                        coalesce(sum(p.vl_indicator_help),0),
                        coalesce(sum(p.vl_indicator_dec),0)
                  into STRICT  vl_indicator_p,
                        vl_indicator_help_p,
                        vl_indicator_dec_p
                  from  pfcs_panel p
                 where  p.ie_situation = PFCS_PCK_CONSTANTS.IE_ACTIVE
                   and  (   (cd_unit_classification_p = PFCS_PCK_CONSTANTS.CD_HOSPITAL_OCCUPANCY and
                                pfcs_pck_utils.get_ie_hospital_occupancy(p.cd_reference_value) = PFCS_PCK_CONSTANTS.IE_YES_BR)
                            or (p.cd_reference_aux = cd_unit_classification_p)
                            or (coalesce(cd_unit_classification_p::text, '') = '')   )
                   and (p.cd_reference_value = to_char(cd_unit_p) or coalesce(cd_unit_p::text, '') = '')
                   and  p.nr_seq_operational_level = cd_establishment_p
                   and  p.nr_seq_indicator = nr_seq_indicator_w;

                if nr_seq_indicator_p = current_setting('pfcs_pck_indicators.nr_hah_census')::PFCS_INDICATOR.NR_SEQUENCIA%TYPE then
                    vl_indicator_p := vl_indicator_help_p;
                    vl_indicator_help_p := vl_indicator_help_p;
                    vl_indicator_dec_p := vl_indicator_help_p;
                end if;

				if (nr_seq_indicator_p = current_setting('pfcs_pck_indicators.nr_tele_census')::PFCS_INDICATOR.NR_SEQUENCIA%TYPE or nr_seq_indicator_p = current_setting('pfcs_pck_indicators.nr_tele_capacity')::PFCS_INDICATOR.NR_SEQUENCIA%TYPE) then
                    vl_indicator_dec_p := vl_indicator_p;
                    vl_indicator_p := vl_indicator_help_p;
                    vl_indicator_help_p := vl_indicator_dec_p;
                end if;
            end case;
        end if;
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_pck_indicators.indicator_values ( nr_seq_indicator_p bigint, cd_establishment_p bigint, ds_department_p text default null, cd_unit_p bigint default null, vl_indicator_p INOUT bigint DEFAULT NULL, vl_indicator_help_p INOUT bigint DEFAULT NULL, vl_indicator_dec_p INOUT bigint DEFAULT NULL, cd_unit_classification_p INOUT text DEFAULT NULL) FROM PUBLIC;
