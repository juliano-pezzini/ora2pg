-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pfcs_pck_indicators.get_value_panel ( nr_seq_indicator_p bigint, cd_establishment_p bigint, ds_department_p text default null, cd_unit_p bigint default null, nr_hours_increment_p bigint default null) RETURNS varchar AS $body$
DECLARE

        ds_return_w                 pfcs_panel.ds_reference_value%type;
        cd_type_w                   pfcs_indicator.cd_type%type;
        current_setting('pfcs_pck_indicators.cd_unit_classification_w')::pfcs_panel.cd_reference_aux%type    pfcs_detail_bed.ie_classification%type;
        vl_simulation_aux_w         pfcs_panel.vl_indicator_help%type;
        ie_standard_deviation_w     pfcs_panel.cd_reference_aux%type;

BEGIN
        if (nr_seq_indicator_p IS NOT NULL AND nr_seq_indicator_p::text <> '') then
            SELECT * FROM pfcs_pck_indicators.indicator_values(	nr_seq_indicator_p => nr_seq_indicator_p, cd_establishment_p => cd_establishment_p, ds_department_p => ds_department_p, cd_unit_p => cd_unit_p, vl_indicator_p => current_setting('pfcs_pck_indicators.vl_indicator_w')::pfcs_panel.vl_indicator%type, vl_indicator_help_p => current_setting('pfcs_pck_indicators.vl_indicator_help_w')::pfcs_panel.vl_indicator_help%type, vl_indicator_dec_p => current_setting('pfcs_pck_indicators.vl_indicator_dec_w')::pfcs_panel.vl_indicator_dec%type, cd_unit_classification_p => current_setting('pfcs_pck_indicators.cd_unit_classification_w')::pfcs_panel.cd_reference_aux%type) INTO STRICT vl_indicator_p => current_setting('pfcs_pck_indicators.vl_indicator_w')::pfcs_panel.vl_indicator%type, vl_indicator_help_p => current_setting('pfcs_pck_indicators.vl_indicator_help_w')::pfcs_panel.vl_indicator_help%type, vl_indicator_dec_p => current_setting('pfcs_pck_indicators.vl_indicator_dec_w')::pfcs_panel.vl_indicator_dec%type, cd_unit_classification_p => current_setting('pfcs_pck_indicators.cd_unit_classification_w')::pfcs_panel.cd_reference_aux%type;

            cd_type_w := pfcs_pck_indicators.get_type(nr_seq_indicator_p);
            if (substr(cd_type_w,1,5) = PFCS_PCK_CONSTANTS.CD_PREDICTED_PREFIX) then
                vl_simulation_aux_w := current_setting('pfcs_pck_indicators.vl_indicator_help_w')::pfcs_panel.vl_indicator_help%type;
                ie_standard_deviation_w := PFCS_PCK_CONSTANTS.IE_YES;
                if (substr(cd_type_w,6,10) = PFCS_PCK_SIM.CD_TYPE_CAPACITY_W) then
                    vl_simulation_aux_w := current_setting('pfcs_pck_indicators.vl_indicator_w')::pfcs_panel.vl_indicator%type;
                    ie_standard_deviation_w := PFCS_PCK_CONSTANTS.IE_NO;
                end if;

                ds_return_w :=
                    case when coalesce(cd_unit_p::text, '') = '' then
                        pfcs_pck_sim.get_simulation_value(
                            cd_establishment_p,
                            nr_hours_increment_p,
                            substr(cd_type_w,6,10),
                            current_setting('pfcs_pck_indicators.cd_unit_classification_w')::pfcs_panel.cd_reference_aux%type,
                            ie_standard_deviation_w,
                            vl_simulation_aux_w)
                    else
                        PERFORM pfcs_pck_sim.get_simulation_value_unit(
                            cd_establishment_p,
                            nr_hours_increment_p,
                            substr(cd_type_w,6,10),
                            cd_unit_p,
                            ie_standard_deviation_w,
                            vl_simulation_aux_w)
                    end;
            else
                ds_return_w :=
                    case cd_type_w
                        when current_setting('pfcs_pck_indicators.cd_type_percentage')::varchar(1)     then concat(pfcs_get_percentage_value(current_setting('pfcs_pck_indicators.vl_indicator_help_w')::pfcs_panel.vl_indicator_help%type, current_setting('pfcs_pck_indicators.vl_indicator_w')::pfcs_panel.vl_indicator%type),'%')
                        when current_setting('pfcs_pck_indicators.cd_type_fraction')::varchar(1)       then (current_setting('pfcs_pck_indicators.vl_indicator_help_w')::pfcs_panel.vl_indicator_help%type || '/' || current_setting('pfcs_pck_indicators.vl_indicator_w')::pfcs_panel.vl_indicator%type)
                        when current_setting('pfcs_pck_indicators.cd_type_decimal')::varchar(1)        then regexp_replace(to_char(round((current_setting('pfcs_pck_indicators.vl_indicator_dec_w')::pfcs_panel.vl_indicator_dec%type)::numeric,1)), '^(-?)([.,])', '\10\2')
                        when current_setting('pfcs_pck_indicators.cd_type_time')::varchar(1)           then get_time_by_minutes(current_setting('pfcs_pck_indicators.vl_indicator_w')::pfcs_panel.vl_indicator%type)
                        when current_setting('pfcs_pck_indicators.cd_type_number')::varchar(1)         then to_char(current_setting('pfcs_pck_indicators.vl_indicator_w')::pfcs_panel.vl_indicator%type)
                        else null
                    end;
            end if;
        end if;

        return ds_return_w;
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pfcs_pck_indicators.get_value_panel ( nr_seq_indicator_p bigint, cd_establishment_p bigint, ds_department_p text default null, cd_unit_p bigint default null, nr_hours_increment_p bigint default null) FROM PUBLIC;
