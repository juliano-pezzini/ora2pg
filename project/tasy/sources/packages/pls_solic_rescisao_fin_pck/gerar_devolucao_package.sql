-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_solic_rescisao_fin_pck.gerar_devolucao (nr_seq_solic_resc_fin_p pls_solic_rescisao_fin.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


nr_seq_nota_credito_w		nota_credito.nr_sequencia%type;
nr_seq_pagador_w		pls_contrato_pagador.nr_sequencia%type;
cd_cgc_w			pessoa_juridica.cd_cgc%type;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_moeda_cp_w			parametros_contas_pagar.cd_moeda_padrao%type;
vl_devolucao_mens_w		double precision;
nr_seq_regra_w			pls_resc_fin_mens.nr_sequencia%type;
nr_seq_motivo_nc_w		pls_resc_fin_mens.nr_seq_motivo_nc%type;
nr_seq_trans_fin_baixa_nc_w	pls_resc_fin_mens.nr_seq_trans_fin_baixa%type;
nr_seq_trans_fin_contab_nc_w	pls_resc_fin_mens.nr_seq_trans_fin_contab%type;
ds_observacao_w			nota_credito.ds_observacao%type;
ds_observacao_comp_w		pls_solic_resc_fin_ven_obs.ds_observacao%type;
cd_moeda_padrao_w		parametro_contas_receber.cd_moeda_padrao%type;
nr_seq_trans_fin_baixa_w	parametro_contas_receber.nr_seq_trans_fin_baixa%type;
cd_tipo_recebimento_w		pls_resc_fin_mens.cd_tipo_recebimento%type;
nr_seq_solic_rescisao_w		pls_solicitacao_rescisao.nr_sequencia%type;
cd_centro_custo_desc_w		pls_resc_fin_mens.cd_centro_custo_desc%type;
nr_seq_motivo_desc_w		pls_resc_fin_mens.nr_seq_motivo_desc%type;
nr_seq_motivo_cancel_mens_w	pls_resc_fin_mens.nr_seq_motivo_cancel_mens%type;
ie_apropriar_nc_mens_w		pls_resc_fin_mens.ie_apropriar_nc_mens%type;
nr_seq_pagador_aprop_w		pls_contrato_pagador.nr_sequencia%type;
nr_seq_regra_duplic_w		regra_acao_pag_duplic.nr_sequencia%type;
ie_acao_duplic_w		regra_acao_pag_duplic.ie_acao%type;
dt_rescisao_w			timestamp;
nr_seq_solic_resc_fin_venc_w	pls_solic_resc_fin_venc.nr_sequencia%type;

vl_ato_cooperado_w		pls_mensalidade_seg_item.vl_ato_cooperado%type;
vl_ato_auxiliar_w		pls_mensalidade_seg_item.vl_ato_auxiliar%type;
vl_ato_nao_cooperado_w		pls_mensalidade_seg_item.vl_ato_nao_cooperado%type;
vl_diferenca_w			double precision;

tb_nr_sequencia_classif_w	pls_util_cta_pck.t_number_table;
tb_vl_classificacao_w		pls_util_cta_pck.t_number_table;
tb_cd_centro_custo_w		pls_util_cta_pck.t_varchar2_table_20;
tb_cd_conta_contabil_classif_w	pls_util_cta_pck.t_varchar2_table_20;
i_classif_item_w		integer;

C01 CURSOR(	nr_seq_rescisao_fin_pc	pls_solic_rescisao_fin.nr_sequencia%type) FOR
	SELECT	b.cd_centro_custo,
		b.cd_conta_rec,
		b.cd_conta_ato_cooperado,
		b.cd_conta_ato_auxiliar,
		b.cd_conta_ato_nao_coop,
		a.vl_devolver,
		coalesce(b.vl_ato_cooperado,0) vl_ato_cooperado,
		coalesce(b.vl_ato_auxiliar,0) vl_ato_auxiliar,
		coalesce(b.vl_ato_nao_cooperado,0) vl_ato_nao_cooperado,
		a.qt_dias_cobertura,
		a.qt_dias_devolucao,
		a.dt_contabil
	from	pls_solic_resc_fin_item a,
		pls_mensalidade_seg_item b
	where	b.nr_sequencia = a.nr_seq_item_mensalidade
	and	a.nr_seq_solic_resc_fin	= nr_seq_rescisao_fin_pc
	and	a.vl_devolver <> 0;

BEGIN

i_classif_item_w	:= 0;
tb_nr_sequencia_classif_w.delete;
tb_vl_classificacao_w.delete;
tb_cd_centro_custo_w.delete;
tb_cd_conta_contabil_classif_w.delete;

nr_seq_regra_w	:= pls_obter_regra_resc_fin(nr_seq_solic_resc_fin_p, cd_estabelecimento_p);

if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
	begin
	select	nr_seq_motivo_nc,
		nr_seq_trans_fin_baixa,
		nr_seq_trans_fin_contab,
		cd_tipo_recebimento,
		cd_centro_custo_desc,
		nr_seq_motivo_desc,
		nr_seq_motivo_cancel_mens,
		coalesce(ie_apropriar_nc_mens,'N')
	into STRICT	nr_seq_motivo_nc_w,
		nr_seq_trans_fin_baixa_nc_w,
		nr_seq_trans_fin_contab_nc_w,
		cd_tipo_recebimento_w,
		cd_centro_custo_desc_w,
		nr_seq_motivo_desc_w,
		nr_seq_motivo_cancel_mens_w,
		ie_apropriar_nc_mens_w
	from	pls_resc_fin_mens
	where	nr_sequencia = nr_seq_regra_w;
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(838360); --Favor preencher o cadastro na aba Regras / Financeiro
	end;
else
	CALL wheb_mensagem_pck.exibir_mensagem_abort(838360);
end if;

if (coalesce(cd_tipo_recebimento_w::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(838362); --Favor realizar o cadastro do tipo de baixa padrao na aba Regras / Financeiro.
end if;

begin
select	cd_moeda_padrao,
	nr_seq_trans_fin_baixa
into STRICT	cd_moeda_padrao_w,
	nr_seq_trans_fin_baixa_w
from	parametro_contas_receber
where	cd_estabelecimento = cd_estabelecimento_p;
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(176708);
end;

begin
select	a.cd_moeda_padrao
into STRICT	cd_moeda_cp_w
from	parametros_contas_pagar a
where	a.cd_estabelecimento	= cd_estabelecimento_p;
exception
when no_data_found then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(181573);
end;

select	max(b.nr_sequencia),
	coalesce(max(b.dt_rescisao),max(b.dt_solicitacao))
into STRICT	nr_seq_solic_rescisao_w,
	dt_rescisao_w
from	pls_solic_rescisao_fin a,
	pls_solicitacao_rescisao b
where	b.nr_sequencia	= a.nr_seq_solicitacao
and	a.nr_sequencia	= nr_seq_solic_resc_fin_p;

select	b.nr_sequencia,
	b.cd_pessoa_fisica,
	b.cd_cgc
into STRICT	nr_seq_pagador_w,
	cd_pessoa_fisica_w,
	cd_cgc_w
from	pls_solic_rescisao_fin a,
	pls_contrato_pagador b
where	b.nr_sequencia = a.nr_seq_pagador
and	a.nr_sequencia = nr_seq_solic_resc_fin_p;

select	sum(vl_devolver)
into STRICT	vl_devolucao_mens_w
from	table(pls_obj_dados_rescisao_pck.obter_dados_rescisao(nr_seq_solic_resc_fin_p,cd_estabelecimento_p))
where	ie_tipo_item = 1;

SELECT * FROM pls_solic_rescisao_fin_pck.obter_mensagem_nota_credito(nr_seq_solic_rescisao_w, nr_seq_solic_resc_fin_p, cd_estabelecimento_p, ds_observacao_w, ds_observacao_comp_w) INTO STRICT ds_observacao_w, ds_observacao_comp_w;

select	nextval('nota_credito_seq')
into STRICT	nr_seq_nota_credito_w
;

if (vl_devolucao_mens_w <> 0) then
	if (ie_apropriar_nc_mens_w = 'S') then
		nr_seq_pagador_aprop_w	:= nr_seq_pagador_w;
		obter_regra_acao_pag_duplic(clock_timestamp(), cd_estabelecimento_p, nm_usuario_p, nr_seq_regra_duplic_w, ie_acao_duplic_w);
	else
		nr_seq_pagador_aprop_w	:= null;
		nr_seq_regra_duplic_w	:= null;
		ie_acao_duplic_w	:= null;
	end if;
	
	insert into nota_credito(nr_sequencia, cd_estabelecimento, dt_atualizacao,
		nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
		vl_nota_credito, cd_pessoa_fisica, ie_situacao,
		cd_cgc, dt_nota_credito, cd_moeda,
		ie_origem, vl_saldo, ds_observacao,
		nr_seq_motivo, nr_seq_trans_baixa_tit_pagar, nr_seq_trans_fin_contab,
		nr_seq_pagador_aprop, nr_seq_regra_pag_duplic)
	values (nr_seq_nota_credito_w, cd_estabelecimento_p, clock_timestamp(),
		nm_usuario_p, clock_timestamp(), nm_usuario_p,
		vl_devolucao_mens_w, cd_pessoa_fisica_w, 'A',
		cd_cgc_w, clock_timestamp(), cd_moeda_cp_w, 
		'RC', vl_devolucao_mens_w, ds_observacao_w,
		nr_seq_motivo_nc_w, nr_seq_trans_fin_baixa_nc_w, nr_seq_trans_fin_contab_nc_w,
		nr_seq_pagador_aprop_w, nr_seq_regra_duplic_w);
	
	insert into pls_solic_resc_fin_venc(nr_sequencia, dt_atualizacao, dt_atualizacao_nrec,
		nm_usuario, nm_usuario_nrec, nr_seq_nota_credito,
		nr_seq_solic_resc_fin)
	values (nextval('pls_solic_resc_fin_venc_seq'), clock_timestamp(), clock_timestamp(),
		nm_usuario_p, nm_usuario_p, nr_seq_nota_credito_w,
		nr_seq_solic_resc_fin_p)
		returning nr_sequencia into nr_seq_solic_resc_fin_venc_w;
	
	insert into pls_solic_resc_fin_ven_obs(nr_sequencia, nr_seq_solic_resc_fin_venc, dt_atualizacao,
		nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
		ds_observacao)
	values (nextval('pls_solic_resc_fin_ven_obs_seq'),nr_seq_solic_resc_fin_venc_w, clock_timestamp(),
		nm_usuario_p, clock_timestamp(), nm_usuario_p,
		ds_observacao_comp_w);

	for r_c01_w in c01(nr_seq_solic_resc_fin_p) loop
		begin
		vl_ato_cooperado_w	:= (r_c01_w.vl_ato_cooperado / r_c01_w.qt_dias_cobertura) * r_c01_w.qt_dias_devolucao;
		vl_ato_auxiliar_w	:= (r_c01_w.vl_ato_auxiliar / r_c01_w.qt_dias_cobertura) * r_c01_w.qt_dias_devolucao;
		vl_ato_nao_cooperado_w	:= (r_c01_w.vl_ato_nao_cooperado / r_c01_w.qt_dias_cobertura) * r_c01_w.qt_dias_devolucao;

		if (coalesce(r_c01_w.cd_centro_custo::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1027354);
		elsif	((vl_ato_cooperado_w > 0) or (vl_ato_auxiliar_w > 0) or (vl_ato_nao_cooperado_w > 0)) then
			if	((vl_ato_cooperado_w + vl_ato_auxiliar_w + vl_ato_nao_cooperado_w) <> (r_c01_w.vl_devolver)) then
				vl_diferenca_w	:= r_c01_w.vl_devolver - (vl_ato_cooperado_w + vl_ato_auxiliar_w + vl_ato_nao_cooperado_w);
				
				if (vl_ato_cooperado_w > 0) then
					vl_ato_cooperado_w	:= vl_ato_cooperado_w + vl_diferenca_w;
				elsif (vl_ato_auxiliar_w > 0 ) then
					vl_ato_auxiliar_w	:= vl_ato_auxiliar_w + vl_diferenca_w;
				elsif (vl_ato_nao_cooperado_w > 0) then
					vl_ato_nao_cooperado_w	:= vl_ato_nao_cooperado_w + vl_diferenca_w;
				end if;
			end if;

			if (vl_ato_cooperado_w > 0) then
				i_classif_item_w				:= i_classif_item_w + 1;
				tb_nr_sequencia_classif_w(i_classif_item_w)	:= i_classif_item_w;
				tb_vl_classificacao_w(i_classif_item_w)		:= vl_ato_cooperado_w;
				tb_cd_centro_custo_w(i_classif_item_w)		:= r_c01_w.cd_centro_custo;
				tb_cd_conta_contabil_classif_w(i_classif_item_w) := r_c01_w.cd_conta_ato_cooperado;
			end if;

			if (vl_ato_auxiliar_w > 0) then
				i_classif_item_w				:= i_classif_item_w + 1;
				tb_nr_sequencia_classif_w(i_classif_item_w)	:= i_classif_item_w;
				tb_vl_classificacao_w(i_classif_item_w)		:= vl_ato_auxiliar_w;
				tb_cd_centro_custo_w(i_classif_item_w)		:= r_c01_w.cd_centro_custo;
				tb_cd_conta_contabil_classif_w(i_classif_item_w) := r_c01_w.cd_conta_ato_auxiliar;
			end if;

			if (vl_ato_nao_cooperado_w > 0) then
				i_classif_item_w				:= i_classif_item_w + 1;
				tb_nr_sequencia_classif_w(i_classif_item_w)	:= i_classif_item_w;
				tb_vl_classificacao_w(i_classif_item_w)		:= vl_ato_nao_cooperado_w;
				tb_cd_centro_custo_w(i_classif_item_w)		:= r_c01_w.cd_centro_custo;
				tb_cd_conta_contabil_classif_w(i_classif_item_w) := r_c01_w.cd_conta_ato_nao_coop;
			end if;
		else	
			i_classif_item_w				:= i_classif_item_w + 1;
			tb_nr_sequencia_classif_w(i_classif_item_w)	:= i_classif_item_w;
			tb_vl_classificacao_w(i_classif_item_w)		:= r_c01_w.vl_devolver;
			tb_cd_centro_custo_w(i_classif_item_w)		:= r_c01_w.cd_centro_custo;
			tb_cd_conta_contabil_classif_w(i_classif_item_w) := r_c01_w.cd_conta_rec;
		end if;

		end;
	end loop;

	if (tb_nr_sequencia_classif_w.count > 0) then
		for i in tb_nr_sequencia_classif_w.first..tb_nr_sequencia_classif_w.last loop
			insert into nota_credito_classif(nr_sequencia, nm_usuario, nm_usuario_nrec,
				cd_centro_custo, cd_conta_contabil, dt_atualizacao,
				dt_atualizacao_nrec, nr_seq_nota_credito, vl_classificacao)
			values (nextval('nota_credito_classif_seq'), nm_usuario_p, nm_usuario_p,
				tb_cd_centro_custo_w(i), tb_cd_conta_contabil_classif_w(i), clock_timestamp(),
				clock_timestamp(), nr_seq_nota_credito_w, tb_vl_classificacao_w(i));
		end loop;
		
		tb_nr_sequencia_classif_w.delete;
		tb_cd_centro_custo_w.delete;
		tb_cd_conta_contabil_classif_w.delete;
		tb_vl_classificacao_w.delete;
	end if;
	
	pls_fiscal_dados_dmed_pck.gerar_devolucao(nr_seq_solic_resc_fin_p, 'N', nm_usuario_p, cd_estabelecimento_p);
end if;

CALL pls_solic_rescisao_fin_pck.gerar_baixa_titulo_mens(nr_seq_solic_resc_fin_p, cd_moeda_padrao_w, cd_tipo_recebimento_w,
			nr_seq_solic_rescisao_w, cd_centro_custo_desc_w, nr_seq_motivo_desc_w,
			nr_seq_motivo_cancel_mens_w, nm_usuario_p, cd_estabelecimento_p);

update	pls_solic_rescisao_fin
set	dt_devolucao = clock_timestamp()
where	nr_sequencia = nr_seq_solic_resc_fin_p;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_solic_rescisao_fin_pck.gerar_devolucao (nr_seq_solic_resc_fin_p pls_solic_rescisao_fin.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
