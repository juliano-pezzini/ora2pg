-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--
-- dblink wrapper to call function pkg_manter_valor_referencia.consultar_valor_referencia() as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE FUNCTION pkg_manter_valor_referencia.consultar_valor_referencia ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, nr_seq_exame_p bigint ) RETURNS LAB_LOTE_VAL_REF%ROWTYPE AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

	v_ret	LAB_LOTE_VAL_REF%ROWTYPE;
BEGIN
	v_query := 'SELECT * FROM pkg_manter_valor_referencia.consultar_valor_referencia_atx ( ' || quote_nullable(nr_prescricao_p) || ',' || quote_nullable(nr_seq_prescr_p) || ',' || quote_nullable(nr_seq_exame_p) || ' )';
	SELECT * INTO v_ret FROM dblink(v_conn_str, v_query) AS p (ret LAB_LOTE_VAL_REF%ROWTYPE);
	RETURN v_ret;

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE FUNCTION pkg_manter_valor_referencia.consultar_valor_referencia_atx ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, nr_seq_exame_p bigint ) RETURNS LAB_LOTE_VAL_REF%ROWTYPE AS $body$
DECLARE
ie_status_atend_w      bigint;
        refer                  lab_lote_val_ref%rowtype;

BEGIN

        select  ie_status_atend
        into STRICT    ie_status_atend_w
        from    prescr_procedimento
        where   nr_prescricao = nr_prescricao_p
          and   nr_sequencia = nr_seq_prescr_p;

        -- exames com resultados aprovados
        if (ie_status_atend_w >= 35) then
        	-- verifica se ja esta cadastrado na nova tabela
        	refer := pkg_manter_valor_referencia.obter_valor_referencia(nr_prescricao_p,
                                            nr_seq_prescr_p,
                                            nr_seq_exame_p);
        	-- caso nao esteja cadastrado
        	if (coalesce(refer.nr_sequencia::text, '') = '') then
        		-- gera os valores de referencia a partir do antigo select
        		refer := pkg_manter_valor_referencia.calcular_valor_referencia(nr_prescricao_p,
                                                   nr_seq_prescr_p,
                                                   nr_seq_exame_p);
        		if (refer.nr_sequencia IS NOT NULL AND refer.nr_sequencia::text <> '') then
        			-- insere os novos valores de referencia na nova tabela
        			CALL pkg_manter_valor_referencia.ins_att_valor_referencia('I',
                                             refer);
        		end if;
        	end if;
        else
        	-- verifica se ja esta cadastrado na nova tabela
        	refer := pkg_manter_valor_referencia.obter_valor_referencia(nr_prescricao_p,
                                            nr_seq_prescr_p,
                                            nr_seq_exame_p);
        	-- caso nao esteja cadastrado
        	if (coalesce(refer.nr_sequencia::text, '') = '') then
        		-- gera os valores de referencia a partir do antigo select
        		refer := pkg_manter_valor_referencia.calcular_valor_referencia(nr_prescricao_p,
                                                   nr_seq_prescr_p,
                                                   nr_seq_exame_p);
        		if (refer.nr_sequencia IS NOT NULL AND refer.nr_sequencia::text <> '') then
        			-- insere os novos valores de referencia na nova tabela
        			CALL pkg_manter_valor_referencia.ins_att_valor_referencia('I',
                                             refer);
        		end if;
        	else
        		-- gera os valores de referencia a partir do antigo select
        		refer := pkg_manter_valor_referencia.calcular_valor_referencia(nr_prescricao_p,
                                                   nr_seq_prescr_p,
                                                   nr_seq_exame_p);
        		if (refer.nr_sequencia IS NOT NULL AND refer.nr_sequencia::text <> '') then
        			-- atualiza os valores de referencia ja existentes na nova tabela
        			CALL pkg_manter_valor_referencia.ins_att_valor_referencia('U',
                                            refer);
        		end if;
        	end if;
        end if;

        return refer;
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pkg_manter_valor_referencia.consultar_valor_referencia ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, nr_seq_exame_p bigint ) FROM PUBLIC; -- REVOKE ALL ON FUNCTION pkg_manter_valor_referencia.consultar_valor_referencia_atx ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, nr_seq_exame_p bigint ) FROM PUBLIC;
