-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- Retornar os campos da tabela para insert



CREATE OR REPLACE FUNCTION pls_cargas_pck.obter_estrutura_acao ( nm_tabela_p pls_cg_tab_tasy.nm_tabela%type, ie_opcao_p text ) RETURNS text AS $body$
DECLARE

				
ds_retorno_w		text;
nm_tabela_ref_w		pls_cg_tab_tasy.nm_tabela%type;
nr_seq_tab_sup_w	pls_cg_tab_tasy.nr_seq_tab_sup%type;
nm_atributo_w		integridade_atributo.nm_atributo%type;

-- Pegar os campos que estao vindo na VIEW necessarios para insert

-- Pegar os campos que receberam os valores da VIEW

C01 CURSOR( nm_tabela_pc		pls_cg_tab_tasy.nm_tabela%type ) FOR
	SELECT	x.nm_atributo
	from	tabela_atributo x
	where	x.nm_tabela	= nm_tabela_pc
	and	x.ie_tipo_atributo not in ('FUNCTION')
	and	x.nm_atributo not in ('NM_USUARIO','NM_USUARIO_NREC','DT_ATUALIZACAO','DT_ATUALIZACAO_NREC','NR_SEQUENCIA','CD_ESTABELECIMENTO')
	and	not exists (SELECT	1
				from	integridade_referencial	t,
					integridade_atributo	a
				where	t.nm_tabela			= a.nm_tabela
				and	t.nm_integridade_referencial	= a.nm_integridade_referencial
				and	a.nm_atributo			= x.nm_atributo
				and	t.nm_tabela			= x.nm_tabela)
	order by x.nr_sequencia_criacao;

BEGIN
-- Verificar se tem tabela superior

select	max(a.nr_seq_tab_sup)
into STRICT	nr_seq_tab_sup_w
from	pls_cg_tab_tasy	a
where	a.nm_tabela	= nm_tabela_p;

-- Obter nome da tabela superior

if (nr_seq_tab_sup_w IS NOT NULL AND nr_seq_tab_sup_w::text <> '') then
	select	max(x.nm_tabela)
	into STRICT	nm_tabela_ref_w
	from	pls_cg_tab_tasy	x
	where	x.nr_sequencia	= nr_seq_tab_sup_w;
	
	if (nm_tabela_ref_w IS NOT NULL AND nm_tabela_ref_w::text <> '') then
		select	max(a.nm_atributo)
		into STRICT	nm_atributo_w
		from	integridade_referencial	t,
			integridade_atributo	a
		where	t.nm_tabela			= a.nm_tabela
		and	t.nm_integridade_referencial	= a.nm_integridade_referencial
		and	t.nm_tabela_referencia		= nm_tabela_ref_w
		and	t.nm_tabela			= nm_tabela_p;
	end if;
end if;

-- Values para Insert

if (ie_opcao_p = 'V') then
	-- Valores obrigatorios

	ds_retorno_w := ' select '||nm_tabela_p||'_seq.nextval, '||' sysdate dt_atualizacao, '||chr(39)||nm_usuario_w||chr(39)||' nm_usuario, '
								||' sysdate dt_atualizacao_nrec, '||chr(39)||nm_usuario_w||chr(39)||' nm_usuario_nrec';
	
	-- Sequencia da tabela pai

	if (nm_tabela_ref_w IS NOT NULL AND nm_tabela_ref_w::text <> '') then
		ds_retorno_w := ds_retorno_w || ', (select max(x.nr_sequencia) from '||nm_tabela_ref_w||' x where x.cd_chave = a.cd_chave_sup) nr_seq_sup';
	end if;
	
	-- Se lote de integracao

	if (nr_seq_cg_lote_w IS NOT NULL AND nr_seq_cg_lote_w::text <> '') then
		ds_retorno_w := ds_retorno_w || ', '||nr_seq_cg_lote_w||' nr_seq_lote';
	end if;

	-- Obter o nome dos campos necessarios

	for r_C01_w in C01(nm_tabela_p) loop
		ds_retorno_w := ds_retorno_w ||', '|| r_C01_w.nm_atributo;
	end loop;

-- Insert

elsif (ie_opcao_p = 'I') then
	ds_retorno_w := ' insert into '|| nm_tabela_p ||' (nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec ';
	
	if (nm_atributo_w IS NOT NULL AND nm_atributo_w::text <> '') then
		ds_retorno_w := ds_retorno_w || ', ' || nm_atributo_w;
	end if;
	
	ds_retorno_w := ds_retorno_w || ', nr_seq_lote ';
	
	-- Obter o nome dos campos necessarios

	for r_C01_w in C01( nm_tabela_p ) loop
		ds_retorno_w := ds_retorno_w ||', '|| r_C01_w.nm_atributo;
	end loop;
	
	ds_retorno_w := ds_retorno_w ||')';
	
-- Delete

elsif (ie_opcao_p = 'D') then
	ds_retorno_w := ' delete '|| nm_tabela_p ||' where nr_seq_lote = '||nr_seq_cg_lote_w;
end if;

return ds_retorno_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_cargas_pck.obter_estrutura_acao ( nm_tabela_p pls_cg_tab_tasy.nm_tabela%type, ie_opcao_p text ) FROM PUBLIC;
