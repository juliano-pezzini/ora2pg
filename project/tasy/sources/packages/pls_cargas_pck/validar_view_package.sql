-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- Validar view



CREATE OR REPLACE PROCEDURE pls_cargas_pck.validar_view () AS $body$
DECLARE


ds_sql_w		text;
data_type_w		user_tab_columns.data_type%type;
data_length_w		bigint;
qt_reg_w		integer;

-- Obter os campos necessarios para validacao

c00 CURSOR(	ie_tipo_carga_pc		pls_cg_regra.ie_tipo_carga%type ) FOR
	SELECT	ta.nm_atributo,
		ta.ie_tipo_atributo,
		ta.qt_tamanho,
		ta.ie_componente,
		ta.cd_exp_valores,
		ta.ds_valores,
		ta.cd_dominio,
		ta.nm_tabela,
		tt.ie_tipo_carga
	from	pls_cg_tab_tasy		tt,
		tabela_atributo		ta
	where	tt.nm_tabela		= ta.nm_tabela
	and	tt.ie_tipo_carga	= ie_tipo_carga_pc
	and	ta.ie_tipo_atributo	in ('NUMBER','VARCHAR2','DATE')
	and	ta.nm_atributo not in ('NM_USUARIO','NM_USUARIO_NREC','DT_ATUALIZACAO','DT_ATUALIZACAO_NREC','NR_SEQUENCIA','CD_ESTABELECIMENTO')
	and	not exists (SELECT	1
				from	integridade_referencial	it,
					integridade_atributo	ia
				where	it.nm_tabela			= ia.nm_tabela
				and	it.nm_integridade_referencial	= ia.nm_integridade_referencial
				and	ia.nm_atributo			= ta.nm_atributo
				and	it.nm_tabela			= ta.nm_tabela)
	order by ta.nr_sequencia_criacao;

BEGIN
for r_C00_w in C00( ie_tipo_carga_w ) loop
	begin -- Obter informacaes dos campos da view
	select	data_type
	into STRICT	data_type_w
	from	user_tab_columns
	where	table_name	= nm_view_carga_w
	and	column_name	= r_C00_w.nm_atributo;
	exception
	when others then
		data_type_w := null;
	end;
	
	-- Verificar se e um tipo equivalente

	if (data_type_w = 'CHAR') and (r_C00_w.ie_tipo_atributo = 'VARCHAR2') then
		data_type_w := r_C00_w.ie_tipo_atributo;
	end if;
	
	-- Verificar se tem o campo na view

	if (coalesce(data_type_w::text, '') = '') then
		CALL pls_cargas_pck.gravar_val_view('N');
		-- O campo #@NM_CAMPO_W#@ nao foi criado na geracao da VIEW, favor verificar o select informado na regra do lote.

		CALL wheb_mensagem_pck.exibir_mensagem_abort(682666,'NM_CAMPO_W=' || r_C00_w.nm_atributo);
	end if;
	
	-- Comparacao do Tipo do Campo

	if (data_type_w != r_C00_w.ie_tipo_atributo) and (r_C00_w.ie_tipo_atributo IS NOT NULL AND r_C00_w.ie_tipo_atributo::text <> '') then
		CALL pls_cargas_pck.gravar_val_view('N');
		-- O tipo do campo #@NM_CAMPO_W#@ nao corresponde com os requisitos da regra do lote, favor verificar.

		-- Tipo necessario: #@IE_TIPO_W#@

		-- Tipo na view: #@IE_TIPO_V#@

		CALL wheb_mensagem_pck.exibir_mensagem_abort(682667,	'NM_CAMPO_W=' || r_C00_w.nm_atributo ||';'||
								'IE_TIPO_W=' || r_C00_w.ie_tipo_atributo ||';'||
								'IE_TIPO_V=' || data_type_w);
	end if;
	
	-- Comparacao do Tamanho do Campo

	if (r_C00_w.qt_tamanho IS NOT NULL AND r_C00_w.qt_tamanho::text <> '') then
		
		ds_sql_w := ' select length(max('||r_C00_w.nm_atributo||')) qt from '||nm_view_carga_w;
		EXECUTE to_char(ds_sql_w) into STRICT data_length_w;
	
		if (data_length_w > r_C00_w.qt_tamanho) then
			CALL pls_cargas_pck.gravar_val_view('N');
			-- O tamanho do campo #@NM_CAMPO_W#@ nao corresponde com os requisitos da regra do lote, favor verificar.

			-- Tamanho necessario: #@NR_TAM_W#@

			-- Tamanho na view: #@NR_TAM_V#@

			CALL wheb_mensagem_pck.exibir_mensagem_abort(682668,	'NM_CAMPO_W=' || r_C00_w.nm_atributo ||';'||
									'NR_TAM_W=' || r_C00_w.qt_tamanho ||';'||
									'NR_TAM_V=' || data_length_w);
		end if;
	end if;
	
	if (r_C00_w.nm_atributo not in ('IE_TIPO_REGISTRO','CD_CHAVE','CD_CHAVE_SUP')) then
		-- Validar o conteudo dos campos da VIEW

		ds_sql_w := pls_cargas_pck.obter_select_val_conteudo( r_C00_w.nm_atributo, r_C00_w.ie_componente, r_C00_w.cd_exp_valores, r_C00_w.ds_valores, r_C00_w.cd_dominio);
		if (ds_sql_w IS NOT NULL AND ds_sql_w::text <> '') then
		
			if (r_C00_w.ie_tipo_carga = 'CTA') then -- Tipo de cargas de Contas medicas
				if (r_C00_w.nm_tabela = 'PLS_INT_CTA_PROC') then
					ds_sql_w := ds_sql_w || ' and IE_TIPO_REGISTRO = ''3'''; -- Procedimento conta
				elsif (r_C00_w.nm_tabela = 'PLS_INT_CTA_MAT') then
					ds_sql_w := ds_sql_w || ' and IE_TIPO_REGISTRO = ''4'''; -- Material conta
				end if;
			end if;
		
			begin
			EXECUTE to_char(ds_sql_w) into STRICT qt_reg_w;
			exception
			when others then
				CALL pls_cargas_pck.gravar_val_view('N');
				-- #@DS_ERRO_W#@

				CALL wheb_mensagem_pck.exibir_mensagem_abort(685714,	'DS_ERRO_W=' || ds_sql_w);
			end;
			
			-- Caso tenha divergencia

			if (qt_reg_w > 0) then
				CALL pls_cargas_pck.gravar_val_view('N');
				-- Existem valores no campo #@NM_CAMPO_W#@ que nao correspondem com os requisitos da regra do lote, favor verificar.

				CALL wheb_mensagem_pck.exibir_mensagem_abort(685713,	'NM_CAMPO_W=' || r_C00_w.nm_atributo);
			end if;
		end if;
	end if;
	
end loop;

CALL pls_cargas_pck.gravar_val_view('S');

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cargas_pck.validar_view () FROM PUBLIC;
