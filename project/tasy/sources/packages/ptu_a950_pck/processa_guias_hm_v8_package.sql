-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ptu_a950_pck.processa_guias_hm_v8 ( nr_seq_arq_xml_p pls_imp_arq_A950.nr_sequencia%type, ds_guias_hm_p pls_imp_arq_A950.ds_xml%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

_ora2pg_r RECORD;
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Extrai as guias HM, e joga elas em alguns vetores, para dai descarregar no banco
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [ ] Portal [ ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------
Pontos de atencao:

Alteracoes:
-------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
i				integer;
nr_guia_atual_w			bigint := 1;
nr_total_guias_hm_w		bigint;
ds_guia_hm_w			pls_imp_arq_A950.ds_xml%type;

ds_honorarioMedico_w		pls_imp_arq_A950.ds_xml%type;
ds_porteAnestesico_w		pls_imp_arq_A950.ds_xml%type;
ds_auxiliares_w			pls_imp_arq_A950.ds_xml%type;
ds_classificacao_w		pls_imp_arq_A950.ds_xml%type;
ds_tiss_w			pls_imp_arq_A950.ds_xml%type;

tb_qt_filme_amb_w		dbms_sql.number_table;
tb_nr_auxiliares_amb_w		dbms_sql.number_table;
tb_nr_porte_anest_amb_w		dbms_sql.number_table;
tb_ie_inc_rol_w			dbms_sql.number_table;
tb_cd_amb_w			dbms_sql.number_table;
tb_qt_ut_amb_w			dbms_sql.number_table;
tb_ds_porte_rol_w		dbms_sql.varchar2_table;
tb_ie_grupos_planilha_w		dbms_sql.number_table;
tb_ie_classificacao_w		dbms_sql.number_table;
tb_qt_uco_w			dbms_sql.number_table;
tb_cd_procedimento_uni_w	dbms_sql.number_table;
tb_nr_porte_anest_w		dbms_sql.number_table;
tb_nr_auxiliar_w		dbms_sql.number_table;
tb_qt_filme_w			dbms_sql.number_table;
tb_ie_quantidade_w		dbms_sql.number_table;
tb_ds_doc_racio_w		dbms_sql.varchar2_table;
tb_nr_prazo_exec_w		dbms_sql.number_table;
tb_nr_prazo_origem_w		dbms_sql.number_table;
tb_nr_prazo_total_w		dbms_sql.number_table;
tb_ds_item_rol_w		dbms_sql.varchar2_table;
tb_ds_amb_rol_w			dbms_sql.varchar2_table;
tiss_tp_tabela_w		dbms_sql.varchar2_table;
tiss_codigo_w			dbms_sql.varchar2_table;


BEGIN

nr_total_guias_hm_w := ptu_a950_pck.obter_numero_tag(ds_guias_hm_p, 'hm');

-- so processa se tiver guias
if (nr_total_guias_hm_w > 0) then

	i := 0;
	-- enquanto ainda nao chegar na ultima guia
	while(nr_guia_atual_w <= nr_total_guias_hm_w) loop
	
		-- pega a guia atual
		ds_guia_hm_w := ptu_a950_pck.obter_conteudo_tag(ds_guias_hm_p, 'hm', nr_guia_atual_w, nr_guia_atual_w, 'N');
		
		-- extrai os campos
		-- subgrupo honorarioMedico
		ds_honorarioMedico_w := ptu_a950_pck.obter_conteudo_tag(ds_guia_hm_w, 'honorarioMedico', 1, 1, 'N');
			tb_cd_procedimento_uni_w(i)	:= ptu_a950_pck.converte_numero(ptu_a950_pck.obter_conteudo_tag(ds_honorarioMedico_w, 'codigoRol', 1, 1, 'N'));
			tb_cd_amb_w(i)			:= ptu_a950_pck.converte_numero(ptu_a950_pck.obter_conteudo_tag(ds_honorarioMedico_w, 'codigoAmb', 1, 1, 'N'));
			tb_qt_uco_w(i)			:= ptu_a950_pck.converte_numero(ptu_a950_pck.obter_conteudo_tag(ds_honorarioMedico_w, 'unidadeCustoOperacional', 1, 1, 'N'));
			tb_ie_inc_rol_w(i)		:= ptu_a950_pck.converte_numero(ptu_a950_pck.obter_conteudo_tag(ds_honorarioMedico_w, 'qtIncidenciaRol', 1, 1, 'N'));
			tb_qt_ut_amb_w(i)		:= ptu_a950_pck.converte_numero(ptu_a950_pck.obter_conteudo_tag(ds_honorarioMedico_w, 'qtUnidadeTopograficaAmb', 1, 1, 'N'));
			tb_ds_item_rol_w(i)		:= substr(ptu_a950_pck.obter_conteudo_tag(ds_honorarioMedico_w, 'descricaoRol', 1, 1, 'N'), 1, 255);
			tb_ds_amb_rol_w(i)		:= substr(ptu_a950_pck.obter_conteudo_tag(ds_honorarioMedico_w, 'descricaoAmb', 1, 1, 'N'), 1, 255);
			
			-- tiss
			ds_tiss_w := ptu_a950_pck.obter_conteudo_tag(ds_honorarioMedico_w, 'tiss', 1, 1, 'N');
				tiss_tp_tabela_w(i)	:= substr(ptu_a950_pck.obter_conteudo_tag(ds_tiss_w, 'tissTipoTabela', 1, 1, 'N'), 1, 255);
				tiss_codigo_w(i)	:= substr(ptu_a950_pck.obter_conteudo_tag(ds_tiss_w, 'tissCodigo', 1, 1, 'N'), 1, 255);

		
		
		tb_ds_porte_rol_w(i)			:=  ptu_a950_pck.obter_conteudo_tag(ds_guia_hm_w, 'porte', 1, 1, 'N');
		-- subgrupo porteAnestesico
		ds_porteAnestesico_w := ptu_a950_pck.obter_conteudo_tag(ds_guia_hm_w, 'porteAnestesico', 1, 1, 'N');
			tb_nr_porte_anest_w(i)		:= ptu_a950_pck.converte_numero(ptu_a950_pck.obter_conteudo_tag(ds_porteAnestesico_w, 'porte', 1, 1, 'N'));
			tb_nr_porte_anest_amb_w(i)	:= ptu_a950_pck.converte_numero(ptu_a950_pck.obter_conteudo_tag(ds_porteAnestesico_w, 'porteAnestesicoAmb', 1, 1, 'N'));
		
		-- subgrupo auxiliares
		ds_auxiliares_w := ptu_a950_pck.obter_conteudo_tag(ds_guia_hm_w, 'auxiliares', 1, 1, 'N');
			tb_nr_auxiliar_w(i)		:= ptu_a950_pck.converte_numero(ptu_a950_pck.obter_conteudo_tag(ds_auxiliares_w, 'numeroAuxiliaresRol', 1, 1, 'N'));
			tb_nr_auxiliares_amb_w(i)	:= ptu_a950_pck.converte_numero(ptu_a950_pck.obter_conteudo_tag(ds_auxiliares_w, 'numeroAuxiliaresAmb', 1, 1, 'N'));
			
		-- subgrupo classificacao
		ds_classificacao_w := ptu_a950_pck.obter_conteudo_tag(ds_classificacao_w, 'classificacao', 1, 2, 'N');
			tb_ie_classificacao_w(i)	:= ptu_a950_pck.converte_numero(ptu_a950_pck.obter_conteudo_tag(ds_classificacao_w, 'classificacao', 1, 1, 'N'));
			tb_ie_quantidade_w(i)		:= ptu_a950_pck.converte_numero(ptu_a950_pck.obter_conteudo_tag(ds_classificacao_w, 'quantidade', 1, 1, 'N'));
			tb_ds_doc_racio_w(i)		:= substr(ptu_a950_pck.obter_conteudo_tag(ds_classificacao_w, 'docRacionalizacao', 1, 1, 'N'), 1, 250);
			tb_nr_prazo_exec_w(i)		:= ptu_a950_pck.converte_numero(ptu_a950_pck.obter_conteudo_tag(ds_classificacao_w, 'prazoExecutora', 1, 1, 'N'));
			tb_nr_prazo_origem_w(i)		:= ptu_a950_pck.converte_numero(ptu_a950_pck.obter_conteudo_tag(ds_classificacao_w, 'prazoOrigem', 1, 1, 'N'));
			tb_nr_prazo_total_w(i)		:= ptu_a950_pck.converte_numero(ptu_a950_pck.obter_conteudo_tag(ds_classificacao_w, 'prazoTotal', 1, 1, 'N'));
			
		tb_ie_grupos_planilha_w(i)		:= ptu_a950_pck.converte_numero(ptu_a950_pck.obter_conteudo_tag(ds_guia_hm_w, 'gruposPlanilha', 1, 1, 'N'));

		

		tb_qt_filme_w(i)			:= null;
		tb_qt_filme_amb_w(i)			:= null;
		
		
		-- se carregou ate o limite, manda para o banco
		if (i >= pls_util_pck.qt_registro_transacao_w) then
		
			SELECT * FROM ptu_a950_pck.insere_guia_hm_v8(	nr_seq_arq_xml_p, nm_usuario_p, tb_qt_filme_amb_w, tb_nr_auxiliares_amb_w, tb_nr_porte_anest_amb_w, tb_ie_inc_rol_w, tb_cd_amb_w, tb_qt_ut_amb_w, tb_ds_porte_rol_w, tb_ie_grupos_planilha_w, tb_ie_classificacao_w, tb_qt_uco_w, tb_cd_procedimento_uni_w, tb_nr_porte_anest_w, tb_nr_auxiliar_w, tb_qt_filme_w, tb_ie_quantidade_w, tb_ds_doc_racio_w, tb_nr_prazo_exec_w, tb_nr_prazo_origem_w, tb_nr_prazo_total_w, tb_ds_item_rol_w, tb_ds_amb_rol_w, tiss_tp_tabela_w, tiss_codigo_w) INTO STRICT _ora2pg_r;
 tb_qt_filme_amb_w := _ora2pg_r.qt_filme_amb_p; tb_nr_auxiliares_amb_w := _ora2pg_r.nr_auxiliares_amb_p; tb_nr_porte_anest_amb_w := _ora2pg_r.nr_porte_anest_amb_p; tb_ie_inc_rol_w := _ora2pg_r.ie_inc_rol_p; tb_cd_amb_w := _ora2pg_r.cd_amb_p; tb_qt_ut_amb_w := _ora2pg_r.qt_ut_amb_p; tb_ds_porte_rol_w := _ora2pg_r.ds_porte_rol_p; tb_ie_grupos_planilha_w := _ora2pg_r.ie_grupos_planilha_p; tb_ie_classificacao_w := _ora2pg_r.ie_classificacao_p; tb_qt_uco_w := _ora2pg_r.qt_uco_p; tb_cd_procedimento_uni_w := _ora2pg_r.cd_procedimento_uni_p; tb_nr_porte_anest_w := _ora2pg_r.nr_porte_anest_p; tb_nr_auxiliar_w := _ora2pg_r.nr_auxiliar_p; tb_qt_filme_w := _ora2pg_r.qt_filme_p; tb_ie_quantidade_w := _ora2pg_r.ie_quantidade_p; tb_ds_doc_racio_w := _ora2pg_r.ds_doc_racio_p; tb_nr_prazo_exec_w := _ora2pg_r.nr_prazo_exec_p; tb_nr_prazo_origem_w := _ora2pg_r.nr_prazo_origem_p; tb_nr_prazo_total_w := _ora2pg_r.nr_prazo_total_p; tb_ds_item_rol_w := _ora2pg_r.ds_item_rol_p; tb_ds_amb_rol_w := _ora2pg_r.ds_amb_rol_p; tiss_tp_tabela_w := _ora2pg_r.tiss_tp_tabela_p; tiss_codigo_w := _ora2pg_r.tiss_codigo_p;
			i := 0;
		else
			i := i + 1;
		end if;
		
		nr_guia_atual_w := nr_guia_atual_w + 1;
	
	end loop; -- fim buscou guias
	
	
	-- envia para o banco, caso tenha "sobras"
	SELECT * FROM ptu_a950_pck.insere_guia_hm_v8(	nr_seq_arq_xml_p, nm_usuario_p, tb_qt_filme_amb_w, tb_nr_auxiliares_amb_w, tb_nr_porte_anest_amb_w, tb_ie_inc_rol_w, tb_cd_amb_w, tb_qt_ut_amb_w, tb_ds_porte_rol_w, tb_ie_grupos_planilha_w, tb_ie_classificacao_w, tb_qt_uco_w, tb_cd_procedimento_uni_w, tb_nr_porte_anest_w, tb_nr_auxiliar_w, tb_qt_filme_w, tb_ie_quantidade_w, tb_ds_doc_racio_w, tb_nr_prazo_exec_w, tb_nr_prazo_origem_w, tb_nr_prazo_total_w, tb_ds_item_rol_w, tb_ds_amb_rol_w, tiss_tp_tabela_w, tiss_codigo_w) INTO STRICT _ora2pg_r;
 tb_qt_filme_amb_w := _ora2pg_r.qt_filme_amb_p; tb_nr_auxiliares_amb_w := _ora2pg_r.nr_auxiliares_amb_p; tb_nr_porte_anest_amb_w := _ora2pg_r.nr_porte_anest_amb_p; tb_ie_inc_rol_w := _ora2pg_r.ie_inc_rol_p; tb_cd_amb_w := _ora2pg_r.cd_amb_p; tb_qt_ut_amb_w := _ora2pg_r.qt_ut_amb_p; tb_ds_porte_rol_w := _ora2pg_r.ds_porte_rol_p; tb_ie_grupos_planilha_w := _ora2pg_r.ie_grupos_planilha_p; tb_ie_classificacao_w := _ora2pg_r.ie_classificacao_p; tb_qt_uco_w := _ora2pg_r.qt_uco_p; tb_cd_procedimento_uni_w := _ora2pg_r.cd_procedimento_uni_p; tb_nr_porte_anest_w := _ora2pg_r.nr_porte_anest_p; tb_nr_auxiliar_w := _ora2pg_r.nr_auxiliar_p; tb_qt_filme_w := _ora2pg_r.qt_filme_p; tb_ie_quantidade_w := _ora2pg_r.ie_quantidade_p; tb_ds_doc_racio_w := _ora2pg_r.ds_doc_racio_p; tb_nr_prazo_exec_w := _ora2pg_r.nr_prazo_exec_p; tb_nr_prazo_origem_w := _ora2pg_r.nr_prazo_origem_p; tb_nr_prazo_total_w := _ora2pg_r.nr_prazo_total_p; tb_ds_item_rol_w := _ora2pg_r.ds_item_rol_p; tb_ds_amb_rol_w := _ora2pg_r.ds_amb_rol_p; tiss_tp_tabela_w := _ora2pg_r.tiss_tp_tabela_p; tiss_codigo_w := _ora2pg_r.tiss_codigo_p;
	
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_a950_pck.processa_guias_hm_v8 ( nr_seq_arq_xml_p pls_imp_arq_A950.nr_sequencia%type, ds_guias_hm_p pls_imp_arq_A950.ds_xml%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
