-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE vipe_gerar_horarios_pck.vipe_obter_medic_de ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_hor_realizados_p text, ie_exibir_hor_suspensos_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_lib_pend_rep_p text, ie_exibir_suspensos_p text, ie_agrupar_acm_sn_p text, ie_agrupar_dose_esp_p text, ie_diluicao_acm_sn_gestao_p text, cd_setor_paciente_p bigint) AS $body$
DECLARE


	nr_seq_wadep_w		bigint;
	nr_prescricao_w		bigint;
	nr_seq_material_w	integer;
	cd_material_w		integer;
	ds_material_w		varchar(255);
	ie_acm_sn_w		varchar(1);
	cd_intervalo_w		varchar(7);
	qt_dose_w		double precision;
	qt_total_dias_lib_w	integer;
	nr_agrupamento_w	double precision;
	ds_prescricao_w		varchar(100);
	ds_sep_bv_w		varchar(50);
	ds_dil_obs_w		varchar(2000);
	ds_comando_update_w	varchar(2000);
	ie_status_w		varchar(1);
	current_setting('vipe_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15)	varchar(1);
	ie_composto_w		varchar(1);
	ie_administrar_w	varchar(1);
	cd_unid_med_qtde_w	varchar(30);
	ie_via_administracao_w	varchar(50);
	ds_interv_prescr_w	varchar(2000);
	ds_dose_diferenciada_w	varchar(2000);
	current_setting('vipe_gerar_horarios_pck.nr_prescricoes_w')::varchar(4000)	varchar(2000);
	dt_fim_w		timestamp;
	ie_observacao_w		varchar(1);
	ie_agrupar_w		varchar(1);
	qt_existe_w		bigint;

	c01 CURSOR FOR
	SELECT	CASE WHEN ie_agrupar='N' THEN  nr_prescricao  ELSE CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_prescricao,nr_seq_material,ie_agrupar_acm_sn_p)='N' THEN  nr_prescricao END  END  END ,
		CASE WHEN ie_agrupar='N' THEN  nr_seq_material  ELSE CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_prescricao,nr_seq_material,ie_agrupar_acm_sn_p)='N' THEN  nr_seq_material END  END  END ,
		cd_material,
		ds_material,
		ie_acm_sn,
		cd_intervalo,
		qt_dose,
		nr_agrupamento,
		ds_prescricao,
		CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_prescricao,nr_seq_material,ie_agrupar_acm_sn_p)='N' THEN  ds_dil_obs  ELSE null END   ELSE null END ,
		CASE WHEN ie_suspenso='S' THEN  ie_suspenso  ELSE null END  ie_status,
		cd_unidade_medida_dose,
		ie_via_aplicacao,
		ds_intervalo,
		qt_total_dias_lib,
		ie_composto,
		ds_dose_diferenciada,
		ie_agrupar,
		ie_administrar
	from	(
		SELECT	a.nr_prescricao,
			c.nr_seq_material,
			c.cd_material,
			substr(CASE WHEN getIeGenerico='N' THEN VIPE_obter_se_medic_composto(a.nr_prescricao, x.nr_sequencia, x.nr_agrupamento, 'D')  ELSE coalesce(obter_desc_material(y.CD_MATERIAL_GENERICO),VIPE_obter_se_medic_composto(a.nr_prescricao, x.nr_sequencia, x.nr_agrupamento, 'D')) END ,1,100) ds_material,

			obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn,
			x.cd_intervalo,
			x.QT_DOSE_ESPECIAL qt_dose,
			CASE WHEN obter_se_agrupa_composto(a.nr_prescricao,c.nr_seq_material,x.nr_agrupamento,c.cd_material)='S' THEN x.nr_agrupamento  ELSE 0 END  nr_agrupamento,
			'DE ' || to_char(x.qt_dose_especial) || ' ' || x.cd_unidade_medida_dose ds_prescricao,
			CASE WHEN obter_se_acm_sn(x.ie_acm,x.ie_se_necessario)='S' THEN substr(adep_obter_inf_dil_obs(a.nr_prescricao,c.nr_seq_material),1,2000)  ELSE null END  ds_dil_obs,
			coalesce(x.ie_suspenso,'N') ie_suspenso,
			x.cd_unidade_medida_dose,
			x.ie_via_aplicacao,
			'Dose especial' ds_intervalo,
			coalesce(x.qt_total_dias_lib,0) qt_total_dias_lib,
			VIPE_obter_se_medic_composto(a.nr_prescricao, x.nr_sequencia, x.nr_agrupamento, 'P') ie_composto,
			x.ds_dose_diferenciada,
			VIPE_obter_se_agrupa_item(get_ie_agrupar_itens_iguais, 'M', a.nr_atendimento, c.nr_sequencia, c.nr_prescricao, x.qt_dose, x.cd_intervalo, c.dt_horario, c.cd_material, x.nr_sequencia, a.dt_inicio_prescr, a.dt_validade_prescr) ie_agrupar,
			x.ie_administrar
		from	material y,
			prescr_material x,
			prescr_mat_hor c,
			prescr_medica a
		where	y.cd_material = x.cd_material
		and	x.nr_prescricao = c.nr_prescricao
		and	x.nr_sequencia = c.nr_seq_material
		and	x.nr_prescricao = a.nr_prescricao
		and	c.nr_prescricao = a.nr_prescricao
		and	obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
		and	a.nr_atendimento = nr_atendimento_p
		and	Obter_se_setor_vipe(a.cd_setor_atendimento) = 'S'
		and	a.dt_validade_prescr between dt_validade_limite_p and dt_fim_w
		and	obter_se_prescr_lib_vipe(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_p, c.dt_lib_horario) = 'S'
		and	x.ie_agrupador = 1
		and	((ie_exibir_suspensos_p = 'S') or (coalesce(a.dt_suspensao::text, '') = ''))
		and	obter_se_gerar_item_vipe('M',a.nr_prescricao,c.nr_seq_material,x.nr_agrupamento) = 'S'
		and	((coalesce(c.ie_situacao,'A') = 'A') or (coalesce(x.ie_administrar,'S') = 'N'))
		and	coalesce(c.ie_adep,'S') = 'S'
		and	c.ie_agrupador = 1
		and	coalesce(x.ie_dose_espec_agora,'N') = 'S'
		and	(((obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) = 'N') and (c.dt_horario between dt_inicial_horarios_p and dt_final_horarios_p)) or
			 ((get_ie_considera_horario = 'S') and (obter_se_prescr_vig_adep(a.dt_inicio_prescr,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S')) or
			 ((obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) = 'S') and (obter_se_prescr_vig_adep(a.dt_inicio_prescr,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S')))
		and	((ie_exibir_hor_realizados_p = 'S') or (coalesce(c.dt_fim_horario::text, '') = ''))
		and	((ie_exibir_hor_suspensos_p = 'S') or (coalesce(c.dt_suspensao::text, '') = ''))
		and	((ie_regra_inclusao_p = 'S') or
			 ((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao(	'MED',
																			cd_estabelecimento_p,
																			cd_setor_usuario_p,
																			cd_perfil_p,
																			c.cd_material,
																			null,
																			null,
																			null,
																			a.cd_setor_atendimento,
																			null,
																			null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e n√£o haviam passado nada
																			null) = 'S')))	-- nr_seq_exame_p
		and	((ie_data_lib_prescr_p = 'M') or (Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'))
		group by
			a.nr_prescricao,
			c.nr_seq_material,
			c.cd_material,
			VIPE_obter_se_medic_composto(a.nr_prescricao, x.nr_sequencia, x.nr_agrupamento, 'D'),
			x.ie_acm,
			VIPE_obter_se_agrupa_item(get_ie_agrupar_itens_iguais, 'M', a.nr_atendimento, c.nr_sequencia, c.nr_prescricao, x.qt_dose, x.cd_intervalo, c.dt_horario, c.cd_material, x.nr_sequencia, a.dt_inicio_prescr, a.dt_validade_prescr),
			coalesce(x.qt_total_dias_lib,0),
			x.ie_se_necessario,
			x.cd_intervalo,
			VIPE_obter_se_medic_composto(a.nr_prescricao, x.nr_sequencia, x.nr_agrupamento, 'P'),
			x.QT_DOSE_ESPECIAL,
			'DE ' || to_char(x.qt_dose_especial) || ' ' || x.cd_unidade_medida_dose,
			x.nr_agrupamento,
			x.ie_suspenso,
			x.cd_unidade_medida_dose,
			x.ie_via_aplicacao,
			x.ds_dose_diferenciada,
			x.ie_administrar,
			obter_desc_material(y.CD_MATERIAL_GENERICO)
			--decode(nvl(x.ds_observacao,x.ds_observacao_enf),null,null,'S')
		) alias72
	group by
		CASE WHEN ie_agrupar='N' THEN  nr_prescricao  ELSE CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_prescricao,nr_seq_material,ie_agrupar_acm_sn_p)='N' THEN  nr_prescricao END  END  END ,
		CASE WHEN ie_agrupar='N' THEN  nr_seq_material  ELSE CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_prescricao,nr_seq_material,ie_agrupar_acm_sn_p)='N' THEN  nr_seq_material END  END  END ,
		cd_material,
		ds_material,
		ie_acm_sn,
		cd_intervalo,
		qt_dose,
		nr_agrupamento,
		ds_prescricao,
		CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_prescricao,nr_seq_material,ie_agrupar_acm_sn_p)='N' THEN  ds_dil_obs  ELSE null END   ELSE null END ,
		CASE WHEN ie_suspenso='S' THEN  ie_suspenso  ELSE null END ,
		cd_unidade_medida_dose,
		ie_via_aplicacao,
		ie_composto,
		qt_total_dias_lib,
		ds_intervalo,
		ds_dose_diferenciada,
		--decode(get_ie_mostrar_obs,'S',ie_observacao,null),
		ie_agrupar,
		ie_administrar;

	c02 CURSOR FOR
	SELECT	nr_prescricao,
		nr_seq_material,
		cd_material,
		ds_material,
		ie_acm_sn,
		cd_intervalo,
		qt_dose,
		nr_agrupamento,
		ds_prescricao,
		ds_dil_obs,
		CASE WHEN ie_suspenso='N' THEN null  ELSE ie_suspenso END ,
		ie_lib_pend_rep,
		cd_unidade_medida_dose,
		ie_via_aplicacao,
		ds_intervalo,
		qt_total_dias_lib,
		ie_composto,
		ds_dose_diferenciada,
		CASE WHEN get_ie_mostrar_obs='S' THEN ie_observacao  ELSE null END  ie_observacao,
		ie_administrar
	from	(
		SELECT	a.nr_prescricao,
			x.nr_sequencia nr_seq_material,
			x.cd_material,
			substr(CASE WHEN getIeGenerico='N' THEN VIPE_obter_se_medic_composto(a.nr_prescricao, x.nr_sequencia, x.nr_agrupamento, 'D')  ELSE coalesce(obter_desc_material(y.CD_MATERIAL_GENERICO),VIPE_obter_se_medic_composto(a.nr_prescricao, x.nr_sequencia, x.nr_agrupamento, 'D')) END ,1,100) ds_material,

			obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn,
			x.cd_intervalo,
			x.QT_DOSE_ESPECIAL qt_dose,
			CASE WHEN obter_se_agrupa_composto(a.nr_prescricao,x.nr_sequencia,x.nr_agrupamento,x.cd_material)='S' THEN x.nr_agrupamento  ELSE 0 END  nr_agrupamento,
			'DE ' || to_char(x.qt_dose_especial) || ' ' || x.cd_unidade_medida_dose ds_prescricao,
			CASE WHEN obter_se_acm_sn(x.ie_acm,x.ie_se_necessario)='S' THEN substr(adep_obter_inf_dil_obs(a.nr_prescricao,x.nr_sequencia),1,2000)  ELSE null END  ds_dil_obs,
			coalesce(x.ie_suspenso,'N') ie_suspenso,
			substr(adep_obter_lib_pend_rep_gestao(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia),1,1) ie_lib_pend_rep,
			x.cd_unidade_medida_dose,
			x.ie_via_aplicacao,
			'Dose especial' ds_intervalo,
			coalesce(x.qt_total_dias_lib,0) qt_total_dias_lib,
			VIPE_obter_se_medic_composto(a.nr_prescricao, x.nr_sequencia, x.nr_agrupamento, 'P') ie_composto,
			x.ds_dose_diferenciada,
			CASE WHEN coalesce(coalesce(x.ds_observacao,x.ds_observacao_enf)::text, '') = '' THEN null  ELSE 'S' END  ie_observacao,
			x.ie_administrar
		from	material y,
			prescr_material x,
			prescr_medica a
		where	y.cd_material = x.cd_material
		and	x.nr_prescricao = a.nr_prescricao
		and	obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
		and	a.nr_atendimento = nr_atendimento_p
		and	a.dt_validade_prescr between dt_validade_limite_p and dt_fim_w
		and	x.ie_agrupador = 1
		and	Obter_se_setor_vipe(a.cd_setor_atendimento) = 'S'
		and	((ie_exibir_suspensos_p = 'S') or (coalesce(a.dt_suspensao::text, '') = ''))
		and	obter_se_gerar_item_vipe('M',a.nr_prescricao,x.nr_sequencia,x.nr_agrupamento) = 'S'
		and	coalesce(x.ie_dose_espec_agora,'N') = 'S'
		and	obter_se_prescr_vig_adep(a.dt_inicio_prescr,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S'
		and	((ie_regra_inclusao_p = 'S') or
			 ((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao(	'MED',
																			cd_estabelecimento_p,
																			cd_setor_usuario_p,
																			cd_perfil_p,
																			x.cd_material,
																			null,
																			null,
																			null,
																			a.cd_setor_atendimento,
																			null,
																			null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e n√£o haviam passado nada
																			null) = 'S')))	-- nr_seq_exame_p
		and	not exists (
					select	1
					from	prescr_mat_hor c
					where	c.cd_material = y.cd_material
					and	c.nr_prescricao = x.nr_prescricao
					and	c.nr_seq_material = x.nr_sequencia
					and	c.ie_agrupador = 1
					and	x.ie_agrupador = 1
					and	c.nr_prescricao = a.nr_prescricao
					and	((ie_data_lib_prescr_p = 'M') or (Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S')))
		and	coalesce(x.dt_suspensao::text, '') = ''
		group by
			a.nr_prescricao,
			x.nr_sequencia,
			x.cd_material,
			VIPE_obter_se_medic_composto(a.nr_prescricao, x.nr_sequencia, x.nr_agrupamento, 'D'),
			x.ie_acm,
			x.ie_se_necessario,
			coalesce(x.qt_total_dias_lib,0),
			x.cd_intervalo,
			x.QT_DOSE_ESPECIAL,
			x.nr_agrupamento,
			'DE ' || to_char(x.qt_dose_especial) || ' ' || x.cd_unidade_medida_dose,
			VIPE_obter_se_medic_composto(a.nr_prescricao, x.nr_sequencia, x.nr_agrupamento, 'P'),
			x.ie_suspenso,
			a.dt_liberacao_medico,
			a.dt_liberacao,
			a.dt_liberacao_farmacia,
			x.cd_unidade_medida_dose,
			x.ie_via_aplicacao,
			x.ds_dose_diferenciada,
			CASE WHEN coalesce(coalesce(x.ds_observacao,x.ds_observacao_enf)::text, '') = '' THEN null  ELSE 'S' END ,
			x.ie_administrar,
			obter_desc_material(y.CD_MATERIAL_GENERICO)
		) alias47
	group by
		nr_prescricao,
		nr_seq_material,
		cd_material,
		ds_material,
		ie_acm_sn,
		cd_intervalo,
		qt_dose,
		nr_agrupamento,
		ds_prescricao,
		qt_total_dias_lib,
		ds_dil_obs,
		ie_composto,
		CASE WHEN ie_suspenso='N' THEN null  ELSE ie_suspenso END ,
		ie_lib_pend_rep,
		cd_unidade_medida_dose,
		ie_via_aplicacao,
		ds_intervalo,
		ds_dose_diferenciada,
		CASE WHEN get_ie_mostrar_obs='S' THEN ie_observacao  ELSE null END ,
		ie_administrar;

	/*OS 230458 - Cursor criado para juntar o nr_prescricoes pois ele n√£o passa no sincronizar quando n√£o possuir hor√°rios entre os filtros (quando o item estiver sendo apresentado pela validade da prescri√ß√£o.)*/

	c03 CURSOR FOR
	SELECT	a.nr_prescricao,
		c.nr_seq_material,
		c.cd_material,
		substr(CASE WHEN getIeGenerico='N' THEN VIPE_obter_se_medic_composto(a.nr_prescricao, x.nr_sequencia, x.nr_agrupamento, 'D')  ELSE coalesce(obter_desc_material(y.CD_MATERIAL_GENERICO),VIPE_obter_se_medic_composto(a.nr_prescricao, x.nr_sequencia, x.nr_agrupamento, 'D')) END ,1,100) ds_material,

		obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn,
		x.cd_intervalo,
		x.QT_DOSE_ESPECIAL qt_dose,
		CASE WHEN obter_se_agrupa_composto(a.nr_prescricao,c.nr_seq_material,x.nr_agrupamento,c.cd_material)='S' THEN x.nr_agrupamento  ELSE 0 END  nr_agrupamento,
		'DE ' || to_char(x.qt_dose_especial) || ' ' || x.cd_unidade_medida_dose ds_prescricao,
		coalesce(x.ie_suspenso,'N') ie_suspenso,
		substr(adep_obter_inf_dil_obs(a.nr_prescricao,c.nr_seq_material),1,2000) ds_dil_obs,
		CASE WHEN get_ie_mostrar_obs='S' THEN CASE WHEN coalesce(coalesce(x.ds_observacao,x.ds_observacao_enf)::text, '') = '' THEN null  ELSE 'S' END   ELSE null END  ie_observacao,
		x.ie_administrar
	from	material y,
		prescr_material x,
		prescr_mat_hor c,
		prescr_medica a
	where	y.cd_material = x.cd_material
	and	x.nr_prescricao = c.nr_prescricao
	and	x.nr_sequencia = c.nr_seq_material
	and	x.nr_prescricao = a.nr_prescricao
	and	c.nr_prescricao = a.nr_prescricao
	and	obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
	and	a.nr_atendimento = nr_atendimento_p
	and	a.dt_validade_prescr between dt_validade_limite_p and dt_fim_w
	and	obter_se_prescr_lib_vipe(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_p, c.dt_lib_horario) = 'S'
	and	x.ie_agrupador = 1
	and	Obter_se_setor_vipe(a.cd_setor_atendimento) = 'S'
	and	((ie_exibir_suspensos_p = 'S') or (coalesce(a.dt_suspensao::text, '') = ''))
	and	obter_se_gerar_item_vipe('M',a.nr_prescricao,c.nr_seq_material,x.nr_agrupamento) = 'S'
	and	((coalesce(c.ie_situacao,'A') = 'A') or (coalesce(x.ie_administrar,'S') = 'N'))
	and	coalesce(c.ie_adep,'S') = 'S'
	and	c.ie_agrupador = 1
	and	coalesce(x.ie_dose_espec_agora,'N') = 'S'
	and	(((obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) = 'N') and (c.dt_horario between dt_inicial_horarios_p and dt_final_horarios_p)) or
		 ((get_ie_considera_horario = 'S') and (obter_se_prescr_vig_adep(a.dt_inicio_prescr,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S')) or
		 ((obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) = 'S') and (obter_se_prescr_vig_adep(a.dt_inicio_prescr,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S')))
	and	((ie_exibir_hor_realizados_p = 'S') or (coalesce(c.dt_fim_horario::text, '') = ''))
	and	((ie_exibir_hor_suspensos_p = 'S') or (coalesce(c.dt_suspensao::text, '') = ''))
	and	((ie_regra_inclusao_p = 'S') or
		 ((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao(	'MED',
																		cd_estabelecimento_p,
																		cd_setor_usuario_p,
																		cd_perfil_p,
																		c.cd_material,
																		null,
																		null,
																		null,
																		a.cd_setor_atendimento,
																		null,
																		null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e n√£o haviam passado nada
																		null) = 'S')))	-- nr_seq_exame_p
	and	((ie_data_lib_prescr_p = 'M') or (Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'))
	and	c.cd_material		= cd_material_w
	and	coalesce(x.cd_intervalo,0) 	= coalesce(cd_intervalo_w,0)
	and	coalesce(x.qt_dose,0)	= coalesce(qt_dose_w,0)
	and	CASE WHEN obter_se_agrupa_composto(a.nr_prescricao,x.nr_sequencia,x.nr_agrupamento,x.cd_material)='S' THEN x.nr_agrupamento  ELSE 0 END 	= coalesce(nr_agrupamento_w,0)
	group by
		a.nr_prescricao,
		c.nr_seq_material,
		c.nr_sequencia,
		c.dt_fim_horario,
		c.dt_suspensao,
		c.ie_dose_especial,
		c.nr_seq_processo,
		c.nr_seq_area_prep,
		CASE WHEN get_ie_mostrar_obs='S' THEN CASE WHEN coalesce(coalesce(x.ds_observacao,x.ds_observacao_enf)::text, '') = '' THEN null  ELSE 'S' END   ELSE null END ,
		c.cd_material,
		VIPE_obter_se_medic_composto(a.nr_prescricao, x.nr_sequencia, x.nr_agrupamento, 'D'),
		x.ie_acm,
		x.ie_se_necessario,
		x.cd_intervalo,
		'DE ' || to_char(x.qt_dose_especial) || ' ' || x.cd_unidade_medida_dose,
		x.QT_DOSE_ESPECIAL,
		x.nr_agrupamento,
		c.ie_controlado,
		x.ie_suspenso,
		x.ds_observacao,
		x.nr_dia_util,
		coalesce(c.ie_horario_especial,'N'),
		c.dt_lib_horario,
		x.ie_administrar,
		obter_desc_material(y.CD_MATERIAL_GENERICO)
	order by c.dt_suspensao;

	
BEGIN
	dt_fim_w	:= vipe_gerar_horarios_pck.getdtfimvalidade(dt_validade_limite_p);
	ds_sep_bv_w	:= obter_separador_bv;

	open c01;
	loop
	fetch c01 into	nr_prescricao_w,
			nr_seq_material_w,
			cd_material_w,
			ds_material_w,
			ie_acm_sn_w,
			cd_intervalo_w,
			qt_dose_w,
			nr_agrupamento_w,
			ds_prescricao_w,
			ds_dil_obs_w,
			ie_status_w,
			cd_unid_med_qtde_w,
			ie_via_administracao_w,
			ds_interv_prescr_w,
			qt_total_dias_lib_w,
			ie_composto_w,
			ds_dose_diferenciada_w,
			ie_agrupar_w,
			ie_administrar_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		qt_existe_w	:= 0;

		if (get_ie_agrupar_itens_iguais = 'S') then

			select	count(nr_sequencia)
			into STRICT	qt_existe_w
			from	w_vipe_t
			where	cd_item		= cd_material_w
			and	qt_item		= qt_dose_w
			and	cd_intervalo	= cd_intervalo_w
			and	ie_tipo_item	= 'M'
			and	ds_prescricao	= ds_prescricao_w
			and	(nr_prescricao IS NOT NULL AND nr_prescricao::text <> '')
			and	nm_usuario	= nm_usuario_p
			and	(nr_seq_item IS NOT NULL AND nr_seq_item::text <> '');

		end if;

		if (ie_agrupar_w 	= 'N') or (qt_existe_w	= 0) then

			select	nextval('w_vipe_t_seq')
			into STRICT	nr_seq_wadep_w
			;

			insert into w_vipe_t(
				nr_sequencia,
				nm_usuario,
				ie_tipo_item,
				nr_prescricao,
				nr_seq_item,
				cd_item,
				ds_item,
				ie_acm_sn,
				cd_intervalo,
				qt_item,
				nr_agrupamento,
				ds_prescricao,
				ds_diluicao,
				ie_status_item,
				nr_seq_proc_interno,
				ie_diferenciado,
				cd_unid_med_qtde,
				ie_via_aplicacao,
				ds_interv_prescr,
				qt_total_dias_lib,
				ie_composto,
				ds_dose_diferenciada,
				nr_prescricoes,
				ie_observacao,
				ie_administrar)
			values (
				nr_seq_wadep_w,
				nm_usuario_p,
				'M',
				nr_prescricao_w,
				nr_seq_material_w,
				cd_material_w,
				SUBSTR(ds_material_w,  1, 240),
				ie_acm_sn_w,
				cd_intervalo_w,
				qt_dose_w,
				nr_agrupamento_w,
				ds_prescricao_w,
				ds_dil_obs_w,
				ie_status_w,
				0,
				CASE WHEN coalesce(ds_dil_obs_w::text, '') = '' THEN 'N'  ELSE 'S' END ,
				cd_unid_med_qtde_w,
				ie_via_administracao_w,
				ds_interv_prescr_w,
				qt_total_dias_lib_w,
				ie_composto_w,
				ds_dose_diferenciada_w,
				nr_prescricao_w,
				ie_observacao_w,
				ie_administrar_w);

			open c03;
			loop
			fetch c03 into
				nr_prescricao_w,
				nr_seq_material_w,
				cd_material_w,
				ds_material_w,
				ie_acm_sn_w,
				cd_intervalo_w,
				qt_dose_w,
				nr_agrupamento_w,
				ds_prescricao_w,
				ie_status_w,
				ds_dil_obs_w,
				ie_observacao_w,
				ie_administrar_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */

				ds_comando_update_w	:=	' update w_vipe_t ' ||
								' set nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao), ' ||
								' ds_diluicao = :ds_dil_obs, ' ||
								' ie_observacao = :ie_observacao ' ||
								' where nm_usuario = :nm_usuario ' ||
								' and ie_tipo_item = :ie_tipo ' ||
								' and nvl(nr_prescricao,nvl(:nr_prescricao,0)) = nvl(:nr_prescricao,0) ' ||
								' and nvl(nr_seq_item,nvl(:nr_seq_item,0)) = nvl(:nr_seq_item,0) ' ||
								' and cd_item = :cd_item ' ||
								' and nvl(ie_status_item,''N'') = :ie_status ' ||
								' and nvl(cd_intervalo,0) = nvl(:cd_intervalo,0) ' ||
								' and nvl(qt_item,0) = nvl(:qt_item,0) ' ||
								' and nvl(nr_agrupamento,0) = nvl(:nr_agrupamento,0) ' ||
								' and ((ds_prescricao = :ds_prescricao) or (ds_prescricao is null)) ';

				CALL exec_sql_dinamico_bv('VIPE', ds_comando_update_w,	'nr_prescricao=' || to_char(nr_prescricao_w) || ds_sep_bv_w ||
											'ds_dil_obs=' || ds_dil_obs_w || ds_sep_bv_w ||
											'ie_observacao='||ie_observacao_w || ds_sep_bv_w ||
											'nm_usuario=' || nm_usuario_p || ds_sep_bv_w ||
											'ie_tipo=M' || ds_sep_bv_w ||
											'nr_seq_item='|| to_char(nr_seq_material_w) || ds_sep_bv_w ||
											'cd_item=' || to_char(cd_material_w) || ds_sep_bv_w ||
											'ie_status=' || to_char(ie_status_w) || ds_sep_bv_w ||
											'cd_intervalo=' || cd_intervalo_w  || ds_sep_bv_w ||
											'qt_item=' || to_char(qt_dose_w) || ds_sep_bv_w ||
											'nr_agrupamento=' || to_char(nr_agrupamento_w) || ds_sep_bv_w ||
											'ds_prescricao=' || ds_prescricao_w || ds_sep_bv_w );
			end loop;
			close c03;

		end if;
		end;
	end loop;
	close c01;

	if (ie_lib_pend_rep_p = 'S') then
		begin
		open c02;
		loop
		fetch c02 into	nr_prescricao_w,
				nr_seq_material_w,
				cd_material_w,
				ds_material_w,
				ie_acm_sn_w,
				cd_intervalo_w,
				qt_dose_w,
				nr_agrupamento_w,
				ds_prescricao_w,
				ds_dil_obs_w,
				ie_status_w,
				current_setting('vipe_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15),
				cd_unid_med_qtde_w,
				ie_via_administracao_w,
				ds_interv_prescr_w,
				qt_total_dias_lib_w,
				ie_composto_w,
				ds_dose_diferenciada_w,
				ie_observacao_w,
				ie_administrar_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			select	nextval('w_vipe_t_seq')
			into STRICT	nr_seq_wadep_w
			;

			PERFORM set_config('vipe_gerar_horarios_pck.nr_prescricoes_w', adep_juntar_prescricao(current_setting('vipe_gerar_horarios_pck.nr_prescricoes_w')::varchar(4000),nr_prescricao_w), false);

			insert into w_vipe_t(
				nr_sequencia,
				nm_usuario,
				ie_tipo_item,
				nr_prescricao,
				nr_seq_item,
				cd_item,
				ds_item,
				ie_acm_sn,
				cd_intervalo,
				qt_item,
				nr_agrupamento,
				ds_prescricao,
				ds_diluicao,
				ie_status_item,
				nr_seq_proc_interno,
				ie_diferenciado,
				nr_prescricoes,
				ie_pendente_liberacao,
				cd_unid_med_qtde,
				ie_via_aplicacao,
				ds_interv_prescr,
				qt_total_dias_lib,
				ie_composto,
				ds_dose_diferenciada,
				ie_observacao,
				ie_administrar)
			values (
				nr_seq_wadep_w,
				nm_usuario_p,
				'M',
				nr_prescricao_w,
				nr_seq_material_w,
				cd_material_w,
				SUBSTR(ds_material_w, 1, 240),
				ie_acm_sn_w,
				cd_intervalo_w,
				qt_dose_w,
				nr_agrupamento_w,
				ds_prescricao_w,
				ds_dil_obs_w,
				ie_status_w,
				0,
				CASE WHEN coalesce(ds_dil_obs_w::text, '') = '' THEN 'N'  ELSE 'S' END ,
				CASE WHEN ie_acm_sn_w='S' THEN nr_prescricao_w  ELSE null END ,
				current_setting('vipe_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15),
				cd_unid_med_qtde_w,
				ie_via_administracao_w,
				ds_interv_prescr_w,
				qt_total_dias_lib_w,
				ie_composto_w,
				ds_dose_diferenciada_w,
				ie_observacao_w,
				ie_administrar_w);
			end;
		end loop;
		close c02;
		end;
	end if;
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE vipe_gerar_horarios_pck.vipe_obter_medic_de ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_hor_realizados_p text, ie_exibir_hor_suspensos_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_lib_pend_rep_p text, ie_exibir_suspensos_p text, ie_agrupar_acm_sn_p text, ie_agrupar_dose_esp_p text, ie_diluicao_acm_sn_gestao_p text, cd_setor_paciente_p bigint) FROM PUBLIC;
