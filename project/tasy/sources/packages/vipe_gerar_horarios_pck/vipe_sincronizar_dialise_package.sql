-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE vipe_gerar_horarios_pck.vipe_sincronizar_dialise ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_sol_realizadas_p text, ie_exibir_sol_suspensas_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, ie_agrupar_acm_sn_p text, ie_solucoes_continuas_p text, dt_horario_p timestamp, nr_horario_p integer, ie_prescr_setor_p text, ie_formato_solucoes_p text, cd_setor_paciente_p bigint) AS $body$
DECLARE


	ds_sep_bv_w		varchar(50);
	nr_prescricao_w		bigint;
	nr_seq_solucao_w	integer;
	nr_seq_horario_w	bigint;
	ie_status_horario_w	varchar(15);
	ds_comando_update_w	varchar(4000);
	current_setting('vipe_gerar_horarios_pck.dt_horario_w')::timestamp		timestamp;
	nr_horario_w		integer;
	dt_fim_w		timestamp;
	ie_pintar_w		varchar(1);
	dt_inicio_sol_w		timestamp;
	dt_fim_sol_w		timestamp;
	dt_suspensao_w		timestamp;

	c01 CURSOR FOR
	SELECT	a.nr_prescricao,
		x.nr_seq_solucao,
		CASE WHEN coalesce(x.dt_suspensao::text, '') = '' THEN  substr(obter_status_hor_sol_processo(a.nr_prescricao,x.nr_seq_solucao,1),1,15)  ELSE 'S' END ,
		trunc(x.dt_status,'mi'),
		VIPE_obter_se_colore(a.ie_motivo_prescricao, x.nr_prescricao, null, 'SOL') ie_pintar
	from	prescr_solucao x,
		prescr_medica a
	where	x.nr_prescricao = a.nr_prescricao
	and	obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
	and	a.nr_atendimento = nr_atendimento_p
	and	a.dt_prescricao between dt_inicio_sol_w and dt_fim_sol_w
	and	obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_p) = 'S'
	and	(x.nr_seq_dialise IS NOT NULL AND x.nr_seq_dialise::text <> '')
	and	Obter_se_setor_vipe(a.cd_setor_atendimento) = 'S'
	and	((ie_exibir_sol_realizadas_p = 'S') or (x.ie_status <> 'T'))
	and	((ie_exibir_sol_suspensas_p = 'S') or (coalesce(x.dt_suspensao::text, '') = ''))
	and	((ie_exibir_suspensos_p = 'S') or (coalesce(a.dt_suspensao::text, '') = ''))
	and	((ie_regra_inclusao_p = 'S') or
		 ((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao(	'SOL',
																		cd_estabelecimento_p,
																		cd_setor_usuario_p,
																		cd_perfil_p,
																		null,
																		null,
																		null,
																		null,
																		a.cd_setor_atendimento,
																		null,
																		null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
																		null) = 'S'))) -- nr_seq_exame_p
	and	((ie_prescr_setor_p = 'N') or (ie_prescr_setor_p = 'S' AND a.cd_setor_atendimento = cd_setor_paciente_p))
	and	((x.ie_status in ('I','INT')) or
			 ((obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) = 'N') and (x.dt_status between dt_inicial_horarios_p and dt_final_horarios_p)) or
			 ((get_ie_considera_horario = 'S') and (obter_se_prescr_vig_adep(a.dt_inicio_prescr,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S')) or
			 ((obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) = 'S') and (obter_se_prescr_vig_adep(a.dt_inicio_prescr,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S')))
	group by x.dt_status,
		CASE WHEN coalesce(x.dt_suspensao::text, '') = '' THEN  substr(obter_status_hor_sol_processo(a.nr_prescricao,x.nr_seq_solucao,1),1,15)  ELSE 'S' END ,
		a.nr_prescricao,
		VIPE_obter_se_colore(a.ie_motivo_prescricao, x.nr_prescricao, null, 'SOL'),
		x.nr_seq_solucao
	order by x.dt_status;

	c02 CURSOR FOR
	SELECT	a.nr_prescricao,
		x.nr_seq_solucao,
		--substr(decode(x.dt_suspensao,null,obter_status_hor_sol_lib(c.dt_inicio_horario,c.dt_fim_horario,c.dt_suspensao,c.dt_interrupcao, c.ie_dose_especial,c.nr_seq_processo,c.nr_seq_area_prep,c.dt_lib_horario),decode(c.dt_fim_horario,null,'K','A')),1,15),
		CASE WHEN 	coalesce(c.dt_lib_horario::text, '') = '' THEN 			'W'  ELSE substr(obter_status_hor_sol_adep(c.dt_inicio_horario,c.dt_fim_horario,c.dt_suspensao,c.dt_interrupcao,c.ie_dose_especial,c.nr_seq_processo,c.nr_seq_area_prep,a.nr_prescricao,x.nr_seq_solucao),1,15) END ,
		c.dt_horario,
		VIPE_obter_se_colore(a.ie_motivo_prescricao, x.nr_prescricao, c.nr_seq_material, 'SOL') ie_pintar,
		x.dt_suspensao
	from	prescr_solucao x,
		prescr_mat_hor c,
		prescr_medica a
	where	x.nr_prescricao = c.nr_prescricao
	and	x.nr_seq_solucao = c.nr_seq_solucao
	and	x.nr_prescricao = a.nr_prescricao
	and	c.nr_prescricao = a.nr_prescricao
	and	obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
	and	a.nr_atendimento = nr_atendimento_p
	and	obter_se_prescr_lib_vipe(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_p,c.dt_lib_horario) = 'S'
	and	(x.nr_seq_dialise IS NOT NULL AND x.nr_seq_dialise::text <> '')
	and	Obter_se_setor_vipe(a.cd_setor_atendimento) = 'S'
	and	a.dt_prescricao between dt_inicio_sol_w and dt_fim_sol_w
	and	((ie_exibir_suspensos_p = 'S') or (coalesce(a.dt_suspensao::text, '') = ''))
	and	coalesce(c.ie_situacao,'A') = 'A'
	and	coalesce(c.ie_adep,'S') = 'S'
	and	((coalesce(x.ie_acm,'N') = 'N') or (coalesce(c.ie_aprazado,'N') = 'S'))
	and	c.ie_agrupador = 13
	and	((ie_exibir_sol_realizadas_p = 'S') or (coalesce(c.dt_fim_horario::text, '') = ''))
	and	((ie_exibir_sol_suspensas_p = 'S') or (coalesce(c.dt_suspensao::text, '') = ''))
	and	((ie_regra_inclusao_p = 'S') or
		 ((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao(	'DI',
																		cd_estabelecimento_p,
																		cd_setor_usuario_p,
																		cd_perfil_p,
																		null,
																		null,
																		null,
																		null,
																		a.cd_setor_atendimento,
																		null,
																		null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada
																		null) = 'S'))) -- nr_seq_exame_p
	and	((ie_prescr_setor_p = 'N') or
		 (ie_prescr_setor_p = 'S' AND a.cd_setor_atendimento = cd_setor_paciente_p))
	and	((ie_data_lib_prescr_p = 'M') or (Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'))
	and	((x.ie_status in ('I','INT')) or
			 ((obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) = 'N') and (x.dt_status between dt_inicial_horarios_p and dt_final_horarios_p)) or
			 ((get_ie_considera_horario = 'S') and (obter_se_prescr_vig_adep(a.dt_inicio_prescr,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S')) or
			 ((obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) = 'S') and (obter_se_prescr_vig_adep(a.dt_inicio_prescr,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S')))
	group by
		c.dt_horario,
		a.nr_prescricao,
		x.nr_seq_solucao,
		c.dt_inicio_horario,
		c.dt_fim_horario,
		c.dt_interrupcao,
		substr(CASE WHEN coalesce(x.dt_suspensao::text, '') = '' THEN obter_status_hor_sol_lib(c.dt_inicio_horario,c.dt_fim_horario,c.dt_suspensao,c.dt_interrupcao, c.ie_dose_especial,c.nr_seq_processo,c.nr_seq_area_prep,c.dt_lib_horario)  ELSE CASE WHEN coalesce(c.dt_fim_horario::text, '') = '' THEN 'K'  ELSE 'A' END  END ,1,15),
		VIPE_obter_se_colore(a.ie_motivo_prescricao, x.nr_prescricao, c.nr_seq_material, 'SOL'),
		c.dt_suspensao,
		c.ie_dose_especial,
		c.nr_seq_processo,
		c.nr_seq_area_prep,
		c.dt_lib_horario,
		x.dt_suspensao
	order by c.dt_horario;

	
BEGIN
	ds_sep_bv_w	:= obter_separador_bv;
	dt_fim_w	:= vipe_gerar_horarios_pck.getdtfimvalidade(dt_validade_limite_p);
	SELECT * FROM vipe_gerar_horarios_pck.getdtrefsol(dt_validade_limite_p, dt_inicio_sol_w, dt_fim_sol_w) INTO STRICT dt_inicio_sol_w, dt_fim_sol_w;
	if (ie_formato_solucoes_p = 'I') then
		begin
		open c01;
		loop
		fetch c01 into	nr_prescricao_w,
				nr_seq_solucao_w,
				ie_status_horario_w,
				current_setting('vipe_gerar_horarios_pck.dt_horario_w')::timestamp,
				ie_pintar_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			nr_horario_w := vipe_gerar_horarios_pck.obter_posicao_horario(current_setting('vipe_gerar_horarios_pck.dt_horario_w')::timestamp);

			if (nr_horario_w IS NOT NULL AND nr_horario_w::text <> '') then

				ds_comando_update_w	:=	' update w_vipe_t ' ||
								' set hora' || to_char(nr_horario_w) || ' = :vl_hora, ' ||
								' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao), ' ||
								' ie_pintar = :ie_pintar ' ||
								' where nm_usuario = :nm_usuario ' ||
								' and ie_tipo_item = :ie_tipo ' ||
								' and (((nvl(nr_prescricao,nvl(:nr_prescricao,0)) = nvl(:nr_prescricao,0)) and ' ||
								'       (nvl(nr_seq_item,nvl(:nr_seq_item,0)) = nvl(:nr_seq_item,0))) or ' ||
								'      ((:ie_solucoes_continuas_p = ''N'') and ' ||
								'	(nvl(ie_acm_sn,''N'')  <> ''S'') and ' ||
								'	(nvl(nr_prescricao,nvl(:nr_prescricao,0)) <> nvl(:nr_prescricao,0)) and' ||
								'       (obter_se_contido(nr_prescricao, ''('' || :nr_prescricoes || '')'') = ''S'')))';

				CALL exec_sql_dinamico_bv('VIPE', ds_comando_update_w,	'vl_hora=S' || to_char(nr_seq_horario_w) || 'H' || ie_status_horario_w || ds_sep_bv_w ||
											'nr_prescricao=' || to_char(nr_prescricao_w) || ds_sep_bv_w ||
											'ie_pintar=' || ie_pintar_w || ds_sep_bv_w ||
											'nm_usuario=' || nm_usuario_p || ds_sep_bv_w ||
											'ie_tipo=MD' || ds_sep_bv_w ||
											'nr_seq_item=' || to_char(nr_seq_solucao_w) || ds_sep_bv_w ||
											'ie_solucoes_continuas_p=' || ie_solucoes_continuas_p || ds_sep_bv_w ||
											'nr_prescricoes=' || current_setting('vipe_gerar_horarios_pck.nr_prescricoes_w')::varchar(4000) );
			end if;
			end;
		end loop;
		close c01;
		end;
	elsif (ie_formato_solucoes_p = 'H') then
		begin
		open c02;
		loop
		fetch c02 into	nr_prescricao_w,
				nr_seq_solucao_w,
				ie_status_horario_w,
				current_setting('vipe_gerar_horarios_pck.dt_horario_w')::timestamp,
				ie_pintar_w,
				dt_suspensao_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin

			nr_horario_w := vipe_gerar_horarios_pck.obter_posicao_horario(current_setting('vipe_gerar_horarios_pck.dt_horario_w')::timestamp);

			if (nr_horario_w IS NOT NULL AND nr_horario_w::text <> '') then
				if (dt_suspensao_w IS NOT NULL AND dt_suspensao_w::text <> '') and (ie_status_horario_w	in ('N','S')) then
					ie_status_horario_w	:= 'K';
				end if;
				ds_comando_update_w	:=	' update w_vipe_t ' ||
								' set hora' || to_char(nr_horario_w) || ' = :vl_hora, ' ||
								' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao), ' ||
								' ie_pintar = :ie_pintar ' ||
								' where nm_usuario = :nm_usuario ' ||
								' and ie_tipo_item = :ie_tipo ' ||
								' and (((nvl(nr_prescricao,nvl(:nr_prescricao,0)) = nvl(:nr_prescricao,0)) and ' ||
								'       (nvl(nr_seq_item,nvl(:nr_seq_item,0)) = nvl(:nr_seq_item,0))) or ' ||
								'      ((:ie_solucoes_continuas_p = ''N'') and ' ||
								'	(nvl(ie_acm_sn,''N'')  <> ''S'') and ' ||
								'	(nvl(nr_prescricao,nvl(:nr_prescricao,0)) <> nvl(:nr_prescricao,0)) and' ||
								'	(obter_se_sol_continua_vipe(nr_prescricao,nr_seq_item,ds_item,:dt_inicial_horarios_p,:dt_final_horarios_p) = ''S'') and ' ||
								'       (obter_se_contido(nr_prescricao, ''('' || :nr_prescricoes || '')'') = ''S'')))';

				CALL exec_sql_dinamico_bv('VIPE', ds_comando_update_w,	'vl_hora=S' || to_char(nr_seq_horario_w) || 'H' || ie_status_horario_w || ds_sep_bv_w ||
											'nr_prescricao=' || to_char(nr_prescricao_w) || ds_sep_bv_w ||
											'ie_pintar=' || ie_pintar_w || ds_sep_bv_w ||
											'nm_usuario=' || nm_usuario_p || ds_sep_bv_w ||
											'ie_tipo=MD' || ds_sep_bv_w ||
											'nr_seq_item=' || to_char(nr_seq_solucao_w) || ds_sep_bv_w ||
											'ie_solucoes_continuas_p=' || ie_solucoes_continuas_p || ds_sep_bv_w ||
											'dt_inicial_horarios_p=' || dt_inicial_horarios_p || ds_sep_bv_w ||
											'dt_final_horarios_p=' || dt_final_horarios_p|| ds_sep_bv_w ||
											'nr_prescricoes=' || current_setting('vipe_gerar_horarios_pck.nr_prescricoes_w')::varchar(4000) );
			end if;
			end;
		end loop;
		close c02;
		end;
	end if;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE vipe_gerar_horarios_pck.vipe_sincronizar_dialise ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_sol_realizadas_p text, ie_exibir_sol_suspensas_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, ie_agrupar_acm_sn_p text, ie_solucoes_continuas_p text, dt_horario_p timestamp, nr_horario_p integer, ie_prescr_setor_p text, ie_formato_solucoes_p text, cd_setor_paciente_p bigint) FROM PUBLIC;
