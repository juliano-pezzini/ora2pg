-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE vipe_gerar_horarios_pck.vipe_sincronizar_npt_adul ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_sol_realizadas_p text, ie_exibir_sol_suspensas_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, ie_agrupar_acm_sn_p text, dt_horario_p timestamp, nr_horario_p integer, ie_exibe_sem_lib_farm_p text, ie_prescr_setor_p text, cd_setor_paciente_p bigint) AS $body$
DECLARE


	ds_sep_bv_w		varchar(50);
	nr_prescricao_w		bigint;
	nr_seq_solucao_w	bigint;
	nr_seq_horario_w	bigint;
	ie_status_horario_w	varchar(15);
	ds_comando_update_w	varchar(4000);
	current_setting('vipe_gerar_horarios_pck.dt_horario_w')::timestamp		timestamp;
	nr_horario_w		integer;
	dt_fim_w		timestamp;
	current_setting('vipe_gerar_horarios_pck.nr_prescricoes_w')::varchar(4000)	varchar(1000);
	nr_seq_prot_w		bigint;
	ie_forma_w		varchar(1);

	c01 CURSOR FOR
	SELECT	a.nr_prescricao,
		x.nr_sequencia,
		CASE WHEN coalesce(x.ie_status,'N')='INT' THEN 'T' WHEN coalesce(x.ie_status,'N')='T' THEN 'A'  ELSE coalesce(x.ie_status,'N') END  ie_status,
		x.DT_STATUS,
		x.nr_seq_protocolo,
		x.ie_forma
	from	nut_pac x,
		prescr_medica a
	where	x.nr_prescricao = a.nr_prescricao
	and	obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
	and	a.nr_atendimento = nr_atendimento_p
	and	a.dt_validade_prescr between dt_validade_limite_p and dt_fim_w
	and	((obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_p) = 'S') or
		((ie_exibe_sem_lib_farm_p = 'S') and (coalesce(a.IE_PRESCR_NUTRICAO, 'N') = 'S')))
	--and	x.ie_status = 'N'
	and	((ie_exibir_sol_realizadas_p = 'S') or (x.ie_status <> 'T'))
	and	((ie_exibir_sol_suspensas_p = 'S') or (coalesce(x.dt_suspensao::text, '') = ''))
	and	((ie_exibir_suspensos_p = 'S') or (coalesce(a.dt_suspensao::text, '') = ''))
	and	((ie_regra_inclusao_p = 'S') or
		 ((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao(	'NAN',
																		cd_estabelecimento_p,
																		cd_setor_usuario_p,
																		cd_perfil_p,
																		null,
																		null,
																		null,
																		null,
																		a.cd_Setor_atendimento,
																		null,
																		null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e n√£o haviam passado nada
																		null) = 'S'))) -- nr_seq_exame_p
	and	x.dt_status between dt_horario_inicio_sinc_w and dt_horario_fim_sinc_w
	and	((ie_prescr_setor_p = 'N') or (ie_prescr_setor_p = 'S' AND a.cd_setor_atendimento = cd_setor_paciente_p))
	group by
		a.nr_prescricao,
		x.nr_sequencia,
		CASE WHEN coalesce(x.ie_status,'N')='INT' THEN 'T' WHEN coalesce(x.ie_status,'N')='T' THEN 'A'  ELSE coalesce(x.ie_status,'N') END ,
		x.dt_status,
		x.nr_seq_protocolo,
		x.ie_forma;
	
BEGIN
	dt_fim_w	:= vipe_gerar_horarios_pck.getdtfimvalidade(dt_validade_limite_p);
	ds_sep_bv_w	:= obter_separador_bv;

	open c01;
	loop
	fetch c01 into	nr_prescricao_w,
			nr_seq_solucao_w,
			ie_status_horario_w,
			current_setting('vipe_gerar_horarios_pck.dt_horario_w')::timestamp,
			nr_seq_prot_w,
			ie_forma_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		nr_horario_w := vipe_gerar_horarios_pck.obter_posicao_horario( current_setting('vipe_gerar_horarios_pck.dt_horario_w')::timestamp );
		if (nr_horario_w IS NOT NULL AND nr_horario_w::text <> '') then

			ds_comando_update_w	:=	' update w_vipe_t ' ||
							' set hora' || to_char(nr_horario_w) || ' = :vl_hora, ' ||
							' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao) ' ||
							' where nm_usuario = :nm_usuario ' ||
							' and ie_tipo_item = :ie_tipo ' ||
							' and nvl(nr_prescricao,nvl(:nr_prescricao,0)) = nvl(:nr_prescricao,0) ' ||
							' and nvl(nr_seq_item,nvl(:nr_seq_item,0)) = nvl(:nr_seq_item,0) ';

			CALL exec_sql_dinamico_bv('ADEP', ds_comando_update_w,	'vl_hora=S' || to_char(null) || 'H' || ie_status_horario_w || ds_sep_bv_w ||
										'nr_prescricao=' || to_char(nr_prescricao_w) || ds_sep_bv_w ||
										'nm_usuario=' || nm_usuario_p || ds_sep_bv_w ||
										'ie_tipo=NAN' || ds_sep_bv_w ||
										'nr_seq_item=' || to_char(nr_seq_solucao_w) || ds_sep_bv_w );

			select	max(nr_prescricoes)
			into STRICT	current_setting('vipe_gerar_horarios_pck.nr_prescricoes_w')::varchar(4000)
			from	w_vipe_t
			where	((nr_prescricao	<> nr_prescricao_w) or (nr_seq_item	<> nr_seq_solucao_w))
			and	coalesce(ie_forma,'X') = coalesce(ie_forma_w,'X')
			and	coalesce(nr_seq_prot_glic,0) = coalesce(nr_seq_prot_w,0)
			and	obter_se_contido(nr_prescricao_w,nr_prescricoes) = 'S'
			and	ie_tipo_item	= 'NAN'
			and	nm_usuario	= nm_usuario_p;

			ds_comando_update_w	:=	' update w_vipe_t ' ||
							' set hora' || to_char(nr_horario_w) || ' = :vl_hora, ' ||
							' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao) ' ||
							' where nm_usuario = :nm_usuario ' ||
							' and ie_tipo_item = :ie_tipo ' ||
							' and nvl(ie_forma,''X'') = nvl(:ie_forma,''X'') ' ||
							' and nvl(nr_seq_prot_glic,0) = nvl(:nr_seq_protocolo,0) ' ||
							' and	obter_se_contido(nr_prescricao,:nr_prescricoes) = ''S'' ' ||
							' and 	((nvl(nr_prescricao,0) <> nvl(:nr_prescricao,0)) or ' ||
							'  	 (nvl(nr_seq_item,0) <> nvl(:nr_seq_item,0))) ';

			CALL exec_sql_dinamico_bv('ADEP', ds_comando_update_w,	'vl_hora=S' || to_char(null) || 'H' || ie_status_horario_w || ds_sep_bv_w ||
										'nr_prescricoes=' || current_setting('vipe_gerar_horarios_pck.nr_prescricoes_w')::varchar(4000) || ds_sep_bv_w ||
										'nr_prescricao=' || to_char(nr_prescricao_w) || ds_sep_bv_w ||
										'nr_seq_protocolo=' || to_char(nr_seq_prot_w) || ds_sep_bv_w ||
										'ie_forma=' || ie_forma_w || ds_sep_bv_w ||
										'nm_usuario=' || nm_usuario_p || ds_sep_bv_w ||
										'ie_tipo=NAN' || ds_sep_bv_w ||
										'nr_seq_item=' || to_char(nr_seq_solucao_w) || ds_sep_bv_w );

		end if;

		end;
	end loop;
	close c01;
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE vipe_gerar_horarios_pck.vipe_sincronizar_npt_adul ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_sol_realizadas_p text, ie_exibir_sol_suspensas_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, ie_agrupar_acm_sn_p text, dt_horario_p timestamp, nr_horario_p integer, ie_exibe_sem_lib_farm_p text, ie_prescr_setor_p text, cd_setor_paciente_p bigint) FROM PUBLIC;
