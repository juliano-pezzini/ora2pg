-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE vipe_gerar_horarios_pck.gerar_horarios_vipe ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, ie_aba_p text, nm_usuario_p text, nr_atendimento_p bigint, nr_seq_dialise_p bigint, qt_horas_anteriores_p bigint, qt_horas_adicionais_p bigint, qt_horas_vigencia_p bigint, dt_referencia_p timestamp, ie_exibir_hor_realizados_p text, ie_exibir_hor_suspensos_p text, ie_so_proc_setor_usuario_p text, ie_so_interv_setor_usuario_p text, ie_solucoes_continuas_p text, cd_setor_paciente_p bigint) AS $body$
DECLARE


	ie_data_lib_prescr_w		varchar(15);
	ie_agrupar_acm_sn_w		varchar(15);
	ie_exibir_suspensos_w		varchar(15);
	ie_agrupar_dose_esp_w		varchar(15);
	ie_obs_diferenciar_w		varchar(15);
	ie_data_lib_proced_w		varchar(15);
	ie_horarios_dietas_orais_w	varchar(15);
	ie_mat_med_proc_gestao_w	varchar(15);
	ie_diluicao_acm_sn_gestao_w	varchar(15);
	ie_agrupar_associados_w		varchar(15);
	ie_lib_pend_rep_w		varchar(15);
	ie_mostrar_subs_w		varchar(15);
	ie_gerar_horarios_glic_w	varchar(1);
	ie_exibir_dil_ccg_w		varchar(1);
	ie_exibe_sem_lib_farm_w		varchar(1);
	ie_possui_horarios_w		varchar(1);
	current_setting('vipe_gerar_horarios_pck.cd_setor_usuario_w')::integer		integer;
	current_setting('vipe_gerar_horarios_pck.cd_perfil_w')::bigint			bigint;
	current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp		timestamp;
	current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp		timestamp;
	current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp		timestamp;
	ie_exibe_dietas_w		varchar(1);
	ie_prescr_setor_atual_w		varchar(1);
	ie_formato_solucoes_w		varchar(15);
	nr_regra_ordem_w		bigint;

	current_setting('vipe_gerar_horarios_pck.ie_regra_incl_dieta_oral_w')::varchar(15)	varchar(15)	:= 'S';
	current_setting('vipe_gerar_horarios_pck.ie_regra_incl_supl_oral_w')::varchar(15)	varchar(15)	:= 'S';
	current_setting('vipe_gerar_horarios_pck.ie_regra_incl_solucao_w')::varchar(15)		varchar(15)	:= 'S';
	current_setting('vipe_gerar_horarios_pck.ie_regra_incl_dialise_w')::varchar(15)		varchar(15)	:= 'S';
	current_setting('vipe_gerar_horarios_pck.ie_regra_incl_medicamento_w')::varchar(15)	varchar(15)	:= 'S';
	current_setting('vipe_gerar_horarios_pck.ie_regra_incl_material_w')::varchar(15)	varchar(15)	:= 'R';
	current_setting('vipe_gerar_horarios_pck.ie_regra_incl_procedimento_w')::varchar(15)	varchar(15)	:= 'S';
	current_setting('vipe_gerar_horarios_pck.ie_regra_incl_coleta_w')::varchar(15)		varchar(15)	:= 'S';
	current_setting('vipe_gerar_horarios_pck.ie_regra_incl_ccg_w')::varchar(15)		varchar(15)	:= 'S';
	current_setting('vipe_gerar_horarios_pck.ie_regra_incl_cig_w')::varchar(15)		varchar(15)	:= 'S';
	current_setting('vipe_gerar_horarios_pck.ie_regra_incl_recomendacao_w')::varchar(15)	varchar(15)	:= 'S';
	current_setting('vipe_gerar_horarios_pck.ie_regra_incl_intervencao_w')::varchar(15)	varchar(15)	:= 'S';
	current_setting('vipe_gerar_horarios_pck.ie_regra_incl_ivc_w')::varchar(15)		varchar(15)	:= 'N';
	current_setting('vipe_gerar_horarios_pck.ie_regra_incl_gas_w')::varchar(15)		varchar(15)	:= 'N';
	current_setting('vipe_gerar_horarios_pck.ie_regra_incl_hemoterapia_w')::varchar(15)	varchar(15)	:= 'N';
	current_setting('vipe_gerar_horarios_pck.ie_regra_incl_jejum_w')::varchar(15)		varchar(15)	:= 'S';
	current_setting('vipe_gerar_horarios_pck.ie_regra_incl_sne_w')::varchar(15)		varchar(15)	:= 'N';
	current_setting('vipe_gerar_horarios_pck.ie_regra_incl_npt_adulta_w')::varchar(15)	varchar(15)	:= 'N';
	current_setting('vipe_gerar_horarios_pck.ie_regra_incl_npt_neonatal_w')::varchar(15)	varchar(15)	:= 'N';
	ie_regra_incl_ordem_medica_w	varchar(15)	:= 'N';

	current_setting('vipe_gerar_horarios_pck.dt_horario_w')::timestamp			timestamp;


	i				integer		:= 0;
	j				integer		:= 0;
	k				integer		:= 0;

	nr_seq_wadep_w			bigint;

	c01 CURSOR FOR
	SELECT	coalesce(ie_dieta_oral,'S'),
		coalesce(ie_suplemento_oral,'S'),
		coalesce(ie_solucao,'S'),
		coalesce(ie_dialise,'S'),
		coalesce(ie_medicamento,'S'),
		coalesce(ie_material,'R'),
		coalesce(ie_procedimento,'S'),
		coalesce(ie_coleta,'S'),
		coalesce(ie_ccg,'S'),
		coalesce(ie_cig,'S'),
		coalesce(ie_recomendacao,'S'),
		coalesce(ie_sae,'S'),
		coalesce(ie_ivc,'N'),
		coalesce(ie_oxigenio,'N'),
		coalesce(ie_hemoterapia,'N'),
		coalesce(ie_sup_nutricional,'N'),
		coalesce(ie_npt_adulta,'N'),
		coalesce(ie_npt_neonatal,'N')
	from	adep_regra_inclusao
	where	cd_estabelecimento				= cd_estabelecimento_p
	and	coalesce(cd_setor_atendimento,current_setting('vipe_gerar_horarios_pck.cd_setor_usuario_w')::integer)	= current_setting('vipe_gerar_horarios_pck.cd_setor_usuario_w')::integer
	and	coalesce(cd_perfil,current_setting('vipe_gerar_horarios_pck.cd_perfil_w')::bigint)			= current_setting('vipe_gerar_horarios_pck.cd_perfil_w')::bigint
	order by
		coalesce(cd_setor_atendimento,99999) desc,
		coalesce(cd_perfil,99999) desc,
		nr_sequencia;

	c02 CURSOR FOR
	SELECT	dt_horario
	from	w_vipe_horarios_t
	where	nm_usuario = nm_usuario_p
	group by
		dt_horario
	order by
		dt_horario;

	
BEGIN
	CALL vipe_liberar_sessao(nm_usuario_p);

	CALL CALL vipe_gerar_horarios_pck.set_parametros_funcao(cd_estabelecimento_p, cd_setor_usuario_p, cd_perfil_p, ie_aba_p, nr_atendimento_p,
			      nr_seq_dialise_p,	qt_horas_anteriores_p, qt_horas_adicionais_p, qt_horas_vigencia_p, dt_referencia_p,
			      ie_exibir_hor_realizados_p, ie_exibir_hor_suspensos_p, ie_so_proc_setor_usuario_p, ie_so_interv_setor_usuario_p,
			      ie_solucoes_continuas_p, nm_usuario_p);

	PERFORM set_config('vipe_gerar_horarios_pck.cd_setor_usuario_w', coalesce(cd_setor_usuario_p,0), false);
	PERFORM set_config('vipe_gerar_horarios_pck.cd_perfil_w', coalesce(cd_perfil_p,0), false);

	if (dt_referencia_p IS NOT NULL AND dt_referencia_p::text <> '') then
		begin
		PERFORM set_config('vipe_gerar_horarios_pck.dt_validade_limite_w', dt_referencia_p - 1/86400, false); --menos um segundo para ir at√© as 14:59:59
		PERFORM set_config('vipe_gerar_horarios_pck.dt_inicial_horarios_w', dt_referencia_p, false);
		PERFORM set_config('vipe_gerar_horarios_pck.dt_final_horarios_w', (current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp + 1) - 1/86400, false);
		end;
	else
		begin
		PERFORM set_config('vipe_gerar_horarios_pck.dt_validade_limite_w', clock_timestamp() - dividir(qt_horas_vigencia_p,24), false);
		PERFORM set_config('vipe_gerar_horarios_pck.dt_inicial_horarios_w', to_date(to_char(trunc(clock_timestamp() - dividir(qt_horas_anteriores_p,24),'hh24'),'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'), false);
		PERFORM set_config('vipe_gerar_horarios_pck.dt_final_horarios_w', to_date(to_char(trunc(clock_timestamp() + dividir(qt_horas_adicionais_p,24),'hh24'),'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'), false);
		end;
	end if;

	open c01;
	loop
	fetch c01 into	current_setting('vipe_gerar_horarios_pck.ie_regra_incl_dieta_oral_w')::varchar(15),
			current_setting('vipe_gerar_horarios_pck.ie_regra_incl_supl_oral_w')::varchar(15),
			current_setting('vipe_gerar_horarios_pck.ie_regra_incl_solucao_w')::varchar(15),
			current_setting('vipe_gerar_horarios_pck.ie_regra_incl_dialise_w')::varchar(15),
			current_setting('vipe_gerar_horarios_pck.ie_regra_incl_medicamento_w')::varchar(15),
			current_setting('vipe_gerar_horarios_pck.ie_regra_incl_material_w')::varchar(15),
			current_setting('vipe_gerar_horarios_pck.ie_regra_incl_procedimento_w')::varchar(15),
			current_setting('vipe_gerar_horarios_pck.ie_regra_incl_coleta_w')::varchar(15),
			current_setting('vipe_gerar_horarios_pck.ie_regra_incl_ccg_w')::varchar(15),
			current_setting('vipe_gerar_horarios_pck.ie_regra_incl_cig_w')::varchar(15),
			current_setting('vipe_gerar_horarios_pck.ie_regra_incl_recomendacao_w')::varchar(15),
			current_setting('vipe_gerar_horarios_pck.ie_regra_incl_intervencao_w')::varchar(15),
			current_setting('vipe_gerar_horarios_pck.ie_regra_incl_ivc_w')::varchar(15),
			current_setting('vipe_gerar_horarios_pck.ie_regra_incl_gas_w')::varchar(15),
			current_setting('vipe_gerar_horarios_pck.ie_regra_incl_hemoterapia_w')::varchar(15),
			current_setting('vipe_gerar_horarios_pck.ie_regra_incl_sne_w')::varchar(15),
			current_setting('vipe_gerar_horarios_pck.ie_regra_incl_npt_adulta_w')::varchar(15),
			current_setting('vipe_gerar_horarios_pck.ie_regra_incl_npt_neonatal_w')::varchar(15);
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		PERFORM set_config('vipe_gerar_horarios_pck.ie_regra_incl_dieta_oral_w', current_setting('vipe_gerar_horarios_pck.ie_regra_incl_dieta_oral_w')::varchar(15), false);
		PERFORM set_config('vipe_gerar_horarios_pck.ie_regra_incl_supl_oral_w', current_setting('vipe_gerar_horarios_pck.ie_regra_incl_supl_oral_w')::varchar(15), false);
		PERFORM set_config('vipe_gerar_horarios_pck.ie_regra_incl_solucao_w', current_setting('vipe_gerar_horarios_pck.ie_regra_incl_solucao_w')::varchar(15), false);
		PERFORM set_config('vipe_gerar_horarios_pck.ie_regra_incl_dialise_w', current_setting('vipe_gerar_horarios_pck.ie_regra_incl_dialise_w')::varchar(15), false);
		PERFORM set_config('vipe_gerar_horarios_pck.ie_regra_incl_medicamento_w', current_setting('vipe_gerar_horarios_pck.ie_regra_incl_medicamento_w')::varchar(15), false);
		PERFORM set_config('vipe_gerar_horarios_pck.ie_regra_incl_material_w', current_setting('vipe_gerar_horarios_pck.ie_regra_incl_material_w')::varchar(15), false);
		PERFORM set_config('vipe_gerar_horarios_pck.ie_regra_incl_procedimento_w', current_setting('vipe_gerar_horarios_pck.ie_regra_incl_procedimento_w')::varchar(15), false);
		PERFORM set_config('vipe_gerar_horarios_pck.ie_regra_incl_coleta_w', current_setting('vipe_gerar_horarios_pck.ie_regra_incl_coleta_w')::varchar(15), false);
		PERFORM set_config('vipe_gerar_horarios_pck.ie_regra_incl_ccg_w', current_setting('vipe_gerar_horarios_pck.ie_regra_incl_ccg_w')::varchar(15), false);
		PERFORM set_config('vipe_gerar_horarios_pck.ie_regra_incl_cig_w', current_setting('vipe_gerar_horarios_pck.ie_regra_incl_cig_w')::varchar(15), false);
		PERFORM set_config('vipe_gerar_horarios_pck.ie_regra_incl_recomendacao_w', current_setting('vipe_gerar_horarios_pck.ie_regra_incl_recomendacao_w')::varchar(15), false);
		PERFORM set_config('vipe_gerar_horarios_pck.ie_regra_incl_intervencao_w', current_setting('vipe_gerar_horarios_pck.ie_regra_incl_intervencao_w')::varchar(15), false);
		PERFORM set_config('vipe_gerar_horarios_pck.ie_regra_incl_ivc_w', current_setting('vipe_gerar_horarios_pck.ie_regra_incl_ivc_w')::varchar(15), false);
		PERFORM set_config('vipe_gerar_horarios_pck.ie_regra_incl_gas_w', current_setting('vipe_gerar_horarios_pck.ie_regra_incl_gas_w')::varchar(15), false);
		PERFORM set_config('vipe_gerar_horarios_pck.ie_regra_incl_hemoterapia_w', current_setting('vipe_gerar_horarios_pck.ie_regra_incl_hemoterapia_w')::varchar(15), false);
		PERFORM set_config('vipe_gerar_horarios_pck.ie_regra_incl_jejum_w', current_setting('vipe_gerar_horarios_pck.ie_regra_incl_dieta_oral_w')::varchar(15), false);
		PERFORM set_config('vipe_gerar_horarios_pck.ie_regra_incl_sne_w', current_setting('vipe_gerar_horarios_pck.ie_regra_incl_sne_w')::varchar(15), false);
		PERFORM set_config('vipe_gerar_horarios_pck.ie_regra_incl_npt_adulta_w', current_setting('vipe_gerar_horarios_pck.ie_regra_incl_npt_adulta_w')::varchar(15), false);
		PERFORM set_config('vipe_gerar_horarios_pck.ie_regra_incl_npt_neonatal_w', current_setting('vipe_gerar_horarios_pck.ie_regra_incl_npt_neonatal_w')::varchar(15), false);
		end;
	end loop;
	close c01;

	if (ie_aba_p <> 'L') then
		begin
		if (ie_so_proc_setor_usuario_p = 'N') then
			begin
			if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_dieta_oral_w')::varchar(15) <> 'N') and (get_ie_horarios_dietas_orais <> 'N') then
				begin
				if (get_ie_utiliza_serv_dieta = 'S') then
					CALL vipe_gerar_horarios_pck.vipe_obter_hor_dieta_oral_serv(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						current_setting('vipe_gerar_horarios_pck.ie_regra_incl_dieta_oral_w')::varchar(15),
						get_ie_data_lib_prescr,
						get_ie_exibir_suspensos,
						get_ie_exibe_sem_lib_farm,
						get_ie_prescr_setor_atual,
						cd_setor_paciente_p);
				else
					CALL CALL vipe_gerar_horarios_pck.vipe_obter_horarios_dieta_oral(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						current_setting('vipe_gerar_horarios_pck.ie_regra_incl_dieta_oral_w')::varchar(15),
						get_ie_data_lib_prescr,
						get_ie_exibir_suspensos,
						get_ie_exibe_sem_lib_farm,
						get_ie_prescr_setor_atual,
						cd_setor_paciente_p);
				end if;
				end;
			end if;
			if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_supl_oral_w')::varchar(15) <> 'N') then
				begin
				CALL CALL vipe_gerar_horarios_pck.vipe_obter_horarios_supl_oral(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					current_setting('vipe_gerar_horarios_pck.ie_regra_incl_supl_oral_w')::varchar(15),
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_exibe_sem_lib_farm,
					get_ie_prescr_setor_atual,
					cd_setor_paciente_p);
				end;
			end if;
			if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_medicamento_w')::varchar(15) <> 'N') then
				begin
				CALL CALL vipe_gerar_horarios_pck.vipe_obter_horarios_medic(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					current_setting('vipe_gerar_horarios_pck.ie_regra_incl_medicamento_w')::varchar(15),
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_mostrar_subs,
					get_ie_prescr_setor_atual,
					cd_setor_paciente_p);
				end;
			end if;
			if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_material_w')::varchar(15) <> 'N') then
				begin
				CALL CALL vipe_gerar_horarios_pck.vipe_obter_horarios_material(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					current_setting('vipe_gerar_horarios_pck.ie_regra_incl_material_w')::varchar(15),
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_prescr_setor_atual,
					cd_setor_paciente_p);
				end;
			end if;
			if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_procedimento_w')::varchar(15) <> 'N') then
				begin
				CALL CALL vipe_gerar_horarios_pck.vipe_obter_horarios_proced(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					current_setting('vipe_gerar_horarios_pck.ie_regra_incl_procedimento_w')::varchar(15),
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_data_lib_proced,
					ie_so_proc_setor_usuario_p,
					get_ie_prescr_setor_atual,
					cd_setor_paciente_p);

				if (get_ie_mat_med_proc_gestao = 'S') then
					begin
					CALL CALL vipe_gerar_horarios_pck.vipe_obter_horarios_assoc_proc(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						null,
						get_ie_data_lib_prescr,
						get_ie_exibir_suspensos,
						get_ie_prescr_setor_atual,
						cd_setor_paciente_p);
					end;
				end if;
				end;
			end if;

			if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_coleta_w')::varchar(15) <> 'N') then
				begin
				CALL CALL vipe_gerar_horarios_pck.vipe_obter_horarios_coleta(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					ie_aba_p,
					nm_usuario_p,
					nr_atendimento_p,
					current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					current_setting('vipe_gerar_horarios_pck.ie_regra_incl_coleta_w')::varchar(15),
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_data_lib_proced,
					ie_so_proc_setor_usuario_p,
					get_ie_prescr_setor_atual,
					cd_setor_paciente_p);
				end;
			end if;
			if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_cig_w')::varchar(15) <> 'N') then
				begin
				CALL CALL vipe_gerar_horarios_pck.vipe_obter_horarios_cig(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					current_setting('vipe_gerar_horarios_pck.ie_regra_incl_cig_w')::varchar(15),
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_data_lib_proced,
					ie_so_proc_setor_usuario_p,
					get_ie_prescr_setor_atual,
					cd_setor_paciente_p);
				end;
			end if;
			if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_ccg_w')::varchar(15) <> 'N') then
				begin
				CALL CALL vipe_gerar_horarios_pck.vipe_obter_horarios_ccg(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					current_setting('vipe_gerar_horarios_pck.ie_regra_incl_ccg_w')::varchar(15),
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_data_lib_proced,
					ie_so_proc_setor_usuario_p,
					get_ie_prescr_setor_atual,
					cd_setor_paciente_p);

				if (get_ie_gerar_horarios_glic = 'S') then
					begin

					CALL CALL vipe_gerar_horarios_pck.vipe_obter_horarios_assoc_glic(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						null,
						get_ie_data_lib_prescr,
						get_ie_exibir_suspensos,
						get_ie_prescr_setor_atual,
						cd_setor_paciente_p);
					end;
				end if;
				end;
			end if;

			if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_ivc_w')::varchar(15) <> 'N') then
				begin
				CALL CALL vipe_gerar_horarios_pck.vipe_obter_horarios_ivc(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					current_setting('vipe_gerar_horarios_pck.ie_regra_incl_ivc_w')::varchar(15),
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_data_lib_proced,
					ie_so_proc_setor_usuario_p,
					get_ie_prescr_setor_atual,
					cd_setor_paciente_p);
				end;
			end if;
			if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_solucao_w')::varchar(15) <> 'N') then
				begin
				CALL CALL vipe_gerar_horarios_pck.vipe_obter_horarios_solucao(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					current_setting('vipe_gerar_horarios_pck.ie_regra_incl_solucao_w')::varchar(15),
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					ie_solucoes_continuas_p,
					get_ie_prescr_setor_atual,
					get_ie_formato_solucoes,
					cd_setor_paciente_p);
				end;
			end if;
			if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_dialise_w')::varchar(15) <> 'N') then
				begin
				CALL vipe_gerar_horarios_pck.vipe_obter_horarios_dialise(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					current_setting('vipe_gerar_horarios_pck.ie_regra_incl_dialise_w')::varchar(15),
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					ie_solucoes_continuas_p,
					get_ie_prescr_setor_atual,
					get_ie_formato_solucoes,
					cd_setor_paciente_p);
				end;
			end if;
			if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_recomendacao_w')::varchar(15) <> 'N') then
				begin
				CALL CALL vipe_gerar_horarios_pck.vipe_obter_horarios_rec(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					current_setting('vipe_gerar_horarios_pck.ie_regra_incl_recomendacao_w')::varchar(15),
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_prescr_setor_atual,
					cd_setor_paciente_p);
				end;
			end if;
			if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_intervencao_w')::varchar(15) <> 'N') then
				begin
				CALL CALL vipe_gerar_horarios_pck.vipe_obter_horarios_interv(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					current_setting('vipe_gerar_horarios_pck.ie_regra_incl_intervencao_w')::varchar(15),
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					ie_so_proc_setor_usuario_p,
					ie_so_interv_setor_usuario_p,
					get_ie_prescr_setor_atual,
					cd_setor_paciente_p);
				end;
			end if;
			if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_hemoterapia_w')::varchar(15) <> 'N') then
				begin
				CALL CALL vipe_gerar_horarios_pck.vipe_obter_horarios_hemoterap(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					current_setting('vipe_gerar_horarios_pck.ie_regra_incl_hemoterapia_w')::varchar(15),
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					ie_so_proc_setor_usuario_p,
					ie_so_interv_setor_usuario_p,
					get_ie_prescr_setor_atual,
					cd_setor_paciente_p);
				end;
			end if;

			if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_jejum_w')::varchar(15) <> 'N') then
				begin
				CALL CALL vipe_gerar_horarios_pck.vipe_obter_horarios_jejum(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					current_setting('vipe_gerar_horarios_pck.ie_regra_incl_jejum_w')::varchar(15),
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_exibe_sem_lib_farm,
					get_ie_prescr_setor_atual,
					cd_setor_paciente_p);
				end;
			end if;
			if (get_ie_regra_incl_ordem_medica = 'G') then
				begin
				CALL CALL vipe_gerar_horarios_pck.vipe_obter_horarios_ordem_med(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					get_ie_regra_incl_ordem_medica,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_prescr_setor_atual,
					cd_setor_paciente_p);
				end;
			end if;
			if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_sne_w')::varchar(15) <> 'N') then
				begin
				CALL CALL vipe_gerar_horarios_pck.vipe_obter_horarios_sne(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					current_setting('vipe_gerar_horarios_pck.ie_regra_incl_sne_w')::varchar(15),
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_exibe_sem_lib_farm,
					get_ie_prescr_setor_atual,
					cd_setor_paciente_p);
				end;
			end if;

			if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_npt_adulta_w')::varchar(15) <> 'N') then
				begin
				CALL vipe_gerar_horarios_pck.vipe_obter_horarios_npt_adulta(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					current_setting('vipe_gerar_horarios_pck.ie_regra_incl_npt_adulta_w')::varchar(15),
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_exibe_sem_lib_farm,
					get_ie_prescr_setor_atual,
					current_setting('vipe_gerar_horarios_pck.cd_setor_pac_w')::integer);
				end;
			end if;
			end;
		elsif (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_procedimento_w')::varchar(15) <> 'N') then
			begin
			CALL CALL vipe_gerar_horarios_pck.vipe_obter_horarios_proced(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
				current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
				current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				current_setting('vipe_gerar_horarios_pck.ie_regra_incl_procedimento_w')::varchar(15),
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_data_lib_proced,
				ie_so_proc_setor_usuario_p,
				get_ie_prescr_setor_atual,
				cd_setor_paciente_p);

			if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_intervencao_w')::varchar(15) <> 'N') then
				begin
				CALL CALL vipe_gerar_horarios_pck.vipe_obter_horarios_interv(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					current_setting('vipe_gerar_horarios_pck.ie_regra_incl_intervencao_w')::varchar(15),
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					ie_so_proc_setor_usuario_p,
					ie_so_interv_setor_usuario_p,
					get_ie_prescr_setor_atual,
					cd_setor_paciente_p);
				end;
			end if;
			end;
		end if;
		end;
	elsif (ie_aba_p = 'L') then
		begin
		CALL CALL vipe_gerar_horarios_pck.vipe_obter_horarios_coleta(
			cd_estabelecimento_p,
			cd_setor_usuario_p,
			cd_perfil_p,
			ie_aba_p,
			nm_usuario_p,
			nr_atendimento_p,
			current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
			current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
			current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
			ie_exibir_hor_realizados_p,
			ie_exibir_hor_suspensos_p,
			current_setting('vipe_gerar_horarios_pck.ie_regra_incl_coleta_w')::varchar(15),
			get_ie_data_lib_prescr,
			get_ie_exibir_suspensos,
			get_ie_data_lib_proced,
			ie_so_proc_setor_usuario_p,
			get_ie_prescr_setor_atual,
			cd_setor_paciente_p);
		end;
	end if;

	PERFORM set_config('vipe_gerar_horarios_pck.dt_horario_inicio_sinc_w', null, false);
	PERFORM set_config('vipe_gerar_horarios_pck.dt_horario_fim_sinc_w', null, false);
	open c02;
	loop
	fetch c02 into current_setting('vipe_gerar_horarios_pck.dt_horario_w')::timestamp;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		if (i < 40) then
			begin
			i			:= i + 1;

			if (current_setting('vipe_gerar_horarios_pck.dt_horario_inicio_sinc_w')::coalesce(timestamp::text, '') = '') then
				PERFORM set_config('vipe_gerar_horarios_pck.dt_horario_inicio_sinc_w', current_setting('vipe_gerar_horarios_pck.dt_horario_w')::timestamp, false);
			end if;

			PERFORM set_config('vipe_gerar_horarios_pck.dt_horario_fim_sinc_w', current_setting('vipe_gerar_horarios_pck.dt_horario_w')::timestamp, false);

			current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[i].horario_w	:= to_char(current_setting('vipe_gerar_horarios_pck.dt_horario_w')::timestamp,'dd/mm/yyyy hh24:mi:ss');
			end;
		end if;
		end;
	end loop;
	close c02;

	j	:= i;
	while(j < 40) loop
		begin
		j			:= j + 1;
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[j].horario_w	:= null;
		end;
	end loop;

	select	nextval('w_vipe_t_seq')
	into STRICT	nr_seq_wadep_w
	;

	insert into w_vipe_t(
		nr_sequencia,
		nm_usuario,
		ie_tipo_item,
		hora1, 	hora2,	hora3,	hora4,	hora5,	hora6,	hora7,	hora8,	hora9,	hora10,
		hora11, hora12, hora13, hora14, hora15, hora16, hora17, hora18, hora19, hora20,
		hora21, hora22, hora23, hora24, hora25, hora26, hora27, hora28, hora29, hora30,
		hora31, hora32, hora33, hora34, hora35, hora36, hora37, hora38, hora39, hora40)
	values (
		nr_seq_wadep_w,
		nm_usuario_p,
		'H',
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[1].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[2].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[3].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[4].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[5].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[6].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[7].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[8].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[9].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[10].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[11].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[12].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[13].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[14].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[15].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[16].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[17].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[18].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[19].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[20].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[21].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[22].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[23].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[24].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[25].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[26].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[27].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[28].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[29].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[30].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[31].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[32].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[33].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[34].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[35].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[36].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[37].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[38].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[39].horario_w,
		current_setting('vipe_gerar_horarios_pck.vetor_w')::vetor[40].horario_w);

		if (ie_aba_p <> 'L') then
			begin
			if (ie_so_proc_setor_usuario_p = 'N') then
				begin
				if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_dieta_oral_w')::varchar(15) <> 'N') then
					begin
					if (get_ie_utiliza_serv_dieta = 'S') then
						CALL vipe_gerar_horarios_pck.vipe_obter_dieta_oral_servico(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							current_setting('vipe_gerar_horarios_pck.ie_regra_incl_dieta_oral_w')::varchar(15),
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_horarios_dietas_orais,
							get_ie_exibe_sem_lib_farm,
							get_ie_exibe_dietas,
							get_ie_prescr_setor_atual,
							cd_setor_paciente_p);
					else
						CALL CALL vipe_gerar_horarios_pck.vipe_obter_dieta_oral(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							current_setting('vipe_gerar_horarios_pck.ie_regra_incl_dieta_oral_w')::varchar(15),
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_horarios_dietas_orais,
							get_ie_exibe_sem_lib_farm,
							get_ie_exibe_dietas,
							get_ie_prescr_setor_atual,
							cd_setor_paciente_p);
					end if;
					end;
				end if;
				if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_supl_oral_w')::varchar(15) <> 'N') then
					begin
					CALL CALL vipe_gerar_horarios_pck.vipe_obter_supl_oral(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						current_setting('vipe_gerar_horarios_pck.ie_regra_incl_supl_oral_w')::varchar(15),
						get_ie_data_lib_prescr,
						get_ie_lib_pend_rep,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						get_ie_exibe_sem_lib_farm,
						get_ie_prescr_setor_atual,
						cd_setor_paciente_p);
					end;
				end if;
				if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_medicamento_w')::varchar(15) <> 'N') then
					begin

					CALL CALL vipe_gerar_horarios_pck.vipe_obter_medic(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						current_setting('vipe_gerar_horarios_pck.ie_regra_incl_medicamento_w')::varchar(15),
						get_ie_data_lib_prescr,
						get_ie_lib_pend_rep,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						get_ie_agrupar_dose_esp,
						get_ie_diluicao_acm_sn_gestao,
						get_ie_mostrar_subs,
						get_ie_prescr_setor_atual,
						cd_setor_paciente_p);

					if (get_ie_agrupar_dose_esp = 'N') then
						begin

						CALL CALL vipe_gerar_horarios_pck.vipe_obter_medic_de(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							current_setting('vipe_gerar_horarios_pck.ie_regra_incl_medicamento_w')::varchar(15),
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_agrupar_dose_esp,
							get_ie_diluicao_acm_sn_gestao,
							cd_setor_paciente_p);
						end;
					end if;
					end;
				end if;
				if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_material_w')::varchar(15) <> 'N') then
					begin
					CALL CALL vipe_gerar_horarios_pck.vipe_obter_material(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						current_setting('vipe_gerar_horarios_pck.ie_regra_incl_material_w')::varchar(15),
						get_ie_data_lib_prescr,
						get_ie_lib_pend_rep,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						get_ie_prescr_setor_atual,
						cd_setor_paciente_p);
					end;
				end if;
				if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_procedimento_w')::varchar(15) <> 'N') then
					begin
					CALL CALL vipe_gerar_horarios_pck.vipe_obter_proced(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						current_setting('vipe_gerar_horarios_pck.ie_regra_incl_procedimento_w')::varchar(15),
						get_ie_data_lib_prescr,
						get_ie_lib_pend_rep,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						get_ie_agrupar_associados,
						get_ie_data_lib_proced,
						ie_so_proc_setor_usuario_p,
						get_ie_prescr_setor_atual,
						cd_setor_paciente_p);

					if (get_ie_mat_med_proc_gestao = 'S') then
						begin
						CALL CALL vipe_gerar_horarios_pck.vipe_obter_assoc_proc(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							null,
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_agrupar_dose_esp,
							get_ie_prescr_setor_atual,
							cd_setor_paciente_p);
						end;
					end if;
					end;
				end if;

				if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_coleta_w')::varchar(15) <> 'N') then
					begin
					CALL CALL vipe_gerar_horarios_pck.vipe_obter_coleta(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						ie_aba_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						current_setting('vipe_gerar_horarios_pck.ie_regra_incl_coleta_w')::varchar(15),
						get_ie_data_lib_prescr,
						get_ie_lib_pend_rep,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						get_ie_data_lib_proced,
						ie_so_proc_setor_usuario_p,
						get_ie_prescr_setor_atual,
						cd_setor_paciente_p);
					end;
				end if;
				if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_cig_w')::varchar(15) <> 'N') then
					begin
					CALL CALL vipe_gerar_horarios_pck.vipe_obter_cig(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						current_setting('vipe_gerar_horarios_pck.ie_regra_incl_cig_w')::varchar(15),
						get_ie_data_lib_prescr,
						get_ie_lib_pend_rep,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						get_ie_data_lib_proced,
						ie_so_proc_setor_usuario_p,
						get_ie_prescr_setor_atual,
						cd_setor_paciente_p);
					end;
				end if;
				if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_ccg_w')::varchar(15) <> 'N') then
					begin
					CALL CALL vipe_gerar_horarios_pck.vipe_obter_ccg(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						current_setting('vipe_gerar_horarios_pck.ie_regra_incl_ccg_w')::varchar(15),
						get_ie_data_lib_prescr,
						get_ie_lib_pend_rep,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						get_ie_data_lib_proced,
						ie_so_proc_setor_usuario_p,
						get_ie_exibir_dil_ccg,
						get_ie_prescr_setor_atual,
						cd_setor_paciente_p);

					if (get_ie_gerar_horarios_glic  = 'S') then
						begin
						CALL CALL vipe_gerar_horarios_pck.vipe_obter_assoc_glic(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							null,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_agrupar_dose_esp,
							get_ie_prescr_setor_atual,
							cd_setor_paciente_p);
						end;
					end if;
					end;
				end if;
				if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_ivc_w')::varchar(15) <> 'N') then
					begin
					CALL CALL vipe_gerar_horarios_pck.vipe_obter_ivc(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						current_setting('vipe_gerar_horarios_pck.ie_regra_incl_ivc_w')::varchar(15),
						get_ie_data_lib_prescr,
						get_ie_lib_pend_rep,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						get_ie_data_lib_proced,
						ie_so_proc_setor_usuario_p,
						get_ie_prescr_setor_atual,
						cd_setor_paciente_p);
					end;
				end if;

				if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_solucao_w')::varchar(15) <> 'N') then
					begin
					CALL CALL vipe_gerar_horarios_pck.vipe_obter_solucao(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						current_setting('vipe_gerar_horarios_pck.ie_regra_incl_solucao_w')::varchar(15),
						get_ie_data_lib_prescr,
						get_ie_lib_pend_rep,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						ie_solucoes_continuas_p,
						get_ie_prescr_setor_atual,
						get_ie_formato_solucoes,
						cd_setor_paciente_p);
					end;
				end if;
				if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_gas_w')::varchar(15) <> 'N') then
					begin
					CALL CALL vipe_gerar_horarios_pck.vipe_obter_gas(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						current_setting('vipe_gerar_horarios_pck.ie_regra_incl_gas_w')::varchar(15),
						get_ie_data_lib_prescr,
						get_ie_lib_pend_rep,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						get_ie_prescr_setor_atual,
						cd_setor_paciente_p);
					end;
				end if;
				if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_recomendacao_w')::varchar(15) <> 'N') then
					begin
					CALL CALL vipe_gerar_horarios_pck.vipe_obter_rec(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						current_setting('vipe_gerar_horarios_pck.ie_regra_incl_recomendacao_w')::varchar(15),
						get_ie_data_lib_prescr,
						get_ie_lib_pend_rep,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						get_ie_prescr_setor_atual,
						cd_setor_paciente_p);
					end;
				end if;
				if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_intervencao_w')::varchar(15) <> 'N') then
					begin
					CALL CALL vipe_gerar_horarios_pck.vipe_obter_interv(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						current_setting('vipe_gerar_horarios_pck.ie_regra_incl_intervencao_w')::varchar(15),
						get_ie_data_lib_prescr,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						ie_so_proc_setor_usuario_p,
						ie_so_interv_setor_usuario_p,
						cd_setor_paciente_p);
					end;
				end if;
				if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_hemoterapia_w')::varchar(15) <> 'N') then
					begin
					CALL CALL vipe_gerar_horarios_pck.vipe_obter_hemoterap(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						current_setting('vipe_gerar_horarios_pck.ie_regra_incl_hemoterapia_w')::varchar(15),
						get_ie_data_lib_prescr,
						get_ie_lib_pend_rep,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						ie_so_proc_setor_usuario_p,
						ie_so_interv_setor_usuario_p,
						get_ie_prescr_setor_atual,
						cd_setor_paciente_p);
					end;
				end if;
				if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_jejum_w')::varchar(15) <> 'N') then
					begin
					CALL CALL vipe_gerar_horarios_pck.vipe_obter_jejum(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						current_setting('vipe_gerar_horarios_pck.ie_regra_incl_jejum_w')::varchar(15),
						get_ie_data_lib_prescr,
						get_ie_exibir_suspensos,
						get_ie_exibe_sem_lib_farm,
						get_ie_prescr_setor_atual,
						cd_setor_paciente_p);
					end;
				end if;
				if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_sne_w')::varchar(15) <> 'N') then
					begin
					CALL CALL vipe_gerar_horarios_pck.vipe_obter_sne(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						current_setting('vipe_gerar_horarios_pck.ie_regra_incl_sne_w')::varchar(15),
						get_ie_data_lib_prescr,
						get_ie_lib_pend_rep,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						get_ie_exibe_sem_lib_farm,
						get_ie_prescr_setor_atual,
						cd_setor_paciente_p,
						ie_solucoes_continuas_p);
					end;
				end if;
				if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_npt_neonatal_w')::varchar(15) <> 'N') then
					begin
					CALL CALL vipe_gerar_horarios_pck.vipe_obter_npt_neonatal(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						current_setting('vipe_gerar_horarios_pck.ie_regra_incl_npt_neonatal_w')::varchar(15),
						get_ie_data_lib_prescr,
						get_ie_lib_pend_rep,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						get_ie_prescr_setor_atual,
						cd_setor_paciente_p);
					end;
				end if;

				if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_npt_adulta_w')::varchar(15) <> 'N') then
					begin
					CALL CALL vipe_gerar_horarios_pck.vipe_obter_npt_adulta(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						current_setting('vipe_gerar_horarios_pck.ie_regra_incl_npt_adulta_w')::varchar(15),
						get_ie_data_lib_prescr,
						get_ie_lib_pend_rep,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						get_ie_prescr_setor_atual,
						cd_setor_paciente_p);
					end;
				end if;
				if (get_ie_regra_incl_ordem_medica = 'G') then
					begin
					CALL CALL vipe_gerar_horarios_pck.vipe_obter_ordem_med(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						get_ie_regra_incl_ordem_medica,
						get_ie_data_lib_prescr,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						get_ie_prescr_setor_atual,
						cd_setor_paciente_p);
					end;
				end if;
				end;
			elsif (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_procedimento_w')::varchar(15) <> 'N') then
				begin
				CALL CALL vipe_gerar_horarios_pck.vipe_obter_proced(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					current_setting('vipe_gerar_horarios_pck.ie_regra_incl_procedimento_w')::varchar(15),
					get_ie_data_lib_prescr,
					get_ie_lib_pend_rep,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					get_ie_agrupar_associados,
					get_ie_data_lib_proced,
					ie_so_proc_setor_usuario_p,
					get_ie_prescr_setor_atual,
					cd_setor_paciente_p);

				if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_intervencao_w')::varchar(15) <> 'N') then
					begin
					CALL CALL vipe_gerar_horarios_pck.vipe_obter_interv(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						current_setting('vipe_gerar_horarios_pck.ie_regra_incl_intervencao_w')::varchar(15),
						get_ie_data_lib_prescr,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						ie_so_proc_setor_usuario_p,
						ie_so_interv_setor_usuario_p,
						cd_setor_paciente_p);
					end;
				end if;
				end;
			end if;
			end;
		elsif (ie_aba_p = 'L') then
			begin
			CALL CALL vipe_gerar_horarios_pck.vipe_obter_coleta(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				ie_aba_p,
				nm_usuario_p,
				nr_atendimento_p,
				current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
				current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
				current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				current_setting('vipe_gerar_horarios_pck.ie_regra_incl_coleta_w')::varchar(15),
				get_ie_data_lib_prescr,
				get_ie_lib_pend_rep,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,
				get_ie_data_lib_proced,
				ie_so_proc_setor_usuario_p,
				get_ie_prescr_setor_atual,
				cd_setor_paciente_p);
			end;
		end if;

	if (get_medic_dialise = 'S') then
		begin
		CALL vipe_gerar_horarios_pck.vipe_obter_dialise(
			cd_estabelecimento_p,
			cd_setor_usuario_p,
			cd_perfil_p,
			nm_usuario_p,
			nr_atendimento_p,
			nr_seq_dialise_p,
			current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
			current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
			current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
			ie_exibir_hor_realizados_p,
			ie_exibir_hor_suspensos_p,
			current_setting('vipe_gerar_horarios_pck.ie_regra_incl_medicamento_w')::varchar(15),
			get_ie_data_lib_prescr,
			get_ie_lib_pend_rep,
			get_ie_exibir_suspensos,
			get_ie_agrupar_acm_sn,
			get_ie_agrupar_dose_esp,
			get_ie_diluicao_acm_sn_gestao,
			get_ie_prescr_setor_atual,
			cd_setor_paciente_p);

		if (get_ie_agrupar_dose_esp = 'N') then
			begin
			CALL CALL vipe_gerar_horarios_pck.vipe_obter_medic_hd_de(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				nr_seq_dialise_p,
				current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
				current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
				current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				current_setting('vipe_gerar_horarios_pck.ie_regra_incl_medicamento_w')::varchar(15),
				get_ie_data_lib_prescr,
				get_ie_lib_pend_rep,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,
				get_ie_agrupar_dose_esp,
				get_ie_diluicao_acm_sn_gestao,
				get_ie_prescr_setor_atual,
				cd_setor_paciente_p);
			end;
		end if;
		end;
	end if;

		if (ie_aba_p <> 'L') then
			begin
			if (ie_so_proc_setor_usuario_p = 'N') then
				begin





				--while (k < 40) loop
				--	begin
					k	:= k + 1;

					if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_dieta_oral_w')::varchar(15) <> 'N') then
						begin
						if (get_ie_utiliza_serv_dieta = 'S') then

							CALL vipe_gerar_horarios_pck.vipe_sinc_diet_oral_serv(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
								current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
								current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								current_setting('vipe_gerar_horarios_pck.ie_regra_incl_dieta_oral_w')::varchar(15),
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_horarios_dietas_orais,
								null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
								null,--k,
								get_ie_exibe_sem_lib_farm,
								get_ie_prescr_setor_atual,
								cd_setor_paciente_p);
						else
							CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_dieta_oral(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
								current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
								current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								current_setting('vipe_gerar_horarios_pck.ie_regra_incl_dieta_oral_w')::varchar(15),
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_horarios_dietas_orais,
								null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
								null,--k,
								get_ie_exibe_sem_lib_farm,
								get_ie_prescr_setor_atual,
								cd_setor_paciente_p);
						end if;
						end;
					end if;

					if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_supl_oral_w')::varchar(15) <> 'N') then
						begin
						CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_supl_oral(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							current_setting('vipe_gerar_horarios_pck.ie_regra_incl_supl_oral_w')::varchar(15),
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
							null,--k,
							get_ie_exibe_sem_lib_farm,
							get_ie_prescr_setor_atual,
							cd_setor_paciente_p);
						end;
					end if;


					if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_medicamento_w')::varchar(15) <> 'N') then
						begin
						CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_medic(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							current_setting('vipe_gerar_horarios_pck.ie_regra_incl_medicamento_w')::varchar(15),
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_agrupar_dose_esp,
							get_ie_obs_diferenciar,
							null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
							null,--k,
							get_ie_mostrar_subs,
							get_ie_prescr_setor_atual,
							cd_setor_paciente_p);

						if (get_ie_agrupar_dose_esp = 'N') then
							begin
							CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_medic_de(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
								current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
								current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								current_setting('vipe_gerar_horarios_pck.ie_regra_incl_medicamento_w')::varchar(15),
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,
								get_ie_agrupar_dose_esp,
								get_ie_obs_diferenciar,
								null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
								null,--k,
								get_ie_prescr_setor_atual,
								cd_setor_paciente_p);
							end;
						end if;
						end;
					end if;

					if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_material_w')::varchar(15) <> 'N') then
						begin
						CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_material(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							current_setting('vipe_gerar_horarios_pck.ie_regra_incl_material_w')::varchar(15),
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
							null,--k,
							get_ie_prescr_setor_atual,
							cd_setor_paciente_p);
						end;
					end if;
					if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_procedimento_w')::varchar(15) <> 'N') then
						begin
						CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_proced(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							current_setting('vipe_gerar_horarios_pck.ie_regra_incl_procedimento_w')::varchar(15),
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_agrupar_associados,
							get_ie_data_lib_proced,
							ie_so_proc_setor_usuario_p,
							null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
							null,--k,
							get_ie_prescr_setor_atual,
							cd_setor_paciente_p);

						if (get_ie_mat_med_proc_gestao = 'S') then
							begin
							CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_assoc_proc(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
								current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
								current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								null,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,
								get_ie_agrupar_dose_esp,
								get_ie_obs_diferenciar,
								null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
								null,--k,
								get_ie_prescr_setor_atual,
								cd_setor_paciente_p);
							end;
						end if;
						end;
					end if;
					if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_coleta_w')::varchar(15) <> 'N') then
						begin
						CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_coleta(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							ie_aba_p,
							nm_usuario_p,
							nr_atendimento_p,
							current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							current_setting('vipe_gerar_horarios_pck.ie_regra_incl_coleta_w')::varchar(15),
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_data_lib_proced,
							ie_so_proc_setor_usuario_p,
							null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
							null,--k,
							get_ie_prescr_setor_atual,
							cd_setor_paciente_p);
						end;
					end if;
					if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_cig_w')::varchar(15) <> 'N') then
						begin
						CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_cig(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							current_setting('vipe_gerar_horarios_pck.ie_regra_incl_cig_w')::varchar(15),
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_data_lib_proced,
							ie_so_proc_setor_usuario_p,
							null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
							null,--k,
							get_ie_prescr_setor_atual,
							cd_setor_paciente_p);
						end;
					end if;
					if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_ccg_w')::varchar(15) <> 'N') then
						begin
						CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_ccg(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							current_setting('vipe_gerar_horarios_pck.ie_regra_incl_ccg_w')::varchar(15),
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_data_lib_proced,
							ie_so_proc_setor_usuario_p,
							null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
							null,--k,
							get_ie_exibir_dil_ccg,
							get_ie_prescr_setor_atual,
							cd_setor_paciente_p);

						if (get_ie_gerar_horarios_glic  = 'S') then
							begin
							CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_assoc_glic(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
								current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
								current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								null,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,
								get_ie_agrupar_dose_esp,
								get_ie_obs_diferenciar,
								null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
								null,--k,
								get_ie_prescr_setor_atual,
								cd_setor_paciente_p);
							end;
						end if;
						end;
					end if;
					if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_ivc_w')::varchar(15) <> 'N') then
						begin
						CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_ivc(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							current_setting('vipe_gerar_horarios_pck.ie_regra_incl_ivc_w')::varchar(15),
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_data_lib_proced,
							ie_so_proc_setor_usuario_p,
							null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
							null,--k,
							get_ie_prescr_setor_atual,
							cd_setor_paciente_p);
						end;
					end if;
					if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_solucao_w')::varchar(15) <> 'N') then
						begin
						CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_solucao(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							current_setting('vipe_gerar_horarios_pck.ie_regra_incl_solucao_w')::varchar(15),
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							ie_solucoes_continuas_p,
							null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
							null,--k,
							get_ie_prescr_setor_atual,
							get_ie_formato_solucoes,
							cd_setor_paciente_p);
						end;
					end if;
					if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_dialise_w')::varchar(15) <> 'N') then
						begin
						CALL vipe_gerar_horarios_pck.vipe_sincronizar_dialise(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							current_setting('vipe_gerar_horarios_pck.ie_regra_incl_dialise_w')::varchar(15),
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							ie_solucoes_continuas_p,
							null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
							null,--k,
							get_ie_prescr_setor_atual,
							get_ie_formato_solucoes,
							cd_setor_paciente_p);
						end;
					end if;
					if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_recomendacao_w')::varchar(15) <> 'N') then
						begin
						CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_rec(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							current_setting('vipe_gerar_horarios_pck.ie_regra_incl_recomendacao_w')::varchar(15),
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
							null,--k,
							get_ie_prescr_setor_atual,
							cd_setor_paciente_p);
						end;
					end if;
					if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_intervencao_w')::varchar(15) <> 'N') then
						begin
						CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_interv(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							current_setting('vipe_gerar_horarios_pck.ie_regra_incl_intervencao_w')::varchar(15),
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							ie_so_proc_setor_usuario_p,
							ie_so_interv_setor_usuario_p,
							null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
							null,--k,
							get_ie_prescr_setor_atual,
							cd_setor_paciente_p);
						end;
					end if;
					if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_hemoterapia_w')::varchar(15) <> 'N') then
						begin
						CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_hemoterap(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							current_setting('vipe_gerar_horarios_pck.ie_regra_incl_hemoterapia_w')::varchar(15),
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							ie_so_proc_setor_usuario_p,
							ie_so_interv_setor_usuario_p,
							null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
							null,--k,
							get_ie_prescr_setor_atual,
							cd_setor_paciente_p);
						end;
					end if;
					if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_jejum_w')::varchar(15) <> 'N') then
						begin
						CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_jejum(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							current_setting('vipe_gerar_horarios_pck.ie_regra_incl_jejum_w')::varchar(15),
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
							null,--k,
							get_ie_exibe_sem_lib_farm,
							get_ie_prescr_setor_atual,
							cd_setor_paciente_p);
						end;
					end if;
					if (get_ie_regra_incl_ordem_medica = 'G') then
						begin
						CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_ordem_med(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							get_ie_regra_incl_ordem_medica,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
							null,--k,
							get_ie_prescr_setor_atual,
							cd_setor_paciente_p);
						end;
					end if;
					if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_sne_w')::varchar(15) <> 'N') then
						begin
						CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_sne(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							current_setting('vipe_gerar_horarios_pck.ie_regra_incl_sne_w')::varchar(15),
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
							null,--k,
							get_ie_exibe_sem_lib_farm,
							get_ie_prescr_setor_atual,
							cd_setor_paciente_p);
						end;
					end if;

					if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_npt_adulta_w')::varchar(15) <> 'N') then
						begin
						CALL vipe_gerar_horarios_pck.vipe_sincronizar_npt_adul(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							current_setting('vipe_gerar_horarios_pck.ie_regra_incl_npt_adulta_w')::varchar(15),
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							null,
							null,
							get_ie_exibe_sem_lib_farm,
							get_ie_prescr_setor_atual,
							current_setting('vipe_gerar_horarios_pck.cd_setor_pac_w')::integer);
						end;
					end if;
				--	end;
				--end loop;
				end;
			elsif (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_procedimento_w')::varchar(15) <> 'N') then
				begin
				--while (k < 40) loop
				--	begin
					k	:= k + 1;
					CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_proced(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
						current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						current_setting('vipe_gerar_horarios_pck.ie_regra_incl_procedimento_w')::varchar(15),
						get_ie_data_lib_prescr,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						get_ie_agrupar_associados,
						get_ie_data_lib_proced,
						ie_so_proc_setor_usuario_p,
						null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
						null,--k,
						get_ie_prescr_setor_atual,
						cd_setor_paciente_p);

					if (current_setting('vipe_gerar_horarios_pck.ie_regra_incl_intervencao_w')::varchar(15) <> 'N') then
						begin
						CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_interv(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
							current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							current_setting('vipe_gerar_horarios_pck.ie_regra_incl_intervencao_w')::varchar(15),
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							ie_so_proc_setor_usuario_p,
							ie_so_interv_setor_usuario_p,
							null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
							null,--k,
							get_ie_prescr_setor_atual,
							cd_setor_paciente_p);
						end;
					end if;
			--		end;
			--	end loop;
				end;
			end if;

			end;
		elsif (ie_aba_p = 'L') then
			begin
		--	while (k < 40) loop
			--	begin
				k	:= k + 1;
				CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_coleta(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					ie_aba_p,
					nm_usuario_p,
					nr_atendimento_p,
					current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					current_setting('vipe_gerar_horarios_pck.ie_regra_incl_coleta_w')::varchar(15),
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					get_ie_data_lib_proced,
					ie_so_proc_setor_usuario_p,
					null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
					null,--k,
					get_ie_prescr_setor_atual,
					cd_setor_paciente_p);
			--	end;
			--end loop;
			end;
		end if;

	if (get_medic_dialise = 'S') then
		begin
		--while (k < 40) loop
		--	begin
			k	:= k + 1;
			CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_medic_hd(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				nr_seq_dialise_p,
				current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
				current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
				current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				current_setting('vipe_gerar_horarios_pck.ie_regra_incl_medicamento_w')::varchar(15),
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,
				get_ie_agrupar_dose_esp,
				get_ie_obs_diferenciar,
				null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
				null,--k,
				get_ie_prescr_setor_atual,
				cd_setor_paciente_p);

			if (get_ie_agrupar_dose_esp = 'N') then
				begin
				CALL CALL vipe_gerar_horarios_pck.vipe_sincronizar_medic_hd_de(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					nr_seq_dialise_p,
					current_setting('vipe_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_final_horarios_w')::timestamp,
					current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					current_setting('vipe_gerar_horarios_pck.ie_regra_incl_medicamento_w')::varchar(15),
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					get_ie_agrupar_dose_esp,
					get_ie_obs_diferenciar,
					null,--to_date(vetor_w(k).horario_w,'dd/mm/yyyy hh24:mi:ss'),
					null,--k,
					get_ie_prescr_setor_atual,
					cd_setor_paciente_p);
				end;
			end if;
		--	end;
		--end loop;
		end;
	end if;

	update	w_vipe_t
	set	nr_prescricoes = vipe_obter_prescricoes(nr_atendimento_p, ie_tipo_item, cd_item, nr_seq_proc_interno, cd_intervalo, qt_item, get_ie_data_lib_proced, get_ie_data_lib_prescr, get_ie_exibir_suspensos, current_setting('vipe_gerar_horarios_pck.dt_validade_limite_w')::timestamp, cd_setor_paciente_p,nr_seq_prot_glic)
	where	nm_usuario = nm_usuario_p
	and	coalesce(nr_prescricoes::text, '') = '';

	update	w_vipe_t
	set	ie_prescricao_alta = obter_se_prescr_alta_adep(nr_prescricoes),
		ie_hemodialise = obter_se_prescricao_hemo(nr_atendimento_p,null,nr_prescricoes)
	where	nm_usuario = nm_usuario_p;

	update	w_vipe_t
	set	ie_possui_horarios = 'N'
	where	nm_usuario = nm_usuario_p
	and	ie_tipo_item <> 'H'
	and	coalesce(hora1::text, '') = ''
	and	coalesce(hora2::text, '') = ''
	and 	coalesce(hora3::text, '') = ''
	and 	coalesce(hora4::text, '') = ''
	and 	coalesce(hora5::text, '') = ''
	and 	coalesce(hora6::text, '') = ''
	and 	coalesce(hora7::text, '') = ''
	and 	coalesce(hora8::text, '') = ''
	and 	coalesce(hora9::text, '') = ''
	and 	coalesce(hora10::text, '') = ''
	and 	coalesce(hora11::text, '') = ''
	and 	coalesce(hora12::text, '') = ''
	and 	coalesce(hora13::text, '') = ''
	and 	coalesce(hora14::text, '') = ''
	and 	coalesce(hora15::text, '') = ''
	and	coalesce(hora16::text, '') = ''
	and	coalesce(hora17::text, '') = ''
	and	coalesce(hora18::text, '') = ''
	and	coalesce(hora19::text, '') = ''
	and	coalesce(hora20::text, '') = ''
	and	coalesce(hora21::text, '') = ''
	and	coalesce(hora22::text, '') = ''
	and	coalesce(hora23::text, '') = ''
	and	coalesce(hora24::text, '') = ''
	and	coalesce(hora25::text, '') = ''
	and	coalesce(hora26::text, '') = ''
	and	coalesce(hora27::text, '') = ''
	and	coalesce(hora28::text, '') = ''
	and	coalesce(hora29::text, '') = ''
	and	coalesce(hora30::text, '') = ''
	and	coalesce(hora31::text, '') = ''
	and	coalesce(hora32::text, '') = ''
	and	coalesce(hora33::text, '') = ''
	and	coalesce(hora34::text, '') = ''
	and	coalesce(hora35::text, '') = ''
	and	coalesce(hora36::text, '') = ''
	and	coalesce(hora37::text, '') = ''
	and	coalesce(hora38::text, '') = ''
	and	coalesce(hora39::text, '') = ''
	and	coalesce(hora40::text, '') = '';

	CALL vipe_gerar_ordem_apresent(get_nr_regra_ordem);

	if (coalesce(get_ie_gerar_titulos,'N')	= 'S') then
		CALL Gerar_titulos_vipe(nm_usuario_p, get_nr_regra_ordem);
	end if;

	commit;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE vipe_gerar_horarios_pck.gerar_horarios_vipe ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, ie_aba_p text, nm_usuario_p text, nr_atendimento_p bigint, nr_seq_dialise_p bigint, qt_horas_anteriores_p bigint, qt_horas_adicionais_p bigint, qt_horas_vigencia_p bigint, dt_referencia_p timestamp, ie_exibir_hor_realizados_p text, ie_exibir_hor_suspensos_p text, ie_so_proc_setor_usuario_p text, ie_so_interv_setor_usuario_p text, ie_solucoes_continuas_p text, cd_setor_paciente_p bigint) FROM PUBLIC;
