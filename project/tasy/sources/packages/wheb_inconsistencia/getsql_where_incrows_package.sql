-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION wheb_inconsistencia.getsql_where_incrows (integridade_referencial_p INTEGRIDADE_REFERENCIAL, schema_p text DEFAULT NULL) RETURNS varchar AS $body$
DECLARE

    indice_w               INDICE%rowtype;
    indice_atributo_w      INDICE_ATRIBUTO%rowtype;
    integridade_atributo_w INTEGRIDADE_ATRIBUTO%rowtype;
    schema_w               varchar(30);
    sql_where_w            varchar(2000);
    sql_isnotnull_w        varchar(2000);

BEGIN
    IF NOT WHEB_DB.IS_ROWTYPE_VALID(integridade_referencial_p) THEN
      RETURN NULL;
    END IF;

    schema_w := WHEB_DB.GET_SCHEMA(schema_p);
    sql_where_w := NULL;
    BEGIN
      OPEN WHEB_DB.C_INTEGRIDADE_ATRIBUTOS(integridade_referencial_p.NM_TABELA, integridade_referencial_p.NM_INTEGRIDADE_REFERENCIAL);
      LOOP
        FETCH WHEB_DB.C_INTEGRIDADE_ATRIBUTOS INTO integridade_atributo_w;
        EXIT WHEN NOT FOUND; /* apply on WHEB_DB.C_INTEGRIDADE_ATRIBUTOS */

        IF coalesce(integridade_atributo_w.NM_ATRIBUTO_REF::text, '') = '' THEN
          BEGIN
            OPEN WHEB_DB.C_INDICES(integridade_referencial_p.NM_TABELA_REFERENCIA, 'PK');
            FETCH WHEB_DB.C_INDICES INTO indice_w;

            indice_atributo_w := WHEB_DB.GET_INDICE_ATRIBUTO(indice_w.NM_TABELA, indice_w.NM_INDICE, integridade_atributo_w.IE_SEQUENCIA_CRIACAO);

            IF (sql_where_w IS NOT NULL AND sql_where_w::text <> '') THEN
              sql_where_w := sql_where_w || ' AND ';
            END IF;

            sql_where_w := sql_where_w || 'A.' || integridade_atributo_w.NM_ATRIBUTO || ' = B.' || indice_atributo_w.NM_ATRIBUTO;

            CLOSE WHEB_DB.C_INDICES;
          EXCEPTION
            WHEN OTHERS THEN
              CLOSE WHEB_DB.C_INDICES;
              CALL WHEB_MENSAGEM_PCK.EXIBIR_MENSAGEM_ABORT(sqlerrm(SQLSTATE));
          END;
        ELSE
          IF (sql_where_w IS NOT NULL AND sql_where_w::text <> '') THEN
            sql_where_w := sql_where_w || ' AND ';
          END IF;

          sql_where_w := sql_where_w || 'A.' || integridade_atributo_w.NM_ATRIBUTO || ' = B.' || integridade_atributo_w.NM_ATRIBUTO_REF;
        END IF;

        sql_isnotnull_w := sql_isnotnull_w || ' AND A.' || integridade_atributo_w.NM_ATRIBUTO || ' IS NOT NULL';
      END LOOP;

      CLOSE WHEB_DB.C_INTEGRIDADE_ATRIBUTOS;
    EXCEPTION
      WHEN OTHERS THEN
        CLOSE WHEB_DB.C_INTEGRIDADE_ATRIBUTOS;
        CALL WHEB_MENSAGEM_PCK.EXIBIR_MENSAGEM_ABORT(sqlerrm(SQLSTATE));
    END;

    IF coalesce(sql_where_w::text, '') = '' OR (sql_where_w = '') THEN
      RETURN NULL;
    END IF;

    RETURN ' NOT EXISTS (SELECT 1' ||
                         ' FROM ' || schema_w || integridade_referencial_p.NM_TABELA_REFERENCIA || ' B' ||
                        ' WHERE ' || sql_where_w || ')' || sql_isnotnull_w;
  END;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION wheb_inconsistencia.getsql_where_incrows (integridade_referencial_p INTEGRIDADE_REFERENCIAL, schema_p text DEFAULT NULL) FROM PUBLIC;
