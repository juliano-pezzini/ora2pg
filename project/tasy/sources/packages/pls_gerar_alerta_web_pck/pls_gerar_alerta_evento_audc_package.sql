-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_gerar_alerta_web_pck.pls_gerar_alerta_evento_audc ( ie_tipo_evento_p pls_regra_geracao_evento.ie_evento_disparo%type, ie_tipo_processo_audc_p pls_regra_geracao_evento.ie_tipo_processo_audc%type, nr_seq_audc_atend_p audc_atendimento.nr_sequencia%type, ie_executa_commit_p text, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar alerta de evento.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta: 
[ X ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:Performance.
-------------------------------------------------------------------------------------------------------------------
Referências:
Eventos ie_evento_disparo 14 - Auditoria Concorrente

IE_TIPO_PROCESSO_AUDC
1 Gerar atendimento para auditoria concorrente
2 Encerrar auditoria concorrente
3 Solicitar justificativa auditoria concorrente
4 Responder justificativa auditoria concorrente
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
C01 CURSOR(	ie_tipo_evento_pc		pls_regra_geracao_evento.ie_evento_disparo%type,
		ie_tipo_processo_audc_pc	pls_regra_geracao_evento.ie_tipo_processo_audc%type) FOR
		
	SELECT	nr_sequencia,
		nr_seq_evento_mens
	from	pls_regra_geracao_evento
	where	ie_situacao			= 'A'
	and	ie_evento_disparo		= ie_tipo_evento_pc
	and	ie_tipo_processo_audc		= ie_tipo_processo_audc_pc;
	

C02 CURSOR(	nr_seq_evento_mens_pc		pls_alerta_evento_mensagem.nr_sequencia%type ) FOR
	SELECT	b.ds_mensagem,
		b.ie_tipo_envio,
		b.ds_titulo,
		b.nr_seq_tipo_evento,
		b.ds_remetente_sms,
		b.ds_remetente_email		
	from	pls_tipo_alerta_evento a,
		pls_alerta_evento_mensagem b
	where 	b.nr_seq_tipo_evento = a.nr_sequencia
	and	b.nr_sequencia	= nr_seq_evento_mens_pc
	and	b.ie_situacao	= 'A'
	and	a.ie_situacao   = 'A';
	

C03 CURSOR(	nr_seq_evento_mens_pc		pls_alerta_evento_mensagem.nr_sequencia%type ) FOR
	SELECT	nr_sequencia,
		ie_forma_envio,
		ie_tipo_pessoa_dest
	from	pls_alerta_evento_destino
	where	nr_seq_evento_mens	= nr_seq_evento_mens_pc
	and	ie_situacao 		= 'A';

	
C04 CURSOR( nr_seq_prestador_pc	pls_prestador.nr_sequencia%type) FOR
	SELECT	nm_usuario_web,
		pls_obter_param_web(1246, 68, cd_estabelecimento, nr_sequencia, nr_seq_perfil_web, null, null,'P', null,null) vl_parametro
	from	pls_usuario_web
	where	nr_seq_prestador = nr_seq_prestador_pc
	and     ie_situacao = 'A'
	
union
	
	SELECT  nm_usuario_web,
		pls_obter_param_web(1246, 68, a.cd_estabelecimento, a.nr_sequencia, a.nr_seq_perfil_web, null, null,'P', null,null) vl_parametro
	from    pls_usuario_web a,
		pls_prestador_usuario_web b
	where   b.nr_seq_usuario = a.nr_sequencia
	and     b.nr_seq_prestador = nr_seq_prestador_pc
	and     b.ie_situacao = 'A';	
	
C05 CURSOR( nr_seq_audc_atend_pc audc_atendimento.nr_sequencia%type ) FOR
	SELECT  distinct c.nm_usuario_exec,
		(SELECT u.ds_email from usuario u where u.nm_usuario = c.nm_usuario_exec) ds_email
	from    audc_atend_grupo_aud a,
		pls_grupo_auditor b,
		pls_membro_grupo_aud c
	where   a.nr_seq_grupo = b.nr_sequencia
	and     c.nr_Seq_grupo = b.nr_sequencia
	and	c.ie_situacao = 'A'
	and     a.nr_seq_audc_atend = nr_seq_audc_atend_pc;
	

nr_seq_prestador_w 		pls_prestador.nr_sequencia%type;
nr_seq_evento_controle_w	pls_alerta_evento_controle.nr_sequencia%type;
ds_email_dest_w			varchar(255);
ds_usuarios_w			varchar(4000);
BEGIN

if ( ie_tipo_evento_p = 14 and (nr_seq_audc_atend_p IS NOT NULL AND nr_seq_audc_atend_p::text <> '') ) then
	
	select 	max(nr_seq_prestador_solic)
	into STRICT	nr_seq_prestador_w
	from 	audc_atendimento
	where	nr_sequencia = nr_seq_audc_atend_p;
	
end if;	

for c01_w in C01( ie_tipo_evento_p, ie_tipo_processo_audc_p) loop
	
	nr_seq_evento_controle_w := null;
	
	for c02_w  in C02( c01_w.nr_seq_evento_mens ) loop
		
		if ( coalesce(nr_seq_evento_controle_w::text, '') = '' ) then
			nr_seq_evento_controle_w  := pls_gerar_alerta_web_pck.pls_gerar_evento_controle( ie_tipo_evento_p, c02_w.nr_seq_tipo_evento, c02_w.ds_titulo, c02_w.ds_mensagem, nm_usuario_p, nr_seq_evento_controle_w );
		end if;	
		
		for c03_w in C03( c01_w.nr_seq_evento_mens ) loop
			
			if ( c03_w.ie_forma_envio = 'EM') then
				
				begin
					if ( c03_w.ie_tipo_pessoa_dest = 'PR') then
	
						ds_email_dest_w := substr(pls_obter_dados_prestador( nr_seq_prestador_w,'M'), 0, 255);	
					
						if (ds_email_dest_w IS NOT NULL AND ds_email_dest_w::text <> '' AND c02_w.ds_remetente_email IS NOT NULL AND c02_w.ds_remetente_email::text <> '') then
							CALL enviar_email( c02_w.ds_titulo, c02_w.ds_mensagem, c02_w.ds_remetente_email, ds_email_dest_w, nm_usuario_p, 'M');
							CALL pls_gerar_alerta_web_pck.pls_gerar_evento_controle_dest( nr_seq_evento_controle_w, c03_w.ie_forma_envio,c03_w.ie_tipo_pessoa_dest, c02_w.ds_mensagem, nm_usuario_p);
						end if;
					
					elsif ( c03_w.ie_tipo_pessoa_dest = 'AU' ) then
					
						for c05_w in C05( nr_seq_audc_atend_p ) loop						
							if (c05_w.ds_email IS NOT NULL AND c05_w.ds_email::text <> '' AND c02_w.ds_remetente_email IS NOT NULL AND c02_w.ds_remetente_email::text <> '') then
								CALL enviar_email( c02_w.ds_titulo, c02_w.ds_mensagem, c02_w.ds_remetente_email, c05_w.ds_email, nm_usuario_p, 'M');
								CALL pls_gerar_alerta_web_pck.pls_gerar_evento_controle_dest( nr_seq_evento_controle_w, c03_w.ie_forma_envio,c03_w.ie_tipo_pessoa_dest, c02_w.ds_mensagem, nm_usuario_p);
							end if;
						end loop;
					end if;
					
				exception when others then
					ds_email_dest_w := null;
				end;	
				
			elsif ( c03_w.ie_forma_envio = 'NTF') then
				if ( c03_w.ie_tipo_pessoa_dest = 'PR') then	
						
						/*Bloco utilizado para obter os logins do prestador que possuem acesso a Auditoria Concorrente*/

						ds_usuarios_w := null;
						for c04_w in C04( nr_seq_prestador_w ) loop								
							
							if ( c04_w.vl_parametro = 'S') then
								if ( coalesce(ds_usuarios_w::text, '') = '' ) then							
									ds_usuarios_w := c04_w.nm_usuario_web;
								else
									ds_usuarios_w := ds_usuarios_w || ','||c04_w.nm_usuario_web;
								end if;
							end if;
						end loop;
						
						if (ds_usuarios_w IS NOT NULL AND ds_usuarios_w::text <> '') then	
							CALL pls_gerar_alerta_web_pck.pls_gerar_notificacao_web( c02_w.ds_titulo, c02_w.ds_mensagem, ds_usuarios_w, null, 'P', nm_usuario_p);	
							CALL pls_gerar_alerta_web_pck.pls_gerar_evento_controle_dest( nr_seq_evento_controle_w, c03_w.ie_forma_envio,c03_w.ie_tipo_pessoa_dest, c02_w.ds_mensagem, nm_usuario_p);
						end if;
						
				elsif ( c03_w.ie_tipo_pessoa_dest = 'AU' ) then
						/* Bloco utilizado para obter os logins auditor concorrente que possuem acesso a Auditoria Concorrente */

						ds_usuarios_w := null;
						for c05_w in C05( nr_seq_audc_atend_p ) loop	
						
							if ( coalesce(ds_usuarios_w::text, '') = '' ) then							
								ds_usuarios_w := c05_w.nm_usuario_exec;
							else
								ds_usuarios_w := ds_usuarios_w || ','||c05_w.nm_usuario_exec;
							end if;
						end loop;
												
						if (ds_usuarios_w IS NOT NULL AND ds_usuarios_w::text <> '') then
							CALL pls_gerar_alerta_web_pck.pls_gerar_notificacao_web( c02_w.ds_titulo, c02_w.ds_mensagem, null, ds_usuarios_w, 'AC', nm_usuario_p);
							CALL pls_gerar_alerta_web_pck.pls_gerar_evento_controle_dest( nr_seq_evento_controle_w, c03_w.ie_forma_envio,c03_w.ie_tipo_pessoa_dest, c02_w.ds_mensagem, nm_usuario_p);	
						end if;	
				end if;
			end if;
			
			if ( ie_executa_commit_p = 'S' ) then
				commit;
			end if;			
		end loop;
	end loop;
end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_alerta_web_pck.pls_gerar_alerta_evento_audc ( ie_tipo_evento_p pls_regra_geracao_evento.ie_evento_disparo%type, ie_tipo_processo_audc_p pls_regra_geracao_evento.ie_tipo_processo_audc%type, nr_seq_audc_atend_p audc_atendimento.nr_sequencia%type, ie_executa_commit_p text, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
