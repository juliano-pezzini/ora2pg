-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE nais_mla_pck.get_action_code_med_detail ( messagetype_p text, record_p medtreatmentinforedtyp, message_data INOUT text ) AS $body$
DECLARE

        record_w     medtreatmentinforedtyp;
        actioncode   varchar(10);
        int_tasy_code_w bigint;
        medical_affair_code nais_conversion_master%rowtype;

BEGIN
        PERFORM set_config('nais_mla_pck.ds_line_w', null, false);
        record_w := record_p;
        record_w.nr_data_class := '01';

        case
            when( messagetype_p = 'L0' ) then
                medical_affair_code := get_medicalaffair_code('PH','PROC_INTERNO','NR_SEQUENCIA',record_w.internal_code, null, null);--record_w.internal_code
                if (medical_affair_code.cd_medical_action IS NOT NULL AND medical_affair_code.cd_medical_action::text <> '') then
                    record_w.internal_code := rpad(medical_affair_code.cd_medical_action, 6, ' ');
                else
                    record_w.internal_code := rpad('.6000', 6, ' ');
                end if;

            when( messagetype_p = 'F0' ) then
                record_w.internal_code := rpad('.7000', 6, ' ');
            when( messagetype_p in ('H0', 'H8')) then
                message_data := nais_mla_pck.get_action_code(record_w.nr_seq_interno, message_data);
                record_w.internal_code := message_data;
            when( messagetype_p = 'I0' ) then
                if (record_w.internal_code IS NOT NULL AND record_w.internal_code::text <> '') then
                    record_w.internal_code := rpad(record_w.internal_code, 6, ' ');
                else
                    record_w.internal_code := rpad('.3300', 6, ' ');
                end if;

            when(messagetype_p = 'H3' or messagetype_p = 'H1' or messagetype_p = 'HJ' ) then


		select (substr(d.cd_intervalo,1,2))::numeric
                  into STRICT int_tasy_code_w
                  from  prescr_material   p,
                        cpoe_material     c,
                        cpoe_order_unit   a,
                        cpoe_tipo_pedido  cp,	
                        cpoe_rp           d
                  where   p.nr_seq_interno              = record_w.nr_seq_interno
                        and p.nr_seq_mat_cpoe           = c.nr_sequencia
                        and a.nr_seq_cpoe_tipo_pedido   = cp.nr_sequencia
                        and c.nr_seq_cpoe_order_unit    = a.nr_sequencia
                        and  d.nr_sequencia             = c.nr_seq_cpoe_rp;

                medical_affair_code :=get_medicalaffair_code('KK','CPOE_MATERIAL','CD_INTERVALO',int_tasy_code_w);

                if coalesce(medical_affair_code.CD_MEDICAL_ACTION::text, '') = '' and int_tasy_code_w =10 then
                    record_w.internal_code :='.2100';

                elsif  coalesce(medical_affair_code.CD_MEDICAL_ACTION::text, '') = '' and int_tasy_code_w =20 then
                    record_w.internal_code :='.2200';

                elsif  coalesce(medical_affair_code.CD_MEDICAL_ACTION::text, '') = '' and int_tasy_code_w >29 and  int_tasy_code_w <=59 then
                   record_w.internal_code :='.2300';
                end if;

                when( messagetype_p = 'E0' or messagetype_p = 'E8' ) then
                    medical_affair_code :=get_medicalaffair_code('KK','PROC_INTERNO','NR_SEQUENCIA',record_w.internal_code);

                    if coalesce(medical_affair_code.CD_MEDICAL_ACTION::text, '') = '' then
                        record_w.internal_code :='.6000';
                    end if;
        end case;

        record_w.dosage := 0;
        record_w.unit := ' ';
        record_w.free_comments := ' ';
        CALL CALL CALL CALL nais_mla_pck.common_med_treatment_info(record_w);
        message_data := current_setting('nais_mla_pck.ds_line_w')::varchar(32767);

    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE nais_mla_pck.get_action_code_med_detail ( messagetype_p text, record_p medtreatmentinforedtyp, message_data INOUT text ) FROM PUBLIC;
