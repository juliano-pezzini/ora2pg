-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


CREATE TYPE r_c03_array_w AS (r_c03_array_w medtreatmentinforedtyp[100]);


CREATE OR REPLACE PROCEDURE nais_mla_pck.send_radiology_data (( nr_seq_register_p bigint, nr_order_unit_p cpoe_order_unit.nr_order_unit%type ) is nr_prescricao_w prescr_medica.nr_prescricao%type) RETURNS ACCINFORECTYP AS $body$
DECLARE

        PERFORM  nr_processing_class_w   process_classif,
                order_class_w           order_class,
                coalesce(a.nr_order_patient_seq, 0)  order_number,
                coalesce(obter_prontuario_paciente(obter_dados_prescricao(e.nr_prescricao , 'P' )), 0)         patient_identifier,
                to_char(e.dt_exam_exec, 'YYYYMMDD') consultation_date,
                case when (a.cd_especialidade_med IS NOT NULL AND a.cd_especialidade_med::text <> '') then
                         coalesce(nais_mla_pck.get_affairs_code('OS', 'ESPECIALIDADE_MEDICA', 'CD_ESPECIALIDADE', a.cd_especialidade_med), ' ') 
                     when (a.cd_departamento_med IS NOT NULL AND a.cd_departamento_med::text <> '') then 
                         coalesce(nais_mla_pck.get_affairs_code('OS', 'DEPARTAMENTO_MEDICO', 'CD_DEPARTAMENTO', a.cd_departamento_med), ' ')   
                     else '00'
                end as department_code,
                CASE WHEN nais_mla_pck.get_in_out_patient_classif(c.cd_pessoa_fisica, coalesce(e.dt_exam_exec,clock_timestamp()))='O' THEN 1  ELSE 2 END  patient_classification,
                coalesce(g.bed_id,' ') ward_code,
                coalesce(g.room_id, ' ') room_number,
                '1' blood_tranfusion_type,
                coalesce(c.nr_seq_nais_insurance, 0) insurance_number,
                coalesce(e.cd_doctor_id, '0') doctor_code,
                ' ' patient_newborn,
                ' ' prescription_classfication,
                ' ' requestor_code,   
                ' ' mutual_exclusion_rule,
                '0' division_number,
                ' ' blank_one,
                ' ' blank_two

        from    cpoe_order_unit a,
                cpoe_procedimento c,
                prescr_procedimento d,
                ris_exam_exec_info e,
                prescr_medica f,
                bft_encounter_v g
        where   a.nr_sequencia = c.nr_seq_cpoe_order_unit    
        and     c.nr_sequencia = d.nr_seq_proc_cpoe
        and     d.nr_prescricao = e.nr_prescricao
        and     e.nr_prescricao = f.nr_prescricao
        and     f.nr_atendimento = g.nr_atendimento
        and     a.nr_order_unit = nr_order_unit_p
        and 	e.nr_sequencia = nr_seq_register_p  LIMIT 1;

    --  End of Accounting Information
        c02 CURSOR FOR
        SELECT  ' ' execution_classification,
                to_char(a.dt_exam_exec, 'YYYYMMDD') execution_date,
                to_char(a.dt_exam_exec, 'HH24MI') execution_time,
                '   ' execution_op_code,
                ' ' execution_up_flag,
                '000000' execution_weight,
                '0' out_of_hours_flag,
                ' ' execution_blank
        from    ris_exam_exec_info a,
                prescr_medica e,
                bft_encounter_v f
        where   a.nr_prescricao = e.nr_prescricao
        and     e.nr_atendimento = f.encounter_id
        and     a.nr_sequencia = nr_seq_register_p;
    -- End of Execution Information
        r_c01_w                 accinforectyp;
        r_c02_w                 execinforedtyp;
        r_c03_w                 medtreatmentinforedtyp;
        cd_contin_flag_w        varchar(1) := 'C';
        loop_count_w            smallint := 0;
        inside_loop_count_w     smallint := 1;
        counter_w               smallint := 0;
        medicine_loop_count_w   smallint := 0;
        med_treatment_count_w   smallint := 0;
        json_output_w           philips_json;
        r_c03_array r_c03_array_w := r_c03_array_w();
        r_c03_ww                medtreatmentinforedtyp;


BEGIN

        PERFORM set_config('nais_mla_pck.ds_line_w', null, false);
        counter_w := 0;
        inside_loop_count_w := 0;
        PERFORM set_config('nais_mla_pck.index_counter_w', 0, false);
        loop_count_w := 0;
        medicine_loop_count_w := 0;
        json_output_w := philips_json();
        PERFORM set_config('nais_mla_pck.med_treamtent', med_treamtent_array(), false);
        begin
            select  coalesce(max(a.nr_prescricao), 0),
                    CASE WHEN coalesce(max(a.ie_cancel), '0')='0' THEN  '01' WHEN coalesce(max(a.ie_cancel), '0')='1' THEN  '03' END ,
                    coalesce(max(c.nr_prontuario), 0),
                    coalesce(max(b.nr_atendimento), 0)
            into STRICT    nr_prescricao_w,
                    nr_processing_class_w,
                    nr_prontuario_w,
                    nr_atendimento_w
            from    ris_exam_exec_info a,
                    prescr_medica b,
                    pessoa_fisica c
            where   a.nr_prescricao = b.nr_prescricao
            and     b.cd_pessoa_fisica = c.cd_pessoa_fisica
            and     a.nr_sequencia = nr_seq_register_p;

        exception
        when others then
            PERFORM set_config('nais_mla_pck.ds_error_w', current_setting('nais_mla_pck.ds_error_w')::varchar(4000)||' An error occured while retriving the Processing classification for '||nr_seq_register_p||' '||sqlerrm, false);
        end;

        r_c03_w.slip_code := '   ';
        r_c03_w.nr_data_class := '01';
        r_c03_w.dosage := 0;
        r_c03_w.unit := ' ';
        r_c03_w.times_num := 1;
        r_c03_w.free_input_flag := 0;
        r_c03_w.free_comments := ' ';
        r_c03_w.med_change_impossible_flg := ' ';
        r_c03_w.general_name_med_flg := ' ';
        r_c03_w.days := 0;
        r_c03_w.times_num_04 := 0;
        r_c03_w.days_num := 0;
        r_c03_w.digit_times_num := 1;
        r_c03_w.digit_days_num := 1;
        r_c03_w.medi_blank := ' ';
        r_c03_w.eot := ' ';
        r_c03_w.nr_seq_interno := 0;

        open c04;			
        loop
        fetch c04 into
            nr_seq_interno_w;
            EXIT WHEN NOT FOUND; /* apply on c04 */
            medicine_loop_count_w := medicine_loop_count_w+1;

            begin
                select	max(x.cd_body_part),
                        max(x.cd_procedure_item),
                        max(x.cd_direction)
                into STRICT  	cd_body_part_w,
                        cd_procedure_item_w,
                        cd_direction_w
                from (
                SELECT  (c.cd_body_part)::numeric  cd_body_part,  -- Body part code
                        null cd_procedure_item,
                        null cd_direction
                from    ris_exam_exec_info a,
                        prescr_procedimento b,
                        ris_exam_exec_proc c
                where   a.nr_prescricao = b.nr_prescricao
                and     a.nr_seq_order  = b.nr_sequencia
                and     c.nr_sequencia = nr_seq_interno_w
                and     c.nr_seq_ris_exam_exec_info = a.nr_sequencia
                
union all

                SELECT  null, 
                        d.cd_comment_code,  -- Procedure code
                        null 
                from    ris_exam_exec_info a,
                        prescr_procedimento b,
                        ris_exam_exec_proc c,
                        ris_exam_exec_comment d
                where   a.nr_prescricao = b.nr_prescricao
                and     a.nr_seq_order  = b.nr_sequencia
                and     c.nr_sequencia = nr_seq_interno_w
                and     c.nr_seq_ris_exam_exec_info = a.nr_sequencia
                and     d.nr_seq_ris_exam_exec_proc = c.nr_sequencia
                and     d.cd_comment_classif = 33
                
union all

                select  null, 
                        null,  
                        (d.cd_comment_code)::numeric  -- Direction code
                from    ris_exam_exec_info a,
                        prescr_procedimento b,
                        ris_exam_exec_proc c,
                        ris_exam_exec_comment d
                where   a.nr_prescricao = b.nr_prescricao
                and     a.nr_seq_order  = b.nr_sequencia
                and     c.nr_sequencia = nr_seq_interno_w
                and     c.nr_seq_ris_exam_exec_info = a.nr_sequencia
                and     d.nr_seq_ris_exam_exec_proc = c.nr_sequencia
                and     d.cd_comment_classif = 32) x;


                procedure_data_w :=	get_medicalaffair_code('R','RIS_EXAM_EXEC_COMMENT','CD_COMMENT_CODE',cd_procedure_item_w,cd_body_part_w,cd_direction_w);

                current_setting('nais_mla_pck.ds_line_w')::varchar(32767) := nais_mla_pck.get_action_code_med_detail(order_class_w, r_c03_w, current_setting('nais_mla_pck.ds_line_w')::varchar(32767));
                CALL CALL CALL CALL nais_mla_pck.add_med_treatment_detail_array(current_setting('nais_mla_pck.ds_line_w')::varchar(32767), current_setting('nais_mla_pck.index_counter_w')::smallint);

                if (procedure_data_w.cd_medical_affair IS NOT NULL AND procedure_data_w.cd_medical_affair::text <> '') then
                    r_c03_w.internal_code := procedure_data_w.cd_medical_affair;
                    CALL CALL CALL CALL nais_mla_pck.common_med_treatment_info(r_c03_w);
                    CALL CALL CALL CALL nais_mla_pck.add_med_treatment_detail_array(current_setting('nais_mla_pck.ds_line_w')::varchar(32767), current_setting('nais_mla_pck.index_counter_w')::smallint);
                end if;

                if (procedure_data_w.cd_medical_affair_two IS NOT NULL AND procedure_data_w.cd_medical_affair_two::text <> '') then
                    r_c03_w.internal_code := procedure_data_w.cd_medical_affair_two;
                    CALL CALL CALL CALL nais_mla_pck.common_med_treatment_info(r_c03_w);
                    CALL CALL CALL CALL nais_mla_pck.add_med_treatment_detail_array(current_setting('nais_mla_pck.ds_line_w')::varchar(32767), current_setting('nais_mla_pck.index_counter_w')::smallint);
                end if;
            exception
            when others then
                PERFORM set_config('nais_mla_pck.ds_error_w', current_setting('nais_mla_pck.ds_error_w')::varchar(4000)||' An error occured while forming the Medical treatment information based on body part, procedure code and direction code for Radiology message '
||sqlerrm, false);
            end;
            begin
                open c05;			
                loop
                    fetch c05 into
                        cd_film_w,
                        nr_exposure_count_w,
                        nr_fraction_count_w;	
                    EXIT WHEN NOT FOUND; /* apply on c05 */


                    film_data_w :=	get_medicalaffair_code('R','RIS_EXAM_EXEC_FILM','CD_FILM',cd_film_w,null,null);

                    if (film_data_w.cd_medical_affair IS NOT NULL AND film_data_w.cd_medical_affair::text <> '') then
                        r_c03_w.internal_code := film_data_w.cd_medical_affair;
                        r_c03_w.dosage := (coalesce(nr_exposure_count_w, 0))::numeric *1000;
                        r_c03_w.times_num := coalesce(nr_fraction_count_w, 0);
                        if (r_c03_array.count = 0) then
                             r_c03_array.extend;
                             r_c03_array(1) := r_c03_w;
                        else
                            for i in 1..r_c03_array.count loop
                                begin
                                    r_c03_ww := r_c03_array(i);
                                    if (r_c03_ww.internal_code = r_c03_w.internal_code) then
                                        r_c03_ww.dosage := r_c03_ww.dosage + r_c03_w.dosage;
                                        r_c03_array(i) := r_c03_ww;
                                        exit;
                                    elsif (r_c03_array.count = i)then
                                        r_c03_array.extend;
                                        r_c03_array(i + 1) := r_c03_w;
                                        exit;
                                    end if;
                                end;
                             end loop;
                        end if;
                    end if;

                end loop;
                close c05;

                r_c03_ww := null;
                for i in 1..r_c03_array.count loop
                    begin
                        r_c03_ww := r_c03_array(i);
                        if (r_c03_ww.internal_code IS NOT NULL AND r_c03_ww.internal_code::text <> '') then
                            CALL CALL CALL CALL nais_mla_pck.common_med_treatment_info(r_c03_ww);
                            CALL CALL CALL CALL nais_mla_pck.add_med_treatment_detail_array(current_setting('nais_mla_pck.ds_line_w')::varchar(32767), current_setting('nais_mla_pck.index_counter_w')::smallint);
                        end if;
                    end;
                end loop;

                if (procedure_data_w.cd_additional_item IS NOT NULL AND procedure_data_w.cd_additional_item::text <> '') then
                    r_c03_w.internal_code := procedure_data_w.cd_additional_item;
                    r_c03_w.dosage := 0;
                    r_c03_w.times_num := 1;
                    CALL CALL CALL CALL nais_mla_pck.common_med_treatment_info(r_c03_w);
                    CALL CALL CALL CALL nais_mla_pck.add_med_treatment_detail_array(current_setting('nais_mla_pck.ds_line_w')::varchar(32767), current_setting('nais_mla_pck.index_counter_w')::smallint);
                end if;
            exception
            when others then
                PERFORM set_config('nais_mla_pck.ds_error_w', current_setting('nais_mla_pck.ds_error_w')::varchar(4000)||' An error occured while forming the Medical treatment information for Film Code '||sqlerrm, false);
            end;

            begin
                open c08;
                loop
                fetch c08 into
                    nr_linkage_sequencia_w,
                    cd_external_w;
                    EXIT WHEN NOT FOUND; /* apply on c08 */
                        CALL CALL nais_mla_pck.process_receipt_comments(r_c03_w, cd_external_w, nr_linkage_sequencia_w);
                end loop;
                close c08;
            exception
            when others then
                PERFORM set_config('nais_mla_pck.ds_error_w', current_setting('nais_mla_pck.ds_error_w')::varchar(4000)||' An error occured while forming the Medical treatment information for comments and additional text '||sqlerrm, false);
            end;

            if (medicine_loop_count_w = 1) then
                begin
                    open c06;			
                    loop
                        fetch c06 into
                            cd_material_used_w,
                            vl_amount_used_w;
                        EXIT WHEN NOT FOUND; /* apply on c06 */

                        medicine_data_w :=	get_medicalaffair_code('R','MATERIAL','CD_MATERIAL',cd_material_used_w,null,null);

                        if (medicine_data_w.cd_medical_affair IS NOT NULL AND medicine_data_w.cd_medical_affair::text <> '') then
                            r_c03_w.internal_code := medicine_data_w.cd_medical_affair;

                            if ((medicine_data_w.nr_conversion_factor IS NOT NULL AND medicine_data_w.nr_conversion_factor::text <> '') and vl_amount_used_w<>0) then
                                r_c03_w.dosage := ceil((vl_amount_used_w)::numeric /(medicine_data_w.nr_conversion_factor)::numeric )*1000;
                            else
                                r_c03_w.dosage := (coalesce(vl_amount_used_w, 0))::numeric *1000;
                            end if;

                            CALL CALL CALL CALL nais_mla_pck.common_med_treatment_info(r_c03_w);
                            CALL CALL CALL CALL nais_mla_pck.add_med_treatment_detail_array(current_setting('nais_mla_pck.ds_line_w')::varchar(32767), current_setting('nais_mla_pck.index_counter_w')::smallint);
                        end if;

                    end loop;
                    close c06;
                exception
                when others then
                    PERFORM set_config('nais_mla_pck.ds_error_w', current_setting('nais_mla_pck.ds_error_w')::varchar(4000)||' An error occured while forming the Medical treatment information for Drug '||sqlerrm, false);
                end;
                begin
                    open c07;			
                    loop
                        fetch c07 into
                             cd_material_used_w,
                             vl_amount_used_w;
                        EXIT WHEN NOT FOUND; /* apply on c07 */
                        material_data_w :=	get_medicalaffair_code('R','MATERIAL','CD_MATERIAL',cd_material_used_w,null,null);

                        if (material_data_w.cd_medical_affair IS NOT NULL AND material_data_w.cd_medical_affair::text <> '') then
                            r_c03_w.internal_code := material_data_w.cd_medical_affair;

                            if ((material_data_w.nr_conversion_factor IS NOT NULL AND material_data_w.nr_conversion_factor::text <> '') and vl_amount_used_w<>0) then
                                r_c03_w.dosage := ceil((vl_amount_used_w)::numeric /(material_data_w.nr_conversion_factor)::numeric )*1000;
                            else
                                r_c03_w.dosage := (coalesce(vl_amount_used_w, 0))::numeric *1000;
                            end if;

                            CALL CALL CALL CALL nais_mla_pck.common_med_treatment_info(r_c03_w);
                            CALL CALL CALL CALL nais_mla_pck.add_med_treatment_detail_array(current_setting('nais_mla_pck.ds_line_w')::varchar(32767), current_setting('nais_mla_pck.index_counter_w')::smallint);
                        end if;
                    end loop;
                    close c07;
                exception
                when others then
                    PERFORM set_config('nais_mla_pck.ds_error_w', current_setting('nais_mla_pck.ds_error_w')::varchar(4000)||' An error occured while forming the Medical treatment information for Equipment '||sqlerrm, false);
                end;
            end if;

            current_setting('nais_mla_pck.ds_line_w')::varchar(32767) := nais_mla_pck.add_date_class_med_detail(order_class_w, r_c03_w, current_setting('nais_mla_pck.ds_line_w')::varchar(32767));
            CALL CALL CALL CALL nais_mla_pck.add_med_treatment_detail_array(current_setting('nais_mla_pck.ds_line_w')::varchar(32767), current_setting('nais_mla_pck.index_counter_w')::smallint);

        end loop;
        close c04;

        loop_count_w := ceil(current_setting('nais_mla_pck.index_counter_w')::smallint / 10);
        for i in 1..loop_count_w loop begin
            if ( i = loop_count_w ) then
                cd_contin_flag_w := 'E';
            end if;
            CALL CALL CALL CALL CALL CALL CALL nais_mla_pck.nais_common_header('KK', 0, nr_processing_class_w, cd_contin_flag_w, 1,
                               810, 944);--657
            begin
                open c01;
                loop
                    fetch c01 into r_c01_w;
                    EXIT WHEN NOT FOUND; /* apply on c01 */
                    CALL CALL CALL CALL CALL nais_mla_pck.common_accounting_info(r_c01_w);
                end loop;
                close c01;
            exception
            when others then
                PERFORM set_config('nais_mla_pck.ds_error_w', current_setting('nais_mla_pck.ds_error_w')::varchar(4000)||' An error occured while forming the Accounting information for '||nr_seq_register_p||' '||sqlerrm, false);
            end;

            begin
                open c02;
                loop
                    fetch c02 into r_c02_w;
                    EXIT WHEN NOT FOUND; /* apply on c02 */
                    CALL CALL CALL CALL CALL nais_mla_pck.common_execution_info(r_c02_w);
                end loop;
                close c02;
            exception
            when others then
                PERFORM set_config('nais_mla_pck.ds_error_w', current_setting('nais_mla_pck.ds_error_w')::varchar(4000)||' An error occured while forming the Execution information for '||nr_seq_register_p||' '||sqlerrm, false);
            end;

            CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_pck.append_text('000', 3, 'R');
            med_treatment_count_w := mod(current_setting('nais_mla_pck.index_counter_w')::smallint,10);
            if (cd_contin_flag_w = 'C' or (cd_contin_flag_w = 'E' and med_treatment_count_w = 0)) then
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_pck.append_text(10, 2, 'L', '0');
            else
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_pck.append_text(med_treatment_count_w, 2, 'L', '0');
            end if;

            inside_loop_count_w := counter_w + 1;
            for x in inside_loop_count_w..inside_loop_count_w + 9 loop
                counter_w := counter_w + 1;
                current_setting('nais_mla_pck.med_treamtent')::med_treamtent_array.extend;
                if ( cd_contin_flag_w = 'E' and current_setting('nais_mla_pck.med_treamtent')::coalesce(med_treamtent_array(x)::text, '') = '' ) then
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_pck.append_text(' ', 64);
                else
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_pck.append_text(current_setting('nais_mla_pck.med_treamtent')::med_treamtent_array(x), 64, 'R');
                end if;

            end loop;

            CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_pck.append_text(' ', 4, 'R');
            CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_pck.append_text(chr(13), 1, 'R');

            json_output_w := nais_mla_pck.add_json_value(json_output_w, 'message', current_setting('nais_mla_pck.ds_line_w')::varchar(32767));
            current_setting('nais_mla_pck.json_output_list_w')::philips_json_list.append(json_output_w.to_json_value());
            PERFORM set_config('nais_mla_pck.ds_line_w', null, false);
        end;
        end loop;

    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE nais_mla_pck.send_radiology_data (( nr_seq_register_p bigint, nr_order_unit_p cpoe_order_unit.nr_order_unit%type ) is nr_prescricao_w prescr_medica.nr_prescricao%type) FROM PUBLIC;
