-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE nais_mla_pck.get_additional_med_detail ( messagetype_p text, record_p medtreatmentinforedtyp, message_data INOUT text ) AS $body$
DECLARE


    c04 CURSOR FOR

        SELECT substr(obter_conversao_externa_int(null,'CPOE_STD_COMMENT','CD_EXTERNAL', coalesce(cs.cd_external,' '), 'NAIS' ),1,6) cd_external ,
          case 
             when (to_char(cl.ds_additional_text) IS NOT NULL AND (to_char(cl.ds_additional_text))::text <> '') then 
                         cl.ds_additional_text
               when (to_char(cl.nr_additional_text) IS NOT NULL AND (to_char(cl.nr_additional_text))::text <> '') then 
                         to_char(cl.nr_additional_text * 1000)
               when (to_char(cl.dt_additional_text) IS NOT NULL AND (to_char(cl.dt_additional_text))::text <> '') and cs.si_format_value=0  then 
                         to_char(cl.dt_additional_text,'YYYYMMDD')
               when (to_char(cl.dt_additional_text) IS NOT NULL AND (to_char(cl.dt_additional_text))::text <> '') and cs.si_format_value=1  then 
                         to_char(cl.dt_additional_text,'DDHH24MI') 
               when (to_char(cl.dt_additional_text) IS NOT NULL AND (to_char(cl.dt_additional_text))::text <> '') and cs.si_format_value=2  then 
                         to_char(cl.dt_additional_text,'HH24MI') 
               else ' '
               end as ds_additional_text_w,
               coalesce(cs.si_format_value,9) format_value
        from    prescr_material p,
                cpoe_material c,
                cpoe_comment_linkage cl,
                cpoe_std_comment cs,
                cpoe_order_unit a,
                cpoe_tipo_pedido cp,	
                cpoe_rp          d
        where   c.nr_sequencia                 = cl.nr_seq_cpoe_material
                and cl.nr_seq_std_comment       = cs.nr_sequencia
                and p.nr_seq_mat_cpoe           = c.nr_sequencia
                and a.nr_seq_cpoe_tipo_pedido   = cp.nr_sequencia
                and c.nr_seq_cpoe_order_unit    = a.nr_sequencia
                and d.nr_sequencia              = c.nr_seq_cpoe_rp
                and coalesce(cs.si_medical_account ,'N') ='Y'
                and p.nr_seq_interno            = record_p.nr_seq_interno;


        c05 CURSOR FOR

        SELECT substr(obter_conversao_externa_int(null,'CPOE_STD_COMMENT','CD_EXTERNAL', coalesce(cs.cd_external,' '), 'NAIS' ),1,6)  cd_external ,
          case 
             when (to_char(cl.ds_additional_text) IS NOT NULL AND (to_char(cl.ds_additional_text))::text <> '') then 
                         cl.ds_additional_text
               when (to_char(cl.nr_additional_text) IS NOT NULL AND (to_char(cl.nr_additional_text))::text <> '') then 
                         to_char(cl.nr_additional_text)
               when (to_char(cl.dt_additional_text) IS NOT NULL AND (to_char(cl.dt_additional_text))::text <> '') and cs.si_format_value=0  then 
                         to_char(cl.dt_additional_text,'YYYYMMDD')
               when (to_char(cl.dt_additional_text) IS NOT NULL AND (to_char(cl.dt_additional_text))::text <> '') and cs.si_format_value=1  then 
                         to_char(cl.dt_additional_text,'DDHH24MI') 
               when (to_char(cl.dt_additional_text) IS NOT NULL AND (to_char(cl.dt_additional_text))::text <> '') and cs.si_format_value=2  then 
                         to_char(cl.dt_additional_text,'HH24MI') 
               else ' '
            end as ds_additional_text_w,
            coalesce(cs.si_format_value,9) format_value
        from   cpoe_procedimento c, 
               prescr_procedimento p ,
               cpoe_comment_linkage cl,
               cpoe_std_comment cs,
               cpoe_order_unit a,
               cpoe_tipo_pedido cp
        where   c.nr_sequencia                       = cl.nr_seq_cpoe_proced
                and cl.nr_seq_std_comment            = cs.nr_sequencia
                and c.nr_sequencia                   = p.nr_seq_proc_cpoe 
                and a.nr_seq_cpoe_tipo_pedido        = cp.nr_sequencia
                and c.nr_seq_cpoe_order_unit         = a.nr_sequencia
                and coalesce(cs.si_medical_account ,'N') ='Y'
                and p.nr_seq_interno            = record_p.nr_seq_interno;
        record_w                     medtreatmentinforedtyp;
        medical_affair_code          nais_conversion_master%rowtype;
        comment_loop_counter_w       smallint;
        comment_index_w              smallint := 0;
        initial_length_w             smallint := 0;
        additional_comment_count_w   smallint := 0;
        comment_external_code        varchar(10);
        ds_additional_text_w         cpoe_comment_linkage.ds_additional_text%type;
        material_rec_w                c04%rowtype;
        exam_rec_w                    c05%rowtype;

BEGIN
        PERFORM set_config('nais_mla_pck.ds_line_w', null, false);
        record_w := record_p;
        record_w.nr_data_class := '01';

		case
        when messagetype_p = 'Material'   then
            open c04;
            loop
                fetch c04 into material_rec_w;
                EXIT WHEN NOT FOUND; /* apply on c04 */
                ds_additional_text_w :=material_rec_w.ds_additional_text_w;

                if (material_rec_w.ds_additional_text_w IS NOT NULL AND material_rec_w.ds_additional_text_w::text <> '') or material_rec_w.ds_additional_text_w <> ' ' then
                    record_w.free_comments := ' ';
                    record_w.free_input_flag := 1;
					record_w.unit  := ' ';
                   begin
                    record_w.dosage :=(ds_additional_text_w )::numeric;
                    exception
                      when data_exception
                      then
                        record_w.dosage :=000001000;
                    end;
                    comment_loop_counter_w := ceil(length(ds_additional_text_w) / 40);
                    comment_index_w := 1;
                    initial_length_w := 40;


                    for j in 1..comment_loop_counter_w loop
                    begin
                        record_w.internal_code := material_rec_w.cd_external;

                        if j = 1 then
                            if material_rec_w.format_value not in (0,1,2,3) then
                                record_w.free_comments := substr(ds_additional_text_w, comment_index_w, initial_length_w);
                            else
                                record_w.free_comments :=' ';
                            end if;
                        else
                            if material_rec_w.format_value not in (0,1,2,3) then
                                comment_index_w := length(record_w.free_comments) +  comment_index_w;
                                record_w.free_comments := substr(ds_additional_text_w, comment_index_w, initial_length_w);
                            else
                                record_w.free_comments :=' ';
                            end if;

                        end if;

                        CALL CALL CALL CALL nais_mla_pck.common_med_treatment_info(record_w);
                         message_data := message_data || current_setting('nais_mla_pck.ds_line_w')::varchar(32767) || ',';
                         PERFORM set_config('nais_mla_pck.ds_line_w', null, false);
                    end;
                    end loop;
			else
					record_w.free_comments := ' ';
					record_w.free_input_flag := 0;
					record_w.unit  := ' ';
					record_w.dosage :=000001000;
					record_w.internal_code := material_rec_w.cd_external;
                    CALL CALL CALL CALL nais_mla_pck.common_med_treatment_info(record_w);
                     message_data := message_data || current_setting('nais_mla_pck.ds_line_w')::varchar(32767) || ',';
                     PERFORM set_config('nais_mla_pck.ds_line_w', null, false);

            end if;
            end loop;
        close c04;
        when    messagetype_p = 'Exam' then
        open c05;
            loop
                fetch c05 into  exam_rec_w;
                EXIT WHEN NOT FOUND; /* apply on c05 */
                ds_additional_text_w :=exam_rec_w.ds_additional_text_w;

                    if (ds_additional_text_w IS NOT NULL AND ds_additional_text_w::text <> '') or ds_additional_text_w <> ' ' then

                                record_w.free_comments := ' ';
                                record_w.free_input_flag := 1;
                                record_w.unit  := ' ';
                                begin
                                    record_w.dosage :=(ds_additional_text_w )::numeric;
                                    exception
                                      when data_exception
                                      then
                                        record_w.dosage :=000001000;
                                    end;
                                comment_loop_counter_w := ceil(length(ds_additional_text_w) / 40);
                                comment_index_w := 1;
                                initial_length_w := 40;

                            for j in 1..comment_loop_counter_w loop begin

                                record_w.internal_code := exam_rec_w.cd_external;
                                if j = 1 then
                                    if exam_rec_w.format_value not in (0,1,2,3) then
                                        record_w.free_comments := substr(ds_additional_text_w, comment_index_w, initial_length_w);
                                    else
                                        record_w.free_comments :=' ';
                                    end if;
                                else
                                    if exam_rec_w.format_value not in (0,1,2,3) then
                                        comment_index_w := length(record_w.free_comments) +  comment_index_w;
                                        record_w.free_comments := substr(ds_additional_text_w, comment_index_w, initial_length_w);
                                    else
                                        record_w.free_comments :=' ';
                                    end if;

                                end if;

                                CALL CALL CALL CALL nais_mla_pck.common_med_treatment_info(record_w);
                                message_data := message_data || current_setting('nais_mla_pck.ds_line_w')::varchar(32767) || ',';
                                PERFORM set_config('nais_mla_pck.ds_line_w', null, false);

                            end;
                            end loop;
                    else
                                record_w.free_comments := ' ';
                                record_w.free_input_flag := 0;
                                record_w.unit  := ' ';
                                record_w.dosage :=000001000;
                                record_w.internal_code := exam_rec_w.cd_external;
                                CALL CALL CALL CALL nais_mla_pck.common_med_treatment_info(record_w);
                                message_data := message_data || current_setting('nais_mla_pck.ds_line_w')::varchar(32767) || ',';
                                PERFORM set_config('nais_mla_pck.ds_line_w', null, false);
                    end if;
            end loop;

        close c05;
       else
            record_w.internal_code :='XX2002';
            record_w.dosage :=000001000;
            record_w.free_comments := ' ';
            record_w.free_input_flag := 0;
            record_w.unit  := ' ';
            CALL CALL CALL CALL nais_mla_pck.common_med_treatment_info(record_w);
            CALL CALL CALL CALL nais_mla_pck.add_med_treatment_detail_array(current_setting('nais_mla_pck.ds_line_w')::varchar(32767), current_setting('nais_mla_pck.index_counter_w')::smallint);
       end case;

    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE nais_mla_pck.get_additional_med_detail ( messagetype_p text, record_p medtreatmentinforedtyp, message_data INOUT text ) FROM PUBLIC;
