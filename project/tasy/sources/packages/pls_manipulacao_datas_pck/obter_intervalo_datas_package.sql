-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_manipulacao_datas_pck.obter_intervalo_datas ( dt_inicio_p timestamp, dt_fim_p timestamp, ie_tipo_agrupamento_p text, ie_trunc_p text default 'S', qt_reincidencia_p integer default 1) RETURNS SETOF T_DATA_RETORNO_DATA AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: 	Obter todas as datas no intervalo entre as datas passadas por parâmetro conforme
	opção de agrupamento passada por parâmetro.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta: 
[X] Objetos do dicionário [ X] Tasy (Delphi/Java) [X] Portal [X]  Relatórios [X] Outros:
------------------------------------------------------------------------------------------------------------------
Pontos de atenção: 

Alterações: 
------------------------------------------------------------------------------------------------------------------
jjung 06/08/2013 - Documentação da function.
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
/*
	ie_tipo_agrupamento_p 		-> M - retorna as datas por mes.
				-> D - retorna as datas por dia.
				-> S - retorna as datas por semana
				-> SS - retorna as datas por segundo
*/
dt_retorno_w	t_data_retorno_row;

-- Obtem as datas do intervalo por mês
C01 CURSOR(dt_inicio_p		timestamp,
	   dt_fim_p		timestamp,
	   ie_trunc_p		text,
	   qt_reincidencia_p	integer) FOR
	SELECT 	dt_retorno
	from	table(pls_manipulacao_datas_pck.obter_intervalo_por_mes(dt_inicio_p, dt_fim_p, ie_trunc_p, qt_reincidencia_p));
	
-- Obtem as datas do intervalo por dia
C02 CURSOR(dt_inicio_p		timestamp,
	   dt_fim_p		timestamp,
	   ie_trunc_p		text,
	   qt_reincidencia_p	integer) FOR
	SELECT 	dt_retorno
	from	table(pls_manipulacao_datas_pck.obter_intervalo_por_dia(dt_inicio_p, dt_fim_p, ie_trunc_p, qt_reincidencia_p));

C03 CURSOR(dt_inicio_p		timestamp,
	   dt_fim_p		timestamp,
	   ie_trunc_p		text,
	   qt_reincidencia_p	integer) FOR
	SELECT	dt_retorno
	from	table(pls_manipulacao_datas_pck.obter_intervalo_por_semana(dt_inicio_p, dt_fim_p, ie_trunc_p, qt_reincidencia_p));
	
C04 CURSOR(dt_inicio_p		timestamp,
	   dt_fim_p		timestamp,
	   ie_trunc_p		text,
	   qt_reincidencia_p	integer) FOR
	SELECT	dt_retorno
	from	table(pls_manipulacao_datas_pck.obter_intervalo_por_segundo(dt_inicio_p, dt_fim_p));	

c05 CURSOR(dt_inicio_p		timestamp,
	   dt_fim_p		timestamp) FOR
	SELECT	dt_retorno
	from	table(pls_manipulacao_datas_pck.obter_intervalo_por_minuto(dt_inicio_p, dt_fim_p, ie_trunc_p));
	
BEGIN
-- Agrupamento por mês
if (ie_tipo_agrupamento_p = 'M') then
	
	-- Obtém as datas com agrupamento mensal
	for r_C01 in C01(dt_inicio_p, dt_fim_p, ie_trunc_p, qt_reincidencia_p) loop
		dt_retorno_w.dt_retorno := r_C01.dt_retorno;
		RETURN NEXT dt_retorno_w;
	end loop;
-- Arupamento por semana
elsif (ie_tipo_agrupamento_p = 'S') then

	for r_C03 in C03(dt_inicio_p, dt_fim_p, ie_trunc_p, qt_reincidencia_p) loop
		dt_retorno_w.dt_retorno := r_C03.dt_retorno;
		RETURN NEXT dt_retorno_w;
	end loop;
-- Agrupamento por dia
elsif (ie_tipo_agrupamento_p = 'D') then

	-- Obtém as datas com agrupamento diário.
	for r_C02 in C02(dt_inicio_p, dt_fim_p, ie_trunc_p, qt_reincidencia_p) loop
		dt_retorno_w.dt_retorno := r_C02.dt_retorno;
		RETURN NEXT dt_retorno_w;
	end loop;
-- Agrupamento por segundos
elsif (ie_tipo_agrupamento_p = 'SS') then

	-- Obtém as datas com agrupamento diário.
	for r_C04 in C04(dt_inicio_p, dt_fim_p, ie_trunc_p, qt_reincidencia_p) loop
		dt_retorno_w.dt_retorno := r_C04.dt_retorno;
		RETURN NEXT dt_retorno_w;
	end loop;
elsif (ie_tipo_agrupamento_p = 'MI') then

	for r_c05_w in c05(dt_inicio_p, dt_fim_p) loop
		dt_retorno_w.dt_retorno := r_c05_w.dt_retorno;
		RETURN NEXT dt_retorno_w;
	end loop;
end if;
-- retorna todas as datas selecionadas.
return;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_manipulacao_datas_pck.obter_intervalo_datas ( dt_inicio_p timestamp, dt_fim_p timestamp, ie_tipo_agrupamento_p text, ie_trunc_p text default 'S', qt_reincidencia_p integer default 1) FROM PUBLIC;
