-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_manipulacao_datas_pck.obter_intervalo_por_mes ( dt_inicio_p timestamp, dt_fim_p timestamp, ie_trunc_p text default 'S', qt_reincidencia_p integer default 1) RETURNS SETOF T_DATA_RETORNO_DATA AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: 	Obter todas as datas de cada mes no intervalo entre as datas passadas por parâmetro.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta: 
[X] Objetos do dicionário [ X] Tasy (Delphi/Java) [X] Portal [X]  Relatórios [X] Outros:
------------------------------------------------------------------------------------------------------------------
Pontos de atenção: 

Alterações: 
------------------------------------------------------------------------------------------------------------------
jjung 06/08/2013 - Documentação da function.
------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
dt_retorno_w	t_data_retorno_row;
dt_atual_loop_w	timestamp;
dt_fim_w	timestamp;

BEGIN
-- Se a data de início for nula então não retorna nada.
if (dt_inicio_p IS NOT NULL AND dt_inicio_p::text <> '') then

	-- Se a data de fim for nula usa a data atual.
	if (coalesce(dt_fim_p::text, '') = '') then
	
		dt_fim_w := clock_timestamp();
	else
		dt_fim_w := dt_fim_p;
	end if;

	-- Inicializar a variável que controla o laço de repetição.
	dt_atual_loop_w := dt_inicio_p;

	-- Enquanto não alcançar a data final, adiciona a data atual do laço ao retorno e incrementa um mês a ela.
	while(dt_atual_loop_w <= dt_fim_w) loop
		dt_retorno_w.dt_retorno := dt_atual_loop_w;
		RETURN NEXT dt_retorno_w;
		
		if (ie_trunc_p = 'S') then
		
			dt_atual_loop_w := trunc(add_months(dt_atual_loop_w,qt_reincidencia_p),'month');
		else
			dt_atual_loop_w := add_months(dt_atual_loop_w,qt_reincidencia_p);
		end if;
	end loop;
end if;
-- Retorna todas as datas adicionadas ao retorno
return;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_manipulacao_datas_pck.obter_intervalo_por_mes ( dt_inicio_p timestamp, dt_fim_p timestamp, ie_trunc_p text default 'S', qt_reincidencia_p integer default 1) FROM PUBLIC;
