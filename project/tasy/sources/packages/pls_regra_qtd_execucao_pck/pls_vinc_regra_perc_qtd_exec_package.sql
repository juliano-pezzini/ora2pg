-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


/*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

CREATE OR REPLACE PROCEDURE pls_regra_qtd_execucao_pck.pls_vinc_regra_perc_qtd_exec ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type ) AS $body$
DECLARE


ds_sql_w      varchar(4000);
ds_campo_sql_w      varchar(100);
ds_order_by_sql_w    varchar(100);
ds_filtro_padrao_w    varchar(1000);
ds_filtro_item_glosado_w varchar(200);
nr_seq_populacao_w    pls_conta_proc.nr_sequencia%type;
nr_seq_grau_partic_null_w  pls_grau_participacao.nr_sequencia%type;

v_cur_w        pls_util_pck.t_cursor;
nr_seq_segurado_w    pls_conta.nr_seq_segurado%type;
nr_seq_conta_w      pls_conta.nr_sequencia%type;
cd_guia_referencia_w    pls_conta.cd_guia_ok%type;
dt_procedimento_w    timestamp;
nr_seq_grau_partic_w    pls_grau_participacao.nr_sequencia%type;
nr_seq_conta_proc_w    pls_conta_proc.nr_sequencia%type;
vl_liberado_w      pls_conta_proc.vl_liberado%type;
vl_procedimento_imp_w    pls_conta_proc.vl_procedimento_imp%type;
vl_proc_unitario_w    pls_conta_proc.vl_proc_unitario%type;
qt_proc_w      pls_conta_proc.qt_procedimento_imp%type;
qt_proc_soma_w      integer;
qt_indice_w      integer;
ds_compara_campo_w    varchar(200);
ds_compara_campo_anterior_w  varchar(200);

tab_nr_seq_conta_proc_w    dbms_sql.number_table;
tab_nr_seq_regra_tx_proc_w  dbms_sql.number_table;
ie_considerar_glosados_w	pls_parametros.ie_considerar_glosados%type;

-- busca as regras que devem ser processadas e os dados necessários das mesmas
C01 CURSOR(  nr_seq_lote_pc    pls_lote_protocolo_conta.nr_sequencia%type,
    nr_seq_protocolo_pc  pls_protocolo_conta.nr_sequencia%type,
    nr_seq_lote_processo_pc  pls_cta_lote_processo.nr_sequencia%type,
    nr_seq_conta_pc    pls_conta.nr_sequencia%type,
    nr_seq_conta_proc_pc  pls_conta_proc.nr_sequencia%type ) FOR
  SELECT  distinct a.nr_seq_regra_qtde_exec,
    b.ie_regra_execucao,
    b.ie_participacao
  from  pls_conta_proc_v     a,
    pls_regra_preco_qtde_proc  b
  where  a.nr_seq_lote_conta = nr_seq_lote_pc
  and  b.nr_sequencia = a.nr_seq_regra_qtde_exec
  and  coalesce(a.nr_seq_regra_tx_proc::text, '') = ''

union all

  SELECT  distinct a.nr_seq_regra_qtde_exec,
    b.ie_regra_execucao,
    b.ie_participacao
  from  pls_conta_proc_v     a,
    pls_regra_preco_qtde_proc  b
  where  a.nr_seq_protocolo = nr_seq_protocolo_pc
  and  b.nr_sequencia = a.nr_seq_regra_qtde_exec
  and  coalesce(a.nr_seq_regra_tx_proc::text, '') = ''
  
union all

  select  distinct a.nr_seq_regra_qtde_exec,
    c.ie_regra_execucao,
    c.ie_participacao
  from  pls_cta_lote_proc_conta   b,
    pls_conta_proc_v     a,
    pls_regra_preco_qtde_proc  c
        where    a.nr_seq_conta = b.nr_seq_conta
  and  b.nr_seq_lote_processo = nr_seq_lote_processo_pc
  and  c.nr_sequencia = a.nr_seq_regra_qtde_exec
  and  coalesce(a.nr_seq_regra_tx_proc::text, '') = ''
  
union all

  select  distinct a.nr_seq_regra_qtde_exec,
    b.ie_regra_execucao,
    b.ie_participacao
  from  pls_conta_proc_v     a,
    pls_regra_preco_qtde_proc  b
  where  a.nr_seq_conta = nr_seq_conta_pc
  and  coalesce(nr_seq_conta_proc_pc::text, '') = ''
  and  b.nr_sequencia = a.nr_seq_regra_qtde_exec
  and  coalesce(a.nr_seq_regra_tx_proc::text, '') = ''
  
union all

  select  distinct a.nr_seq_regra_qtde_exec,
    b.ie_regra_execucao,
    b.ie_participacao
  from  pls_conta_proc_v     a,
    pls_regra_preco_qtde_proc  b
        where    a.nr_sequencia = nr_seq_conta_proc_pc
  and  b.nr_sequencia = a.nr_seq_regra_qtde_exec
  and  coalesce(a.nr_seq_regra_tx_proc::text, '') = '';

BEGIN
ds_filtro_padrao_w := '';

select 	max(ie_considerar_glosados)
into STRICT ie_considerar_glosados_w
from	pls_parametros
where 	cd_estabelecimento = cd_estabelecimento_p;

if (ie_considerar_glosados_w = 'N') then
	ds_filtro_item_glosado_w := '  and   ((a.ie_glosa = ''N'') or (a.ie_tipo_conta = ''I''))            ';
end if;

-- monta os filtros que jamais mudarão dentro do sql dinâmico
if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then
  ds_filtro_padrao_w := ds_filtro_padrao_w || 'and a.nr_seq_lote_conta = :nr_seq_populacao          ' || pls_util_pck.enter_w;
  nr_seq_populacao_w := nr_seq_lote_p;
elsif (nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '') then
  ds_filtro_padrao_w := ds_filtro_padrao_w || 'and a.nr_seq_protocolo = :nr_seq_populacao         ' || pls_util_pck.enter_w;
  nr_seq_populacao_w := nr_seq_protocolo_p;
elsif (nr_seq_lote_processo_p IS NOT NULL AND nr_seq_lote_processo_p::text <> '') then
  ds_filtro_padrao_w := ds_filtro_padrao_w || 'and exists( select  1               ' || pls_util_pck.enter_w ||
      '           from  pls_cta_lote_proc_conta lote         ' || pls_util_pck.enter_w ||
      '           where  lote.nr_seq_lote_processo  = :nr_seq_populacao   ' || pls_util_pck.enter_w ||
      '           and     lote.nr_seq_conta      = a.nr_seq_conta)   ' || pls_util_pck.enter_w;
  nr_seq_populacao_w := nr_seq_lote_processo_p;
elsif (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
  ds_filtro_padrao_w := ds_filtro_padrao_w || 'and a.nr_sequencia = :nr_seq_populacao           ' || pls_util_pck.enter_w;
  nr_seq_populacao_w := nr_seq_conta_proc_p;
elsif (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then
  ds_filtro_padrao_w := ds_filtro_padrao_w || 'and a.nr_seq_conta = :nr_seq_populacao           ' || pls_util_pck.enter_w;
  nr_seq_populacao_w := nr_seq_conta_p;
end if;

-- busca o grau de participação que deve ser considerado quando não existir grau de participação informado
nr_seq_grau_partic_null_w := pls_util_cta_pck.pls_obter_grau_partic_null;

for r_C01_w in C01(nr_seq_lote_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p, nr_seq_conta_proc_p) loop

  ds_campo_sql_w     := '';
  ds_order_by_sql_w   := '';

  case(r_C01_w.ie_regra_execucao)
    when 'C' then
      -- por conta
      ds_campo_sql_w := ds_campo_sql_w || ' a.nr_seq_conta,' || pls_util_pck.enter_w;
      ds_order_by_sql_w := ds_order_by_sql_w || ' nr_seq_conta,' || pls_util_pck.enter_w;
    when 'M' then
      -- por mês da data de atendimento
      ds_campo_sql_w := ds_campo_sql_w || ' a.dt_procedimento_mes,' || pls_util_pck.enter_w;
      ds_order_by_sql_w := ds_order_by_sql_w || ' dt_procedimento_mes,' || pls_util_pck.enter_w;
    when 'D' then
      -- por dia da data de atendimento
      ds_campo_sql_w := ds_campo_sql_w || ' a.dt_procedimento_trunc,' || pls_util_pck.enter_w;
      ds_order_by_sql_w := ds_order_by_sql_w || ' dt_procedimento_trunc,' || pls_util_pck.enter_w;
    else
      -- por código da guia principal
      ds_campo_sql_w := ds_campo_sql_w || ' a.cd_guia_referencia,' || pls_util_pck.enter_w;
      ds_order_by_sql_w := ds_order_by_sql_w || ' cd_guia_referencia,' || pls_util_pck.enter_w;
  end case;

  -- considera como sendo um atendimento para cada grau de participação
  if (r_C01_w.ie_participacao = 'S') then

    ds_sql_w := '  select  a.nr_seq_segurado,                    ' || pls_util_pck.enter_w ||
          ds_campo_sql_w                         ||
          '    nvl(b.nr_seq_grau_partic, ' || nr_seq_grau_partic_null_w || ') nr_seq_grau_partic,    ' || pls_util_pck.enter_w ||
          '    a.nr_sequencia nr_seq_conta_proc,                ' || pls_util_pck.enter_w ||
          '    sum(distinct a.vl_liberado) vl_liberado,              ' || pls_util_pck.enter_w ||
          '    sum(distinct a.vl_procedimento_imp) vl_procedimento_imp,          ' || pls_util_pck.enter_w ||
          '    sum(distinct a.vl_proc_unitario) vl_proc_unitario,            ' || pls_util_pck.enter_w ||
          '    nvl(sum(distinct a.qt_procedimento_imp), 0) qt_proc            ' || pls_util_pck.enter_w ||
          '  from   pls_conta_proc_v   a,                  ' || pls_util_pck.enter_w ||
          '    pls_proc_participante   b                  ' || pls_util_pck.enter_w ||
          '  where   1 = 1                        ' || pls_util_pck.enter_w ||
        ds_filtro_padrao_w                         ||
          '  and   a.ie_regra_qtde_execucao = ''S''                ' || pls_util_pck.enter_w ||
          '  and   a.nr_seq_regra_qtde_exec = :nr_seq_regra              ' || pls_util_pck.enter_w ||
         ds_filtro_item_glosado_w||
          '  and   a.ie_status != ''D''                    ' || pls_util_pck.enter_w ||
          '  and   b.nr_seq_conta_proc = a.nr_sequencia                ' || pls_util_pck.enter_w ||
          '  and   (b.ie_status != ''C'' or b.ie_status is null)              ' || pls_util_pck.enter_w ||
        -- 30/01/2014 - A linha acima foi tratada deste modo por conta das migrações realizadas na Unimed São José do Rio Preto. (Na USJRP a maioria dos participantes está com o campo IE_STATUS nulo)
          '  group   by a.nr_seq_segurado,                    ' || pls_util_pck.enter_w ||
            ds_campo_sql_w                       ||
          '    b.nr_seq_grau_partic,                    ' || pls_util_pck.enter_w ||
          '    a.nr_sequencia                      ' || pls_util_pck.enter_w ||
          '  union all                        ' || pls_util_pck.enter_w ||
          '  select   a.nr_seq_segurado,                    ' || pls_util_pck.enter_w ||
          ds_campo_sql_w                         ||
          '    nvl(a.nr_seq_grau_partic, ' || nr_seq_grau_partic_null_w || ') nr_seq_grau_partic,    ' || pls_util_pck.enter_w ||
          '    a.nr_sequencia nr_seq_conta_proc,                ' || pls_util_pck.enter_w ||
          '    sum(a.vl_liberado) vl_liberado,                  ' || pls_util_pck.enter_w ||
          '    sum(a.vl_procedimento_imp) vl_procedimento_imp,              ' || pls_util_pck.enter_w ||
          '    sum(a.vl_proc_unitario) vl_proc_unitario,              ' || pls_util_pck.enter_w ||
          '    nvl(sum(a.qt_procedimento_imp), 0) qt_proc              ' || pls_util_pck.enter_w ||
          '  from   pls_conta_proc_v a                    ' || pls_util_pck.enter_w ||
          '  where   1 = 1                        ' || pls_util_pck.enter_w ||
        ds_filtro_padrao_w                         ||
          '  and   a.ie_regra_qtde_execucao = ''S''                ' || pls_util_pck.enter_w ||
          '  and   a.nr_seq_regra_qtde_exec = :nr_seq_regra              ' || pls_util_pck.enter_w ||
			ds_filtro_item_glosado_w||
          '  and   a.ie_status != ''D''                    ' || pls_util_pck.enter_w ||
          '  and   (  select  count(1)                    ' || pls_util_pck.enter_w ||
          '     from  pls_proc_participante c                  ' || pls_util_pck.enter_w ||
          '     where  c.nr_seq_conta_proc = a.nr_sequencia              ' || pls_util_pck.enter_w ||
          '     and   (c.ie_status != ''C'' or c.ie_status is null)) = 0          ' || pls_util_pck.enter_w ||
        -- 30/01/2014 - A linha acima foi tratada deste modo por conta das migrações realizadas na Unimed São José do Rio Preto. (Na USJRP a maioria dos participantes está com o campo IE_STATUS nulo)
          '  and   (a.nr_seq_grau_partic is not null or a.ie_tipo_guia = 5)          ' || pls_util_pck.enter_w ||
          '  group   by a.nr_seq_segurado,                    ' || pls_util_pck.enter_w ||
          ds_campo_sql_w                         ||
          '    nr_seq_grau_partic,                    ' || pls_util_pck.enter_w ||
          '    a.nr_sequencia                      ' || pls_util_pck.enter_w ||
          '  order   by nr_seq_segurado,                    ' || pls_util_pck.enter_w ||
          ds_order_by_sql_w                       ||
          '    nr_seq_grau_partic,                    ' || pls_util_pck.enter_w ||
          '    vl_liberado desc,                    ' || pls_util_pck.enter_w ||
          '    vl_procedimento_imp desc,                  ' || pls_util_pck.enter_w ||
          '    vl_proc_unitario desc,                    ' || pls_util_pck.enter_w ||
          '    nr_seq_conta_proc                    ';

    -- abre o cursor
    open v_cur_w for EXECUTE ds_sql_w using nr_seq_populacao_w, r_C01_w.nr_seq_regra_qtde_exec,
            nr_seq_populacao_w, r_C01_w.nr_seq_regra_qtde_exec;
  else
    -- não considera o grau de participação
    ds_sql_w := '  select  a.nr_seq_segurado,                    ' || pls_util_pck.enter_w ||
          ds_campo_sql_w                         ||
          '    null nr_seq_grau_partic,                  ' || pls_util_pck.enter_w ||
          '    a.nr_sequencia nr_seq_conta_proc,                ' || pls_util_pck.enter_w ||
          '    sum(a.vl_liberado) vl_liberado,                  ' || pls_util_pck.enter_w ||
          '    sum(a.vl_procedimento_imp) vl_procedimento_imp,              ' || pls_util_pck.enter_w ||
          '    sum(a.vl_proc_unitario) vl_proc_unitario,              ' || pls_util_pck.enter_w ||
          '    nvl(sum(a.qt_procedimento_imp), 0) qt_proc              ' || pls_util_pck.enter_w ||
          '  from   pls_conta_proc_v a                    ' || pls_util_pck.enter_w ||
          '  where   1 = 1                        ' || pls_util_pck.enter_w ||
          ds_filtro_padrao_w                       ||
          '  and   a.ie_regra_qtde_execucao = ''S''                ' || pls_util_pck.enter_w ||
          '  and   a.nr_seq_regra_qtde_exec = :nr_seq_regra              ' || pls_util_pck.enter_w ||
		ds_filtro_item_glosado_w||
          '  and   a.ie_status != ''D''                    ' || pls_util_pck.enter_w ||
          '  group   by a.nr_seq_segurado,                    ' || pls_util_pck.enter_w ||
          ds_campo_sql_w                         ||
          '    nr_seq_grau_partic,                    ' || pls_util_pck.enter_w ||
          '    a.nr_sequencia                      ' || pls_util_pck.enter_w ||
          '  order   by nr_seq_segurado,                    ' || pls_util_pck.enter_w ||
          ds_order_by_sql_w                       ||
          '    vl_liberado desc,                    ' || pls_util_pck.enter_w ||
          '    vl_procedimento_imp desc,                  ' || pls_util_pck.enter_w ||
          '    vl_proc_unitario desc,                    ' || pls_util_pck.enter_w ||
          '    nr_seq_conta_proc                    ';

    -- abre o cursor
    open v_cur_w for EXECUTE ds_sql_w using nr_seq_populacao_w, r_C01_w.nr_seq_regra_qtde_exec;
  end if;

  ds_compara_campo_w := '';
  ds_compara_campo_anterior_w := '';
  qt_proc_soma_w := 0;
  qt_indice_w := 0;
  loop
    if (r_C01_w.ie_regra_execucao = 'C') then
      -- faz o fetch preparado para conta
      fetch v_cur_w into   nr_seq_segurado_w, nr_seq_conta_w, nr_seq_grau_partic_w, nr_seq_conta_proc_w,
            vl_liberado_w, vl_procedimento_imp_w, vl_proc_unitario_w, qt_proc_w;

      -- esses campos serão utilizados em comparações, por isso armazenamos assim
      ds_compara_campo_w := nr_seq_segurado_w || nr_seq_conta_w || nr_seq_grau_partic_w;
    elsif (r_C01_w.ie_regra_execucao = 'A') then
      -- faz o fetch preaprado para a guia referencia
      fetch v_cur_w into   nr_seq_segurado_w, cd_guia_referencia_w, nr_seq_grau_partic_w, nr_seq_conta_proc_w,
            vl_liberado_w, vl_procedimento_imp_w, vl_proc_unitario_w, qt_proc_w;

      -- esses campos serão utilizados em comparações, por isso armazenamos assim
      ds_compara_campo_w := nr_seq_segurado_w || cd_guia_referencia_w || nr_seq_grau_partic_w;
    else
      -- faz o fetch preparado para data
      fetch v_cur_w into   nr_seq_segurado_w, dt_procedimento_w, nr_seq_grau_partic_w, nr_seq_conta_proc_w,
            vl_liberado_w, vl_procedimento_imp_w, vl_proc_unitario_w, qt_proc_w;

      -- esses campos serão utilizados em comparações, por isso armazenamos assim
      ds_compara_campo_w := nr_seq_segurado_w || dt_procedimento_w || nr_seq_grau_partic_w;
    end if;

    EXIT WHEN NOT FOUND; /* apply on v_cur_w */

    -- sempre que mudar os valores do campo zera a quantidade de execução
    if (ds_compara_campo_w != ds_compara_campo_anterior_w) then
      qt_proc_soma_w := 0;
    end if;

    qt_proc_soma_w := qt_proc_soma_w + qt_proc_w;

    tab_nr_seq_conta_proc_w(qt_indice_w) := nr_seq_conta_proc_w;
    -- obtém a regra de acordo com a quantidade de execução
    tab_nr_seq_regra_tx_proc_w(qt_indice_w) := pls_regra_qtd_execucao_pck.pls_obter_regra_tx(  r_C01_w.nr_seq_regra_qtde_exec, qt_proc_soma_w);

    if (qt_indice_w >= pls_util_cta_pck.qt_registro_transacao_w) then
      -- manda os registros para o banco se atingir a quantidade do lote
      CALL pls_regra_qtd_execucao_pck.pls_gravar_regra_tx(tab_nr_seq_conta_proc_w, tab_nr_seq_regra_tx_proc_w);

      -- Limpa as variáveis table
      tab_nr_seq_conta_proc_w.delete;
      tab_nr_seq_regra_tx_proc_w.delete;

      qt_indice_w := 0;
    else
      qt_indice_w := qt_indice_w + 1;
    end if;

    -- armazena os dados da comparação anterior
    ds_compara_campo_anterior_w := ds_compara_campo_w;
  end loop;
  close v_cur_w;
  -- manda o restante dos registros que eventualmente podem ter sobrado
  CALL pls_regra_qtd_execucao_pck.pls_gravar_regra_tx(tab_nr_seq_conta_proc_w, tab_nr_seq_regra_tx_proc_w);

  -- Limpa as variáveis table
  tab_nr_seq_conta_proc_w.delete;
  tab_nr_seq_regra_tx_proc_w.delete;

  qt_indice_w := 0;
end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_regra_qtd_execucao_pck.pls_vinc_regra_perc_qtd_exec ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type ) FROM PUBLIC;
